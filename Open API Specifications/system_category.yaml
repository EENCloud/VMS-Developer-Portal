---
openapi: 3.0.3
info:
  title: SYSTEM
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0'
    description: Eagle Eye Networks API Server
    variables:
      BaseUrl:
        default: api.cxxx.eagleeyenetworks.com
        description: >-
          HTTPS Base url to use for all API calls, retrieved from
          https://api.eagleeyenetworks.com/api/v3.0/clientSettings
security:
  - bearerAuth: []
tags:
  - name: Applications
    description: Applications that can get access to an account and interact with it.
  - name: Application OAuth Clients
    description: Registered OAuth clients that represent the application.
paths:
  /applications:
    get:
      operationId: listApplications
      description: >
        This endpoint allows retrieval of all applications accessible by the
        requesting user.  

        It is important to note that after using the pageSize parameter, the
        "totalSize" in the  response represents the total number of available
        applications, not the number of applications resulting from the query
        string.
      tags:
        - Applications
      parameters:
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedApplicationResponse'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    post:
      operationId: createApplication
      description: >
        This endpoint allows you to create a new application under the
        requesting user's account. A maximum of 100 applications can be created
        under the account.
      tags:
        - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationCreate'
      responses:
        '201':
          description: Application Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplication'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/applications/{applicationId}':
    parameters:
      - $ref: '#/components/parameters/applicationId'
    get:
      operationId: getApplication
      description: This endpoint allows you to retrieve a single application.
      tags:
        - Applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplication'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      operationId: updateApplication
      description: This endpoint allows you to update a single application.
      tags:
        - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationUpdate'
      responses:
        '204':
          description: Application Updated
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      operationId: deleteApplication
      description: This endpoint allows you to delete a single application.
      tags:
        - Applications
      responses:
        '204':
          description: Application deleted.
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/applications/{applicationId}/oauthClients':
    parameters:
      - $ref: '#/components/parameters/applicationId'
    get:
      parameters:
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      description: >
        This endpoint allows retrieval of all OAuth credentials for the given
        application.  

        It is important to note that after using the pageSize parameter, the
        "totalSize" in the response represents the total number of available
        OAuth credentials, not the number of OAuth credentials resulting from
        the query string.
      operationId: getOauthClients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedOauthClientResponse'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '406':
          $ref: '#/components/responses/notAcceptableError'
        '500':
          $ref: '#/components/responses/internalServerError'
      tags:
        - Application OAuth Clients
    post:
      description: >
        This endpoint allows you to create a new OAuth client for the given
        application. A maximum of 250 oauth client credentials can be created
        under the application.
      operationId: addOauthClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationOauthClientCreate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOauthClient'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '406':
          $ref: '#/components/responses/notAcceptableError'
        '409':
          $ref: '#/components/responses/conflict'
        '415':
          $ref: '#/components/responses/unsupportedMediaType'
        '500':
          $ref: '#/components/responses/internalServerError'
      tags:
        - Application OAuth Clients
  '/applications/{applicationId}/oauthClients/{clientId}':
    parameters:
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/clientId'
    get:
      description: This endpoint allows you to retrieve a specific OAuth client.
      operationId: getOauthClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOauthClient'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '406':
          $ref: '#/components/responses/notAcceptableError'
        '500':
          $ref: '#/components/responses/internalServerError'
      tags:
        - Application OAuth Clients
    patch:
      description: This endpoint allows you to update a specific Oauth client.
      tags:
        - Application OAuth Clients
      operationId: updateClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationOauthClientUpdate'
      responses:
        '204':
          description: Client Updated
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      description: >-
        This endpoint allows you to delete a specific OAuth client of a given
        application.
      operationId: deleteOauthClient
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '406':
          $ref: '#/components/responses/notAcceptableError'
        '500':
          $ref: '#/components/responses/internalServerError'
      tags:
        - Application OAuth Clients
  /languages:
    get:
      operationId: listLanguages
      description: >
        This endpoint allows you to retrieve a list of languages supported by
        the service.  

        It is important to note that after using the pageSize parameter, the
        "totalSize" in  the response represents the total number of available
        languages, not the number of languages resulting from the query string.
      tags:
        - Applications
      parameters:
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageResponse'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
  /timeZones:
    get:
      operationId: listTimeZones
      description: >
        This endpoint allows you to retrieve a list of the supported time
        zones.  
          
        It is important to note that after using the pageSize parameter, the
        "totalSize"  in the response represents the total number of available
        time zones, not the number of time zones resulting from the query
        string.
      tags:
        - Applications
      parameters:
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeZoneResponse'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiPaginatedApplicationResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseWithSize'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApiApplication'
    ApiPaginatedOauthClientResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseWithSize'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationOauthClient'
    ApiApplicationBase:
      type: object
      properties:
        name:
          type: string
          description: Name of the application.
          minLength: 1
          maxLength: 255
          example: Application name
        displayName:
          type: string
          description: Display name of the application.
          maxLength: 255
          example: Application display name
        website:
          type: string
          description: URL to the website of this application.
          format: uri
          example: 'https://een.com'
        developer:
          type: string
          description: Name of the developer/company which developed this application.
          maxLength: 255
          example: Eagle eye networks
        privacyPolicy:
          type: string
          description: URL to the privacy policy of this application.
          format: uri
          example: 'https://een.com/privacy'
        termsOfService:
          type: string
          description: URL to the terms of service of this application.
          format: uri
          example: 'https://een.com/tos'
        description:
          type: string
          description: The description of the application.
          maxLength: 512
          example: This is the web client
        isPublic:
          type: boolean
          description: >-
            Whether this application is intended to be public (available for
            other parties through an application store).
          example: false
        logo:
          type: string
          description: URL to the logo of the application.
          format: uri
          example: 'https://een.com/logo.png'
    ApiApplicationUpdate:
      allOf:
        - $ref: '#/components/schemas/ApiApplicationBase'
        - type: object
          properties:
            technicalContact:
              $ref: '#/components/schemas/ApplicationTechContactUpdate'
    ApiApplicationCreate:
      allOf:
        - $ref: '#/components/schemas/ApiApplicationBase'
        - type: object
          properties:
            technicalContact:
              $ref: '#/components/schemas/ApplicationTechContact'
          required:
            - name
            - description
            - isPublic
            - technicalContact
    ApiApplication:
      description: This object denotes a single Application.
      allOf:
        - type: object
          properties:
            id:
              type: string
              readOnly: true
              description: Unique identifier for application
              example: application Id
            technicalContact:
              $ref: '#/components/schemas/ApplicationTechContact'
        - $ref: '#/components/schemas/ApiApplicationBase'
      required:
        - id
        - name
        - description
        - isPublic
        - technicalContact
    ApplicationTechContactUpdate:
      type: object
      description: Request body for application update.
      properties:
        name:
          type: string
          description: First name of point of contact for this application.
          minLength: 1
          maxLength: 512
          example: Prakash
        lastName:
          type: string
          description: Last name of the person to contact for this application.
          maxLength: 256
          example: Singh
        email:
          type: string
          description: Email id of the person to contact for this application.
          format: email
          maxLength: 75
          example: abc@gmail.com
        phone:
          type: string
          description: Phone number of the person to contact for this application.
          maxLength: 30
          example: (555) 555-1234
    ApplicationTechContact:
      allOf:
        - $ref: '#/components/schemas/ApplicationTechContactUpdate'
      required:
        - name
        - email
    ApplicationOauthClientUpdate:
      type: object
      description: Request body for oauth client update.
      properties:
        name:
          type: string
          description: Name of the oauth client.
          example: client-name
          minLength: 1
          maxLength: 256
        redirectUris:
          type: array
          items:
            type: string
            description: List of allowed redirect URIs support by the client.
            format: uri
          example:
            - 'https://google.co.in/'
            - 'https://google.nl/'
          minItems: 1
          maxItems: 250
        loginUris:
          type: array
          items:
            type: string
            description: >-
              List of allowed login URIs support by the client. Redirecting to
              this URL will generate a new authentication request.
            format: uri
          example:
            - 'https://sample.com/login'
            - 'https://sample.nl/login'
          maxItems: 250
    ApplicationOauthClientCreate:
      description: Request body for creating a new OAuth client
      allOf:
        - $ref: '#/components/schemas/ApplicationOauthClientUpdate'
        - type: object
          properties:
            type:
              type: string
              description: >-
                This defines the type of this client . Clients are CONFIDENTIAL
                by default.
              enum:
                - public
                - confidential
              default: confidential
              example: confidential
      required:
        - name
        - redirectUris
    ApplicationOauthClient:
      allOf:
        - type: object
          properties:
            id:
              maxLength: 255
              type: string
              description: Unique client identifier
              example: e005968e714911eda1eb0242ac120002
            secret:
              maxLength: 255
              type: string
              description: String representing a secret passphrase.
              example: NnjRRTOYAlGpqedN65OLf4sPMFH8kGbG
            scopes:
              type: array
              items:
                type: string
              example:
                - vms.all
        - $ref: '#/components/schemas/ApplicationOauthClientCreate'
      required:
        - id
        - secret
        - scopes
    PaginatedResponseWithSize:
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages and  the total number of results.  
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseNoTotalSize'
        - properties:
            totalSize:
              type: integer
              readOnly: true
              description: |
                Size of the total result set.
          required:
            - totalSize
    PaginatedResponseNoTotalSize:
      type: object
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages.
      properties:
        nextPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the next page. The value of this token is passed
            into the field pageToken.  This value can be null if there is no
            next page.
        prevPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the previous page. The value of this token is
            passed into the field pageToken.  This value can be null of there is
            no previous page.
        results:
          type: array
          readOnly: true
          description: The result set from a collection API call.
          items:
            type: object
      required:
        - nextPageToken
        - prevPageToken
        - results
    ApiV3Error:
      type: object
      properties:
        code:
          description: HTTP code defined in EEN Standard Code Values
          type: integer
        status:
          description: A string enum describing the code
          type: string
          enum:
            - cancelled
            - unknown
            - invalidArgument
            - deadlineExceeded
            - notFound
            - conflict
            - permissionDenied
            - resourceExhausted
            - failedPrecondition
            - aborted
            - outOfRange
            - unimplemented
            - internal
            - unavailable
            - dataLoss
            - unauthenticated
            - mediaTypeNotSupported
            - acceptNotSupported
            - methodNotSupported
            - tooManyRequests
        message:
          description: Developer friendly human readable error message in English
          type: string
        details:
          description: An array of extensible objects that define error information
          type: array
          items:
            $ref: '#/components/schemas/ExceptionDetail'
      required:
        - code
        - status
        - message
        - details
    ExceptionDetail:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ErrorInfoExceptionDetail'
        - $ref: '#/components/schemas/BadRequestExceptionDetail'
        - $ref: '#/components/schemas/ResourceInfoExceptionDetail'
      discriminator:
        propertyName: type
        mapping:
          errorInfo: '#/components/schemas/ErrorInfoExceptionDetail'
          badRequest: '#/components/schemas/BadRequestExceptionDetail'
          resourceInfo: '#/components/schemas/ResourceInfoExceptionDetail'
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
            - badRequest
            - resourceInfo
      required:
        - type
    ErrorInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
        reason:
          description: >
            The reason for the error. This is a constant value that identifies
            the proximate cause of the

            error. Error reasons are unique within a particular domain of
            errors.
          type: string
          enum:
            - unauthenticated
            - unexpectedArgument
            - missingRequiredArgument
            - wrongArgumentValue
            - invalidPermission
            - wrongEdition
            - wrongAccountType
            - resourceNotFound
            - endpointNotFound
            - methodNotSupported
            - unexpectedError
            - acceptNotSupported
            - alreadyExists
            - foreignKeyConflict
            - childDevicesExist
            - contentNotSupported
            - deadlineExpired
            - tooManyRequests
            - deviceUnavailable
            - serviceUnavailable
            - invalidJSON
            - resourceLocked
            - notSupportedOnBridge
            - outOfRetention
            - deviceIdentificationFailed
            - credentialValidationFailed
            - credentialSetupFailed
            - localUrlValidationFailed
            - hwRegistrationFailed
            - failedAddingCameraAfterValidation
            - neverConnected
            - reconnectFailed
            - unsupportedModel
            - purged
            - userBlocked
            - userTemporarilyBlocked
            - quotaExceeded
        domain:
          description: |
            Logical grouping to which the "reason" belongs
          type: string
        metadata:
          $ref: '#/components/schemas/ExceptionMetadata'
    BadRequestExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - badRequest
        argumentViolations:
          type: array
          items:
            $ref: '#/components/schemas/ArgumentViolation'
    ArgumentViolation:
      properties:
        argumentName:
          type: string
          description: Name of the argument
        description:
          type: string
          description: Description of the violation
    ResourceInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - resourceInfo
        resource:
          description: 'Referenced resource type, eg "cameras", "bridges", or "locations".'
          type: string
        ids:
          type: array
          description: Identities of resources
          items:
            type: string
    ExceptionMetadata:
      properties:
        path:
          description: Path of the request
          type: string
        method:
          description: Method of the request
          type: string
    PaginatedLanguageResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseWithSize'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Language'
    Language:
      type: object
      description: Represents a langugage that is supported by the Eagle Eye Networks API.
      properties:
        tag:
          type: string
          description: >
            IETF language tag used as main identifier of the language in the
            Eagle Eye Networks API. The format can be just the two character
            "primary language subtag" or a combination of  the two character
            "primary language subtag" and 2 character "region subtag".
          example: pt-BR
          pattern: '^[a-z]{2}(-[A-Z]{2})?$'
        name:
          type: string
          description: >
            Name of the language in native language, with an optional region in
            parentheses, eg. ‘Espanol’ for Spanish.
          example: Português (Brasil)
      required:
        - tag
        - name
    PaginatedTimeZoneResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseWithSize'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/TimeZone'
    TimeZone:
      type: object
      description: >
        Represents a time zone that is supported by the Eagle Eye Networks API.
        Designed as an object to allow future extension by adding new fields.
      properties:
        name:
          type: string
          description: >
            Name of the time zone in "tz database" format of "Area/Location" us
            as identifier of the time zone in the EEN API.
          example: America/New_York
  parameters:
    clientId:
      name: clientId
      in: path
      description: Identifier of a OAuth client
      required: true
      schema:
        type: string
        maxLength: 255
    applicationId:
      name: applicationId
      in: path
      description: Identifier of an application
      required: true
      schema:
        type: string
    pageToken:
      in: query
      name: pageToken
      description: >
        Token string value that references a page for pagination. This value is
        received when retrieving the first page in the `nextPageToken` and
        `prevPageToken` fields.
      example: b2Zmc2V0PTEwJmxpbWl0PTEw
      required: false
      schema:
        type: string
    pageSize:
      in: query
      name: pageSize
      description: >
        The number of entries to return per page. The maximum range of valid
        page sizes is documented with minimum and  maximum values, but the range
        might be further limited dynamically based on the requested information,
        account, and system status. Values outside of the (dynamic) allowed
        range will not result in an error, but will be clamped to the nearest
        limit. Thus, logic to detect the last page should not be based on
        comparing the requested size with the received size, but on the
        existence of a `nextPageToken` value.
      example: 100
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 100
  responses:
    validationError:
      description: >-
        The supplied object is invalid. Error detail will contain the validation
        error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            unexpectedArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Unexpected argument: name'
                details:
                  - type: errorInfo
                    reason: unexpectedArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            missingRequiredArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Missing required arguments: name, id'
                details:
                  - type: errorInfo
                    reason: missingRequiredArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidJSON:
              value:
                code: 400
                status: invalidArgument
                message: Invalid JSON
                details:
                  - type: errorInfo
                    reason: invalidJSON
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Invalid Argument: Argument name is too long'
                details:
                  - type: errorInfo
                    reason: wrongArgumentValue
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: badRequest
                    argumentViolations:
                      - argumentName: name
                        description: Name is too long
    unauthorized:
      description: You are not authenticated. Please authenticate and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 401
            status: unauthenticated
            message: The client caller does not have a valid authentication credential
            details:
              - type: errorInfo
                reason: unauthenticated
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    forbidden:
      description: You have no permission to access the specified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            invalidPermission:
              value:
                code: 403
                status: permissionDenied
                message: >-
                  The client caller does not have permission for the specified
                  operation
                details:
                  - type: errorInfo
                    reason: invalidPermission
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            wrongEdition:
              value:
                code: 403
                status: permissionDenied
                message: This feature is not enabled for the account
                details:
                  - type: errorInfo
                    reason: wrongEdition
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
            wrongAccountType:
              value:
                code: 403
                status: permissionDenied
                message: This feature is only available for end users
                details:
                  - type: errorInfo
                    reason: wrongAccountType
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
    resourceNotFound:
      description: Referenced resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            endpointNotFound:
              value:
                code: 404
                status: notFound
                message: The API endpoint was not found
                details:
                  - type: errorInfo
                    reason: endpointNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            resourceNotFound:
              value:
                code: 404
                status: notFound
                message: The resource was not found
                details:
                  - type: errorInfo
                    reason: resourceNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: resourceInfo
                    resource: <resource>
                    ids:
                      - <ids>
    notAcceptableError:
      description: Requested content type for response not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 406
            status: acceptNotSupported
            message: Requested content type for response not supported
            details:
              - type: errorInfo
                reason: acceptNotSupported
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    conflict:
      description: >-
        There was a conflict while trying to perform your request. See error
        details for more information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            alreadyExists:
              value:
                code: 409
                status: conflict
                message: The resource already exists
                details:
                  - type: errorInfo
                    reason: alreadyExists
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            foreignKeyConflict:
              value:
                code: 409
                status: conflict
                message: >-
                  The resource cannot be deleted as other resources link to it.
                  Please remove the links or delete the other resources first
                  before deleting this resource.
                details:
                  - type: errorInfo
                    reason: foreignKeyConflict
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            childDevicesExist:
              value:
                code: 409
                status: conflict
                message: >-
                  This device can not be deleted before all attached cameras
                  have been deleted. Please delete all cameras and then delete
                  this device.
                details:
                  - type: errorInfo
                    reason: childDevicesExist
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
    unsupportedMediaType:
      description: Content type of request body not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 415
            status: mediaTypeNotSupported
            message: >-
              Unsupported content type: `text/plain`, should be one of:
              `application/json`
            details:
              - type: errorInfo
                reason: contentNotSupported
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    internalServerError:
      description: Something went wrong in the server. Please try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 500
            status: internal
            message: An internal error has occurred. Please try again later.
            details:
              - type: errorInfo
                reason: unexpectedError
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
x-readme:
  explorer-enabled: true
