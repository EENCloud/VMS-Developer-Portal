---
openapi: 3.0.3
info:
  title: VEHICLE SURVEILLANCE PACKAGE
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0'
    description: Eagle Eye Networks API Server
    variables:
      BaseUrl:
        default: api.cxxx.eagleeyenetworks.com
        description: >-
          HTTPS Base url to use for all API calls, retrieved from
          https://api.eagleeyenetworks.com/api/v3.0/clientSettings
security:
  - bearerAuth: []
tags:
  - name: LPR Events
    description: LPR plate read events.
  - name: LPR Rules
    description: Rules that transform LPR plate read events into actions and alerts.
  - name: LPR Vehicle Lists
    description: Lists of vehicles that can be used in LPR rules.
paths:
  /lprEvents:
    get:
      operationId: listLprEvents
      tags:
        - LPR Events
      description: >-
        Fetches license plate recognition events. Filters can be applied to
        search for specific events based on

        the make and model of the vehicle, the color of the vehicle, the
        direction of the vehicle, the access

        type, the actor, and the user data. For a list of possible values for
        each field, refer to the

        [`/lprEvents:listFieldValues`](ref:listlpreventfieldvalues) endpoint.


        The `include` parameter can be used to specify which data schemas should
        be included in the response. If no

        `include` parameter is provided, the response will include only the base
        event envelope.
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/plateConfidence__lte'
        - $ref: '#/components/parameters/plate'
        - $ref: '#/components/parameters/plate__fuzzy'
        - $ref: '#/components/parameters/plate__contains'
        - $ref: '#/components/parameters/type__in'
        - $ref: '#/components/parameters/recognizedText'
        - $ref: '#/components/parameters/recognizedText__contains'
        - $ref: '#/components/parameters/recognizedText__fuzzy'
        - $ref: '#/components/parameters/direction__in'
        - $ref: '#/components/parameters/accessType__in'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/color__in'
        - $ref: '#/components/parameters/make__in'
        - $ref: '#/components/parameters/bodyType__in'
        - $ref: '#/components/parameters/userData'
        - $ref: '#/components/parameters/data.een.dotNumberRecognition.v1.regNumber'
        - $ref: >-
            #/components/parameters/data.een.dotNumberRecognition.v1.regNumber__contains
        - $ref: >-
            #/components/parameters/data.een.dotNumberRecognition.v1.regNumber__fuzzy
        - $ref: '#/components/parameters/data.een.truckNumberRecognition.v1.regNumber'
        - $ref: >-
            #/components/parameters/data.een.truckNumberRecognition.v1.regNumber__contains
        - $ref: >-
            #/components/parameters/data.een.truckNumberRecognition.v1.regNumber__fuzzy
        - $ref: >-
            #/components/parameters/data.een.trailerNumberRecognition.v1.regNumber
        - $ref: >-
            #/components/parameters/data.een.trailerNumberRecognition.v1.regNumber__contains
        - $ref: >-
            #/components/parameters/data.een.trailerNumberRecognition.v1.regNumber__fuzzy
        - $ref: '#/components/parameters/data.een.lprPlateRead.v1.plate'
        - $ref: '#/components/parameters/data.een.lprPlateRead.v1.plate__contains'
        - $ref: '#/components/parameters/data.een.lprPlateRead.v1.plate__fuzzy'
        - $ref: '#/components/parameters/data.een.recognizedText.v1.value'
        - $ref: '#/components/parameters/data.een.recognizedText.v1.value__contains'
        - $ref: '#/components/parameters/data.een.recognizedText.v1.value__fuzzy'
        - $ref: >-
            #/components/parameters/data.een.vspInsightsSummary.v1.insightType__in
        - $ref: '#/components/parameters/searchRelatedEventData'
        - $ref: '#/components/parameters/relatedEvents.rel'
        - $ref: '#/components/parameters/vehicleListId__in'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - in: query
          name: include
          style: form
          explode: false
          description: Provide fields to be returned in response body
          schema:
            type: array
            items:
              type: string
              enum:
                - data.een.objectDetection.v1
                - data.een.lprDetection.v1
                - data.een.fullFrameImageUrl.v1
                - data.een.croppedFrameImageUrl.v1
                - data.een.vehicleAttributes.v1
                - data.een.lprAccessType.v1
                - data.een.userData.v1
                - data.een.creatorDetails.v1
                - data.een.dotNumberRecognition.v1
                - data.een.truckNumberRecognition.v1
                - data.een.trailerNumberRecognition.v1
                - data.een.recognizedText.v1
                - data.een.vehicleListInfo.v1
                - data.een.vspInsightsSummary.v1
                - relatedEvents
                - relatedEvents.event
      responses:
        '200':
          description: List of events matching search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprSearchResult'
              examples:
                LPR Search without any Filters:
                  value:
                    totalSize: 2
                    nextPageToken: ''
                    prevPageToken: ''
                    results:
                      - id: nINlL0YuoRAnv9QcHKXi
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.lprPlateReadEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.objectClassification.v1
                          - een.lprDetection.v1
                          - een.vehicleAttributes.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                          - een.vehicleListInfo.v1
                          - een.vspInsightsSummary.v1
                        data:
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.lprDetection.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            plateBoundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                            plate: ABC1234
                            plateConfidence: 0.99
                            plateRegion: US-NY
                            plateRegionConfidence: 0.93
                            direction: exit
                          - type: een.vehicleAttributes.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            color: yellow
                            colorConfidence: 0.89
                            make: volvo
                            makeDisplay: Toyota
                            makeConfidence: 0.87
                            model: Camry
                            modelConfidence: 0.75
                            bodyType: car
                            bodyTypeConfidence: 0.67
                            year: 2007
                            yearConfidence: 0.56
                            orientation: rear
                            parked: true
                            parkedConfidence: 0.75
                          - type: een.lprAccessType.v1
                            creatorId: een.lpr
                            accessType: allow
                            vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                          - type: een.userData.v1
                            creatorId: een.lpr
                            apartmentNum: 105A
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                          - type: een.vehicleListInfo.v1
                            vehicleListId: 5de856b5-f450-4f47-bdcf-816ce8a353e2
                            vehicleListName: Employee list
                          - type: een.vspInsightsSummary.v1
                            insightType: new
                            description: First appearance of this plate in this account
                          - type: een.vspInsightsSummary.v1
                            insightType: hotlist
                            description: >-
                              This license plate is marked as a hotlisted
                              vehicle
                      - id: nINlL0YuoRAnv9QcHKXj
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.fleetCodeRecognitionEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.dotNumberRecognition.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                        data:
                          - type: een.dotNumberRecognition.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            regNumber: ABC1234
                            regNumberConfidence: 0.99
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                type__in=een.lprPlateReadEvent.v1&recognizedText=ABC1234&searchRelatedEventData=False:
                  value:
                    totalSize: 1
                    nextPageToken: ''
                    prevPageToken: ''
                    results:
                      - id: nINlL0YuoRAnv9QcHKXi
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.lprPlateReadEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.objectClassification.v1
                          - een.lprDetection.v1
                          - een.vehicleAttributes.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                          - een.vehicleListInfo.v1
                          - een.vspInsightsSummary.v1
                        data:
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.lprDetection.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            plateBoundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                            plate: ABC1234
                            plateConfidence: 0.99
                            plateRegion: US-NY
                            plateRegionConfidence: 0.93
                            direction: exit
                          - type: een.vehicleAttributes.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            color: yellow
                            colorConfidence: 0.89
                            make: volvo
                            makeDisplay: Toyota
                            makeConfidence: 0.87
                            model: Camry
                            modelConfidence: 0.75
                            bodyType: car
                            bodyTypeConfidence: 0.67
                            year: 2007
                            yearConfidence: 0.56
                            orientation: rear
                            parked: true
                            parkedConfidence: 0.75
                          - type: een.lprAccessType.v1
                            creatorId: een.lpr
                            accessType: allow
                            vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                          - type: een.userData.v1
                            creatorId: een.lpr
                            apartmentNum: 105A
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                          - type: een.vehicleListInfo.v1
                            vehicleListId: 5de856b5-f450-4f47-bdcf-816ce8a353e2
                            vehicleListName: Employee list
                          - type: een.vspInsightsSummary.v1
                            insightType: new
                            description: First appearance of this plate in this account
                          - type: een.vspInsightsSummary.v1
                            insightType: hotlist
                            description: >-
                              This license plate is marked as a hotlisted
                              vehicle
                        relatedEvents:
                          - id: nINlL0YuoRAnv9QcHKXa
                            rel: child
                            event:
                              id: nINlL0YuoRAnv9QcHKXa
                              startTimestamp: '2021-04-23T00:00:00.000+00:00'
                              endTimestamp: '2021-04-23T00:00:00.000+00:00'
                              span: true
                              accountId: '00001106'
                              actorId: 100d4c41
                              actorAccountId: '00001106'
                              actorType: camera
                              creatorId: een.lpr
                              type: een.fleetCodeRecognitionEvent.v1
                              dataSchemas:
                                - een.objectDetection.v1
                                - een.dotNumberRecognition.v1
                                - een.fullFrameImageUrl.v1
                                - een.croppedFrameImageUrl.v1
                                - een.creatorDetails.v1
                              data:
                                - type: een.dotNumberRecognition.v1
                                  creatorId: een.lpr
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  regNumber: '123456'
                                  regNumberConfidence: 0.99
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                - type: een.objectDetection.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  boundingBox:
                                    - 0.78
                                    - 0.26
                                    - 0.83
                                    - 0.28
                                - type: een.croppedFrameImageUrl.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                - type: een.fullFrameImageUrl.v1
                                  creatorId: een.lpr
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  feedType: main
                                - type: een.creatorDetails.v1
                                  creatorId: een.lpr
                                  id: een.lpr
                                  vendor: Eagle Eye Networks
                                  application: Cloud License Plate Recognition
                                  hardwareModel: EN-CDUD-005a
                                  version: 20230318.082522.039235885
                                  needsValidation: false
                type__in=een.lprPlateReadEvent.v1&recognizedText=ABC1234&searchRelatedEventData=True:
                  value:
                    totalSize: 1
                    nextPageToken: ''
                    prevPageToken: ''
                    results:
                      - id: nINlL0YuoRAnv9QcHKXi
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.lprPlateReadEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.objectClassification.v1
                          - een.lprDetection.v1
                          - een.vehicleAttributes.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                          - een.vehicleListInfo.v1
                          - een.vspInsightsSummary.v1
                        data:
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.lprDetection.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            plateBoundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                            plate: ABC1234
                            plateConfidence: 0.99
                            plateRegion: US-NY
                            plateRegionConfidence: 0.93
                            direction: exit
                          - type: een.vehicleAttributes.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            color: yellow
                            colorConfidence: 0.89
                            make: volvo
                            makeDisplay: Toyota
                            makeConfidence: 0.87
                            model: Camry
                            modelConfidence: 0.75
                            bodyType: car
                            bodyTypeConfidence: 0.67
                            year: 2007
                            yearConfidence: 0.56
                            orientation: rear
                            parked: true
                            parkedConfidence: 0.75
                          - type: een.lprAccessType.v1
                            creatorId: een.lpr
                            accessType: allow
                            vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                          - type: een.userData.v1
                            creatorId: een.lpr
                            apartmentNum: 105A
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                          - type: een.vehicleListInfo.v1
                            vehicleListId: 5de856b5-f450-4f47-bdcf-816ce8a353e2
                            vehicleListName: Employee list
                          - type: een.vspInsightsSummary.v1
                            insightType: new
                            description: First appearance of this plate in this account
                          - type: een.vspInsightsSummary.v1
                            insightType: hotlist
                            description: >-
                              This license plate is marked as a hotlisted
                              vehicle
                        relatedEvents:
                          - id: nINlL0YuoRAnv9QcHKXa
                            rel: child
                            event:
                              id: nINlL0YuoRAnv9QcHKXa
                              startTimestamp: '2021-04-23T00:00:00.000+00:00'
                              endTimestamp: '2021-04-23T00:00:00.000+00:00'
                              span: true
                              accountId: '00001106'
                              actorId: 100d4c41
                              actorAccountId: '00001106'
                              actorType: camera
                              creatorId: een.lpr
                              type: een.fleetCodeRecognitionEvent.v1
                              dataSchemas:
                                - een.objectDetection.v1
                                - een.dotNumberRecognition.v1
                                - een.fullFrameImageUrl.v1
                                - een.croppedFrameImageUrl.v1
                                - een.creatorDetails.v1
                              data:
                                - type: een.dotNumberRecognition.v1
                                  creatorId: een.lpr
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  regNumber: '123456'
                                  regNumberConfidence: 0.99
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                - type: een.objectDetection.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  boundingBox:
                                    - 0.78
                                    - 0.26
                                    - 0.83
                                    - 0.28
                                - type: een.croppedFrameImageUrl.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                - type: een.fullFrameImageUrl.v1
                                  creatorId: een.lpr
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  feedType: main
                                - type: een.creatorDetails.v1
                                  creatorId: een.lpr
                                  id: een.lpr
                                  vendor: Eagle Eye Networks
                                  application: Cloud License Plate Recognition
                                  hardwareModel: EN-CDUD-005a
                                  version: 20230318.082522.039235885
                                  needsValidation: false
                'type__in=een.lprPlateReadEvent.v1,een.fleetCodeRecognitionEvent.v1&recognizedText=ABC1234&searchRelatedEventData=True':
                  value:
                    totalSize: 2
                    nextPageToken: ''
                    prevPageToken: ''
                    results:
                      - id: nINlL0YuoRAnv9QcHKXi
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.lprPlateReadEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.objectClassification.v1
                          - een.lprDetection.v1
                          - een.vehicleAttributes.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                          - een.vehicleListInfo.v1
                          - een.vspInsightsSummary.v1
                        data:
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.lprDetection.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            plateBoundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                            plate: ABC1234
                            plateConfidence: 0.99
                            plateRegion: US-NY
                            plateRegionConfidence: 0.93
                            direction: exit
                          - type: een.vehicleAttributes.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            color: yellow
                            colorConfidence: 0.89
                            make: volvo
                            makeDisplay: Toyota
                            makeConfidence: 0.87
                            model: Camry
                            modelConfidence: 0.75
                            bodyType: car
                            bodyTypeConfidence: 0.67
                            year: 2007
                            yearConfidence: 0.56
                            orientation: rear
                            parked: true
                            parkedConfidence: 0.75
                          - type: een.lprAccessType.v1
                            creatorId: een.lpr
                            accessType: allow
                            vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                          - type: een.userData.v1
                            creatorId: een.lpr
                            apartmentNum: 105A
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                          - type: een.vehicleListInfo.v1
                            vehicleListId: 5de856b5-f450-4f47-bdcf-816ce8a353e2
                            vehicleListName: Employee list
                          - type: een.vspInsightsSummary.v1
                            insightType: count
                            value: 18
                            description: Detected 18 times in this account
                          - type: een.vspInsightsSummary.v1
                            insightType: hotlist
                            description: >-
                              This license plate is marked as a hotlisted
                              vehicle
                        relatedEvents:
                          - id: nINlL0YuoRAnv9QcHKXa
                            rel: child
                            event:
                              id: nINlL0YuoRAnv9QcHKXa
                              startTimestamp: '2021-04-23T00:00:00.000+00:00'
                              endTimestamp: '2021-04-23T00:00:00.000+00:00'
                              span: true
                              accountId: '00001106'
                              actorId: 100d4c41
                              actorAccountId: '00001106'
                              actorType: camera
                              creatorId: een.lpr
                              type: een.fleetCodeRecognitionEvent.v1
                              dataSchemas:
                                - een.objectDetection.v1
                                - een.dotNumberRecognition.v1
                                - een.fullFrameImageUrl.v1
                                - een.croppedFrameImageUrl.v1
                                - een.creatorDetails.v1
                              data:
                                - type: een.dotNumberRecognition.v1
                                  creatorId: een.lpr
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  regNumber: '123456'
                                  regNumberConfidence: 0.99
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                - type: een.objectDetection.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  boundingBox:
                                    - 0.78
                                    - 0.26
                                    - 0.83
                                    - 0.28
                                - type: een.croppedFrameImageUrl.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                - type: een.fullFrameImageUrl.v1
                                  creatorId: een.lpr
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                                  timestamp: '2021-04-23T00:00:00.000+00:00'
                                  feedType: main
                                - type: een.creatorDetails.v1
                                  creatorId: een.lpr
                                  id: een.lpr
                                  vendor: Eagle Eye Networks
                                  application: Cloud License Plate Recognition
                                  hardwareModel: EN-CDUD-005a
                                  version: 20230318.082522.039235885
                                  needsValidation: false
                      - id: nINlL0YuoRAnv9QcHKXj
                        startTimestamp: '2021-04-22T00:00:00.000+00:00'
                        endTimestamp: '2021-04-22T00:00:00.000+00:00'
                        span: true
                        accountId: '00001106'
                        actorId: 100d4c41
                        actorAccountId: '00001106'
                        actorType: camera
                        creatorId: een.lpr
                        type: een.fleetCodeRecognitionEvent.v1
                        dataSchemas:
                          - een.objectDetection.v1
                          - een.dotNumberRecognition.v1
                          - een.fullFrameImageUrl.v1
                          - een.croppedFrameImageUrl.v1
                          - een.creatorDetails.v1
                        data:
                          - type: een.dotNumberRecognition.v1
                            creatorId: een.lpr
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            regNumber: ABC1234
                            regNumberConfidence: 0.99
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                          - type: een.objectDetection.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            boundingBox:
                              - 0.78
                              - 0.26
                              - 0.83
                              - 0.28
                          - type: een.croppedFrameImageUrl.v1
                            creatorId: een.lpr
                            objectId: >-
                              camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                          - type: een.fullFrameImageUrl.v1
                            creatorId: een.lpr
                            httpsUrl: >-
                              https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                            timestamp: '2021-04-22T00:00:00.000+00:00'
                            feedType: main
                          - type: een.creatorDetails.v1
                            creatorId: een.lpr
                            id: een.lpr
                            vendor: Eagle Eye Networks
                            application: Cloud License Plate Recognition
                            hardwareModel: EN-CDUD-005a
                            version: 20230318.082522.039235885
                            needsValidation: false
                        relatedEvents:
                          - id: nINlL0YuoRAnv9QcHKXb
                            rel: parent
                            event:
                              id: nINlL0YuoRAnv9QcHKXb
                              startTimestamp: '2021-04-22T00:00:00.000+00:00'
                              endTimestamp: '2021-04-22T00:00:00.000+00:00'
                              span: true
                              accountId: '00001106'
                              actorId: 100d4c41
                              actorAccountId: '00001106'
                              actorType: camera
                              creatorId: een.lpr
                              type: een.lprPlateReadEvent.v1
                              dataSchemas:
                                - een.objectDetection.v1
                                - een.objectClassification.v1
                                - een.lprDetection.v1
                                - een.vehicleAttributes.v1
                                - een.fullFrameImageUrl.v1
                                - een.croppedFrameImageUrl.v1
                                - een.creatorDetails.v1
                              data:
                                - type: een.objectDetection.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  timestamp: '2021-04-22T00:00:00.000+00:00'
                                  boundingBox:
                                    - 0.78
                                    - 0.26
                                    - 0.83
                                    - 0.28
                                - type: een.lprDetection.v1
                                  creatorId: een.lpr
                                  timestamp: '2021-04-22T00:00:00.000+00:00'
                                  plateBoundingBox:
                                    - 0.78
                                    - 0.26
                                    - 0.83
                                    - 0.28
                                  plate: ABC546
                                  plateConfidence: 0.99
                                  plateRegion: US-NY
                                  plateRegionConfidence: 0.93
                                  direction: exit
                                - type: een.vehicleAttributes.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  timestamp: '2021-04-22T00:00:00.000+00:00'
                                  color: yellow
                                  colorConfidence: 0.89
                                  make: volvo
                                  makeDisplay: Toyota
                                  makeConfidence: 0.87
                                  model: Camry
                                  modelConfidence: 0.75
                                  bodyType: car
                                  bodyTypeConfidence: 0.67
                                  year: 2007
                                  yearConfidence: 0.56
                                  orientation: rear
                                  parked: true
                                  parkedConfidence: 0.75
                                - type: een.lprAccessType.v1
                                  creatorId: een.lpr
                                  accessType: allow
                                  vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                                - type: een.userData.v1
                                  creatorId: een.lpr
                                  apartmentNum: 105A
                                - type: een.croppedFrameImageUrl.v1
                                  creatorId: een.lpr
                                  objectId: >-
                                    camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                                  timestamp: '2021-04-22T00:00:00.000+00:00'
                                - type: een.fullFrameImageUrl.v1
                                  creatorId: een.lpr
                                  httpsUrl: >-
                                    https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                                  timestamp: '2021-04-22T00:00:00.000+00:00'
                                  feedType: main
                                - type: een.creatorDetails.v1
                                  creatorId: een.lpr
                                  id: een.lpr
                                  vendor: Eagle Eye Networks
                                  application: Cloud License Plate Recognition
                                  hardwareModel: EN-CDUD-005a
                                  version: 20230318.082522.039235885
                                  needsValidation: false
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprEvents/{id}':
    get:
      operationId: getLprEvent
      tags:
        - LPR Events
      description: >-
        Fetches lpr event based on `id` provided. This returns the event as an
        extension of event base envelope with LPR specific information
      parameters:
        - $ref: '#/components/parameters/id'
        - in: query
          name: include
          style: form
          explode: false
          description: Provide fields to be returned in response body
          schema:
            type: array
            items:
              type: string
              enum:
                - data.een.objectDetection.v1
                - data.een.lprDetection.v1
                - data.een.fullFrameImageUrl.v1
                - data.een.croppedFrameImageUrl.v1
                - data.een.vehicleAttributes.v1
                - data.een.lprAccessType.v1
                - data.een.userData.v1
                - data.een.creatorDetails.v1
                - data.een.dotNumberRecognition.v1
                - data.een.truckNumberRecognition.v1
                - data.een.trailerNumberRecognition.v1
                - data.een.recognizedText.v1
                - data.een.vehicleListInfo.v1
                - data.een.vspInsightsSummary.v1
                - relatedEvents
                - relatedEvents.event
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprEventResult'
              examples:
                LPR Plate read event:
                  value:
                    id: nINlL0YuoRAnv9QcHKXi
                    startTimestamp: '2021-04-22T00:00:00.000+00:00'
                    endTimestamp: '2021-04-22T00:00:00.000+00:00'
                    span: true
                    accountId: '00001106'
                    actorId: 100d4c41
                    actorAccountId: '00001106'
                    actorType: camera
                    creatorId: een.lpr
                    type: een.lprPlateReadEvent.v1
                    dataSchemas:
                      - een.objectDetection.v1
                      - een.objectClassification.v1
                      - een.lprDetection.v1
                      - een.vehicleAttributes.v1
                      - een.fullFrameImageUrl.v1
                      - een.croppedFrameImageUrl.v1
                      - een.creatorDetails.v1
                    data:
                      - type: een.objectDetection.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        boundingBox:
                          - 0.78
                          - 0.26
                          - 0.83
                          - 0.28
                      - type: een.lprDetection.v1
                        creatorId: een.lpr
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        plateBoundingBox:
                          - 0.78
                          - 0.26
                          - 0.83
                          - 0.28
                        plate: ABC1234
                        plateConfidence: 0.99
                        plateRegion: US-NY
                        plateRegionConfidence: 0.93
                        direction: exit
                      - type: een.vehicleAttributes.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        color: yellow
                        colorConfidence: 0.89
                        make: volvo
                        makeDisplay: Toyota
                        makeConfidence: 0.87
                        model: Camry
                        modelConfidence: 0.75
                        bodyType: car
                        bodyTypeConfidence: 0.67
                        year: 2007
                        yearConfidence: 0.56
                        orientation: rear
                        parked: true
                        parkedConfidence: 0.75
                      - type: een.lprAccessType.v1
                        creatorId: een.lpr
                        accessType: allow
                        vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                      - type: een.userData.v1
                        creatorId: een.lpr
                        apartmentNum: 105A
                      - type: een.croppedFrameImageUrl.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                      - type: een.fullFrameImageUrl.v1
                        creatorId: een.lpr
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        feedType: main
                      - type: een.creatorDetails.v1
                        creatorId: een.lpr
                        id: een.lpr
                        vendor: Eagle Eye Networks
                        application: Cloud License Plate Recognition
                        hardwareModel: EN-CDUD-005a
                        version: 20230318.082522.039235885
                        needsValidation: false
                DOT Number Recognition event:
                  value:
                    id: nINlL0YuoRAnv9QcHKXj
                    startTimestamp: '2021-04-22T00:00:00.000+00:00'
                    endTimestamp: '2021-04-22T00:00:00.000+00:00'
                    span: true
                    accountId: '00001106'
                    actorId: 100d4c41
                    actorAccountId: '00001106'
                    actorType: camera
                    creatorId: een.lpr
                    type: een.fleetCodeRecognitionEvent.v1
                    dataSchemas:
                      - een.objectDetection.v1
                      - een.dotNumberRecognition.v1
                      - een.fullFrameImageUrl.v1
                      - een.croppedFrameImageUrl.v1
                      - een.creatorDetails.v1
                    data:
                      - type: een.dotNumberRecognition.v1
                        creatorId: een.lpr
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        regNumber: '123456'
                        regNumberConfidence: 0.99
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3'
                      - type: een.objectDetection.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        boundingBox:
                          - 0.78
                          - 0.26
                          - 0.83
                          - 0.28
                      - type: een.croppedFrameImageUrl.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3'
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                      - type: een.fullFrameImageUrl.v1
                        creatorId: een.lpr
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        feedType: main
                      - type: een.creatorDetails.v1
                        creatorId: een.lpr
                        id: een.lpr
                        vendor: Eagle Eye Networks
                        application: Cloud License Plate Recognition
                        hardwareModel: EN-CDUD-005a
                        version: 20230318.082522.039235885
                        needsValidation: false
                LPR Plate read event with a related event:
                  value:
                    id: nINlL0YuoRAnv9QcHKXi
                    startTimestamp: '2021-04-22T00:00:00.000+00:00'
                    endTimestamp: '2021-04-22T00:00:00.000+00:00'
                    span: true
                    accountId: '00001106'
                    actorId: 100d4c41
                    actorAccountId: '00001106'
                    actorType: camera
                    creatorId: een.lpr
                    type: een.lprPlateReadEvent.v1
                    dataSchemas:
                      - een.objectDetection.v1
                      - een.objectClassification.v1
                      - een.lprDetection.v1
                      - een.vehicleAttributes.v1
                      - een.fullFrameImageUrl.v1
                      - een.croppedFrameImageUrl.v1
                      - een.creatorDetails.v1
                    data:
                      - type: een.objectDetection.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        boundingBox:
                          - 0.78
                          - 0.26
                          - 0.83
                          - 0.28
                      - type: een.lprDetection.v1
                        creatorId: een.lpr
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        plateBoundingBox:
                          - 0.78
                          - 0.26
                          - 0.83
                          - 0.28
                        plate: ABC1234
                        plateConfidence: 0.99
                        plateRegion: US-NY
                        plateRegionConfidence: 0.93
                        direction: exit
                      - type: een.vehicleAttributes.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        color: yellow
                        colorConfidence: 0.89
                        make: volvo
                        makeDisplay: Toyota
                        makeConfidence: 0.87
                        model: Camry
                        modelConfidence: 0.75
                        bodyType: car
                        bodyTypeConfidence: 0.67
                        year: 2007
                        yearConfidence: 0.56
                        orientation: rear
                        parked: true
                        parkedConfidence: 0.75
                      - type: een.lprAccessType.v1
                        creatorId: een.lpr
                        accessType: allow
                        vehicleListId: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
                      - type: een.userData.v1
                        creatorId: een.lpr
                        apartmentNum: 105A
                      - type: een.croppedFrameImageUrl.v1
                        creatorId: een.lpr
                        objectId: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                      - type: een.fullFrameImageUrl.v1
                        creatorId: een.lpr
                        httpsUrl: >-
                          https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
                        timestamp: '2021-04-22T00:00:00.000+00:00'
                        feedType: main
                      - type: een.creatorDetails.v1
                        creatorId: een.lpr
                        id: een.lpr
                        vendor: Eagle Eye Networks
                        application: Cloud License Plate Recognition
                        hardwareModel: EN-CDUD-005a
                        version: 20230318.082522.039235885
                        needsValidation: false
                    relatedEvents:
                      - id: nINlL0YuoRAnv9QcHKXk
                        rel: child
                        event:
                          id: nINlL0YuoRAnv9QcHKXk
                          startTimestamp: '2021-04-23T00:00:00.000+00:00'
                          endTimestamp: '2021-04-23T00:00:00.000+00:00'
                          span: true
                          accountId: '00001106'
                          actorId: 100d4c41
                          actorAccountId: '00001106'
                          actorType: camera
                          creatorId: een.lpr
                          type: een.fleetCodeRecognitionEvent.v1
                          dataSchemas:
                            - een.objectDetection.v1
                            - een.dotNumberRecognition.v1
                            - een.fullFrameImageUrl.v1
                            - een.croppedFrameImageUrl.v1
                            - een.creatorDetails.v1
                          data:
                            - type: een.dotNumberRecognition.v1
                              creatorId: een.lpr
                              timestamp: '2021-04-23T00:00:00.000+00:00'
                              regNumber: '123456'
                              regNumberConfidence: 0.99
                              objectId: >-
                                camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                            - type: een.objectDetection.v1
                              creatorId: een.lpr
                              objectId: >-
                                camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2
                              timestamp: '2021-04-23T00:00:00.000+00:00'
                              boundingBox:
                                - 0.78
                                - 0.26
                                - 0.83
                                - 0.28
                            - type: een.croppedFrameImageUrl.v1
                              creatorId: een.lpr
                              objectId: >-
                                camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a3
                              httpsUrl: >-
                                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                              timestamp: '2021-04-23T00:00:00.000+00:00'
                            - type: een.fullFrameImageUrl.v1
                              creatorId: een.lpr
                              httpsUrl: >-
                                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312214.jpeg
                              timestamp: '2021-04-23T00:00:00.000+00:00'
                              feedType: main
                            - type: een.creatorDetails.v1
                              creatorId: een.lpr
                              id: een.lpr
                              vendor: Eagle Eye Networks
                              application: Cloud License Plate Recognition
                              hardwareModel: EN-CDUD-005a
                              version: 20230318.082522.039235885
                              needsValidation: false
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprEvents:summary':
    get:
      operationId: getLprEventsSummary
      tags:
        - LPR Events
      description: >
        Fetches summary of lpr event counts. Query fields can control the
        parameters that are returned in the response body. There are 7 key
        attributes as follows:
          * `lastHour` : event count in last one hour.
          * `last24h` : event count in last 24 hours.
          * `today`: event count in current day from 00:00 user local time to present
          * `yesterday` : events for previous day (in user's local time zone)
          * `last7Days` : event count in last 7 days.
          * `last30Days` : event count in last 30 days
          * `latestEventTimestamp` : timestamp of the latest event.
          
        At least one of these attributes must be specified for the query to
        return results. The attributes given apply on each camera and to a
        single aggregated total.
      parameters:
        - in: query
          name: userTime
          description: >-
            The caller can also send the userTime along with timezone to the
            API. This will be used to calculate the current_day count (as per
            user local time from 00:00 midnight). Time in ISO-8601 format
          schema:
            type: string
            format: date-time
            example: '2024-08-08T07:57:37.000+00:00'
        - in: query
          name: include
          style: form
          explode: false
          description: Provide fields to be returned in response body
          schema:
            type: array
            items:
              type: string
              enum:
                - today
                - yesterday
                - lastHour
                - last24h
                - last7Days
                - last30Days
                - latestEventTimestamp
        - in: query
          name: groupBy
          description: >-
            If defined with `actorId` as value, the values are grouped per
            actor. If not defined, the counts will be aggregated to a single
            value for all actors.
          schema:
            type: string
            enum:
              - actorId
        - $ref: '#/components/parameters/plateConfidence__lte'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/type__in'
      responses:
        '200':
          description: Events summary as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprSummaryData'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprEvents:listFieldValues':
    get:
      operationId: listLprEventFieldValues
      tags:
        - LPR Events
      description: >-
        Fetches all of the possible values for each of the fields that can be
        used to filter LPR events.
      responses:
        '200':
          description: 'Success, lists field values as populated in the events.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprFieldsData'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  /lprAlertConditionRules:
    post:
      operationId: addLprAlertConditionRule
      tags:
        - LPR Rules
      description: >-
        Create a new rule that produces alerts based on certain conditions.
        Specifically, the user specifies alert conditions that indicate when the
        alert is produced based on following:
          * Which resources (cameras, account or location) can produce the alert
          * What is the schedule for the alert.
          * What event types, or which vehicles (specific plates, or belonging to a vehicleList) can produce the alert.
      requestBody:
        description: Data containing information on the rule to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprAlertConditionRuleUntaggedForPost'
            examples:
              AccessControlExample1:
                summary: Access control allow rule
                value:
                  type: lprRuleAccessControlAllow
                  name: Allow Employees vehicles
                  priority: 10
                  notes: >-
                    This rule filters single plate and allows access to that
                    plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    barrierOpen: true
                    filterType: plate
                    plates:
                      - ABC123
              AccessControlExample2:
                summary: Access control deny rule
                value:
                  type: lprRuleAccessControlDeny
                  name: Deny offender vehicles
                  priority: 10
                  notes: >-
                    This rule filters plates belonging to employee list and
                    denies access to offending vehicles
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    barrierOpen: true
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              EventAggrExample1:
                summary: Event high count rule
                value:
                  type: lprRuleCountAggr
                  name: High event count rule
                  priority: 10
                  notes: >-
                    This rule triggers when event count is greater than 100 in
                    an hour
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    windowSize: 1h
                    countThr: 100
                    greaterThanThr: true
              EventAggrExample2:
                summary: Event low count rule
                value:
                  type: lprRuleCountAggr
                  name: Low event count rule
                  priority: 10
                  notes: >-
                    This rule triggers when event count is lesser than 10 in an
                    hour
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    windowSize: 1h
                    countThr: 10
                    greaterThanThr: false
              WatchlistExample1:
                summary: Watchlist rule for all plates except exempted ones
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: >-
                    This rule triggers for all plates except few which are
                    exempted in the vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: anyPlateExcept
                    exemptionVehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              WatchlistExample2:
                summary: Watchlist rule for one plate
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: This rule triggers for one plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: plate
                    plates:
                      - ABC123
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              WatchlistExample3:
                summary: Watchlist rule on a vehicle list
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: This rule triggers for plates not exempted in a vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              HotlistExample1:
                summary: Hotlist rule on a vehicle list
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: >-
                    This rule triggers for plates in the vehicle list with
                    security status as 'hotlist'
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              HotlistExample2:
                summary: Hotlist rule on a plate
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: This rule triggers for a single plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: plate
                    plates:
                      - ABC123
              HotlistExample3:
                summary: Hotlist rule for all plates except exempted ones
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: This rule triggers for a single plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: anyPlateExcept
                    exemptionVehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              UnlistedExample1:
                summary: Unlisted plate rule on a vehicle list
                value:
                  type: lprRuleUnlisted
                  name: Unlisted plate rule
                  priority: 10
                  notes: This rule triggers for plates not in the vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-ac648ac5f94e
      responses:
        '201':
          description: Response on successful creation of requested lpr alertConditionRule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprAlertConditionRule'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '500':
          $ref: '#/components/responses/internalServerError'
    get:
      operationId: listLprAlertConditionRules
      tags:
        - LPR Rules
      description: Fetches lpr rules based on a filter
      parameters:
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/name__contains'
        - $ref: '#/components/parameters/type__in1'
        - $ref: '#/components/parameters/priority__lte'
        - $ref: '#/components/parameters/priority__gte'
        - $ref: '#/components/parameters/enabled'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: All the rules that met the filter criteria of this API inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprRulesResult'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprAlertConditionRules:listFieldValues':
    get:
      operationId: getLprAlertConditionRuleFieldValues
      tags:
        - LPR Rules
      description: >-
        Fetches the list of field values across all the attributes of
        alertConditionRules stored for this account.
      responses:
        '200':
          description: 'Success, returns possible values of each field'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprRulesFields'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprAlertConditionRules/{id}':
    get:
      operationId: getLprAlertConditionRule
      tags:
        - LPR Rules
      parameters:
        - $ref: '#/components/parameters/id'
      description: Get details of a specific rule id
      responses:
        '200':
          description: 'Success, returns the rule details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprAlertConditionRule'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      operationId: updateLprAlertConditionRule
      tags:
        - LPR Rules
      parameters:
        - $ref: '#/components/parameters/id'
      description: >-
        Updates the properties of a specific rule. Only the user defined fields
        can be updated by this method.
      requestBody:
        description: Data containing information on the rule to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprAlertConditionRuleUntaggedForPatch'
            examples:
              AccessControlExample1:
                summary: Access control allow rule
                value:
                  type: lprRuleAccessControlAllow
                  name: Allow Employees vehicles
                  priority: 10
                  notes: >-
                    This rule filters single plate and allows access to that
                    plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    barrierOpen: true
                    filterType: plate
                    plates:
                      - ABC123
              AccessControlExample2:
                summary: Access control deny rule
                value:
                  type: lprRuleAccessControlDeny
                  name: Deny offender vehicles
                  priority: 10
                  notes: >-
                    This rule filters plates belonging to employee list and
                    denies access to offending vehicles
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    barrierOpen: true
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              EventAggrExample1:
                summary: Event high count rule
                value:
                  type: lprRuleCountAggr
                  name: High event count rule
                  priority: 10
                  notes: >-
                    This rule triggers when event count is greater than 100 in
                    an hour
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    windowSize: 1h
                    countThr: 100
                    greaterThanThr: true
              EventAggrExample2:
                summary: Event low count rule
                value:
                  type: lprRuleCountAggr
                  name: Low event count rule
                  priority: 10
                  notes: >-
                    This rule triggers when event count is lesser than 10 in an
                    hour
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                  configuration:
                    windowSize: 1h
                    countThr: 10
                    greaterThanThr: false
              WatchlistExample1:
                summary: Watchlist rule for all plates except exempted ones
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: >-
                    This rule triggers for all plates except few which are
                    exempted in the vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: anyPlateExcept
                    exemptionVehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              WatchlistExample2:
                summary: Watchlist rule for one plate
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: This rule triggers for one plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: plate
                    plates:
                      - ABC123
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              WatchlistExample3:
                summary: Watchlist rule on a vehicle list
                value:
                  type: lprRuleWatch
                  name: Watch rule
                  priority: 10
                  notes: This rule triggers for plates not exempted in a vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                        - id: 1000333d
                          type: camera
                  configuration:
                    durationThresh: 1h
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
                    originActors:
                      - id: 100b913c
                        type: camera
                    destinationActors:
                      - id: 1000205a
                        type: camera
                      - id: 1000333d
                        type: camera
              HotlistExample1:
                summary: Hotlist rule on a vehicle list
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: >-
                    This rule triggers for plates in the vehicle list with
                    security status as 'hotlist'
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              HotlistExample2:
                summary: Hotlist rule on a plate
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: This rule triggers for a single plate
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: plate
                    plates:
                      - ABC123
              HotlistExample3:
                summary: Hotlist rule for all plates except exempted ones
                value:
                  type: lprRuleHotlist
                  name: Hotlist rule
                  priority: 10
                  notes: >-
                    This rule triggers for all plates except few which are
                    exempted in the vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: anyPlateExcept
                    exemptionVehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
              UnlistedExample1:
                summary: Unlisted plate rule on a vehicle list
                value:
                  type: lprRuleUnlisted
                  name: Unlisted plate rule
                  priority: 10
                  notes: This rule triggers for plates not in the vehicle list
                  enabled: false
                  eventFilter:
                    eventTypes:
                      - een.lprPlateReadEvent.v1
                    schedule:
                      sunday:
                        - start: '20:08'
                          end: '23:10'
                      monday:
                        - start: '10:35'
                          end: '11:09'
                      tuesday:
                        - start: '10:35'
                          end: '11:09'
                      wednesday:
                        - start: '10:35'
                          end: '11:09'
                      thursday:
                        - start: '10:35'
                          end: '11:09'
                      friday:
                        - start: '10:35'
                          end: '11:09'
                      saturday:
                        - start: '10:35'
                          end: '11:09'
                    resourceFilter:
                      actors:
                        - id: 100b913c
                          type: camera
                        - id: 1000205a
                          type: camera
                  configuration:
                    filterType: vehicleList
                    vehicleListIds:
                      - b6a5e240-6ba8-4d5a-a38e-ac648ac5f94e
      responses:
        '204':
          description: Updated the rule
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      operationId: deleteLprAlertConditionRule
      tags:
        - LPR Rules
      description: Deletes the rule corresponding to the rule ID
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Deleted the rule
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  /lprVehicleLists:
    get:
      operationId: listVehicleLists
      tags:
        - LPR Vehicle Lists
      description: Fetches the available vehicleLists based on the filter
      parameters:
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/plate1'
        - $ref: '#/components/parameters/name__contains'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: >-
            Fetches all the vehicle list that matches the filtering based on the
            query parameters. Only list properties are returned per list. The
            individual vehicle records within a list are not returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListResult'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    post:
      operationId: addVehicleList
      tags:
        - LPR Vehicle Lists
      description: Add a new vehicleList to the user account
      requestBody:
        description: Meta configuration for the list
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprVehicleListMetaUntaggedForPost'
      responses:
        '201':
          description: Successful creation of the new list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListMeta'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists:listFields':
    get:
      operationId: getVehicleListFields
      tags:
        - LPR Vehicle Lists
      description: >-
        Fetches all available fields in vehicle Lists for this account.
        Specifically, using this API, the user may:
          * Obtain the list of fields for ordered display of vehicle records, wherein each field is a column.
          * Obtain the possible values for some or all of the fields for search queries.
          * Understand user defined fields in the records of vehicle Lists, which is a dynamic set.
      responses:
        '200':
          description: List of all fields
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: User friendly Displayable name of the field
                    key:
                      type: string
                      description: The actual field
                    valueRange:
                      type: string
                      description: >-
                        Indicates whether the possible values for this field is
                        static or unbounded
                      enum:
                        - fixed
                        - unlimited
                  required:
                    - key
                example:
                  - key: actor
                    valueRange: fixed
                  - key: userData.apartmentNum
                    name: Apartment Number
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists:listFieldValues':
    get:
      operationId: getVehicleListFieldValues
      tags:
        - LPR Vehicle Lists
      description: >-
        Fetches the list of field values including possible values for each key
        in userData.
      responses:
        '200':
          description: Possible values of each field
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessType:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessType1'
                  userData:
                    type: object
                    description: List of possible values for keys in user supplied data.
                  actor:
                    type: array
                    description: List of actors referenced by all lists collectively
                    items:
                      $ref: '#/components/schemas/Actor'
                  securityStatus:
                    type: array
                    description: >-
                      List of the distinct security statuses present across all
                      the vehicle lists for this account.
                    items:
                      $ref: '#/components/schemas/SecurityStatus'
                example:
                  accessType:
                    - allow
                    - deny
                  userData:
                    organization:
                      - ABC
                      - PQR
                    parkingType:
                      - monthly
                      - visitor
                  securityStatus:
                    - hotlist
                    - exempted
                  actor:
                    - type: camera
                      id: camera-123456
                      name: entrance LPR
                    - type: camera
                      id: camera-876543
                      name: exit LPR
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists/{id}':
    get:
      operationId: getVehicleList
      tags:
        - LPR Vehicle Lists
      description: >-
        Fetches the information about the specific vehicleList but not each
        vehicle record
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: >-
            Returns information about the list. Only list properties are
            returned and not the individual vehicle records inside it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListMeta'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      operationId: updateVehicleList
      tags:
        - LPR Vehicle Lists
      description: Update the meta configuration properties about the specific vehicle List
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Configuration properties to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprVehicleListMetaUntaggedForPatch'
      responses:
        '204':
          description: Updated the list
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      operationId: deleteVehicleList
      tags:
        - LPR Vehicle Lists
      description: Delete the vehicle list along with the entries
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Deleted the list
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists/{id}/vehicles':
    get:
      operationId: listVehicles
      tags:
        - LPR Vehicle Lists
      description: >-
        Fetches information about all the vehicle records in the given list,
        including the user data.
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/plate1'
        - $ref: '#/components/parameters/accessType__in1'
        - $ref: '#/components/parameters/securityStatus__in'
        - $ref: '#/components/parameters/userDataRecord'
      responses:
        '200':
          description: Successfully returns information about the vehicle records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListEntriesResult'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    post:
      operationId: addVehicle
      tags:
        - LPR Vehicle Lists
      description: >-
        Adds a new vehicle record to the list. This method enforces strictness
        about the uniqueness of vehicle license plate, so the same plate/vehicle
        cannot be added more than once, and would result in error if attempted.
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: New record to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprVehicleListUntaggedRecord'
      responses:
        '201':
          description: Successful creation of new vehicle record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListPaddedRecord'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '409':
          $ref: '#/components/responses/conflict'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists/{id}/vehicles:bulkCreate':
    post:
      operationId: addVehicles
      tags:
        - LPR Vehicle Lists
      description: >-
        Adds multiple vehicle records to the list in a single operation. This
        method enforces strictness about the uniqueness of vehicle license
        plates. Each plate/vehicle must be unique within the list, and duplicate
        entries in either the request or with existing records will result in an
        error. 
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: New record to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprVehicleListUntaggedRecordArray'
      responses:
        '200':
          description: Successful creation of new vehicle record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateResponseArray'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists/{id}/vehicles/{recordId}':
    get:
      operationId: getVehicle
      tags:
        - LPR Vehicle Lists
      description: Fetches information about a specific vehicle from a specific list
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/recordId'
      responses:
        '200':
          description: Successfully returns information about the vehicle records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListPaddedRecord'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      operationId: updateVehicle
      tags:
        - LPR Vehicle Lists
      description: >-
        Update given vehicle record in the given list. Specifically for the
        given record, create-only properties like `plate` cannot be edited. To
        edit those, the record would have to be deleted and a new one added.
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/recordId'
      requestBody:
        description: Record to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LprVehicleListUntaggedRecordUpdate'
      responses:
        '204':
          description: Updated the vehicle record
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      operationId: deleteVehicle
      tags:
        - LPR Vehicle Lists
      description: Delete given vehicle record in given list.
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/recordId'
      responses:
        '204':
          description: Deleted the record
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/lprVehicleLists:search':
    get:
      operationId: searchVehicleLists
      tags:
        - LPR Vehicle Lists
      description: >-
        Fetches the vehicle records that match search criteria, across all the
        lists that match the search criteria
      parameters:
        - $ref: '#/components/parameters/plate1'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/name__contains'
        - $ref: '#/components/parameters/accessType__in1'
        - $ref: '#/components/parameters/securityStatus__in'
        - $ref: '#/components/parameters/userDataRecord'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Vehicle records that match the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LprVehicleListsSearchResult'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ColorDefinitions:
      type: string
      description: Enumerations of standard colors for vehicles.
      enum:
        - black
        - blue
        - brown
        - gold-beige
        - green
        - gray
        - silver
        - silver-gray
        - orange
        - pink
        - purple
        - red
        - white
        - yellow
      example: yellow
    AccessType:
      type: string
      enum:
        - allow
        - deny
        - 'null'
    EntityDescriptor:
      type: object
      properties:
        display:
          type: string
          description: Value to be used for presenting in UI
        value:
          type: string
          description: Value to be used for backend processing
    LprFieldsData:
      type: object
      properties:
        actor:
          type: array
          description: >-
            List of all actor Ids that have contributed to lpr events, typically
            refers to camera ESNs, locations
          items:
            $ref: '#/components/schemas/Actor'
        color:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct vehicle colors present across all the
                  events for this account
                properties:
                  value:
                    $ref: '#/components/schemas/ColorDefinitions'
                required:
                  - value
                example:
                  display: Blue
                  value: blue
        make:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct vehicle makes present across all the
                  events for this account
                properties:
                  value:
                    type: string
                    example: ford
                required:
                  - value
                example:
                  display: Ford
                  value: ford
        model:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct vehicle models present across all events
                  for this account
                properties:
                  value:
                    type: string
                    example: camry
                required:
                  - value
                example:
                  display: Camry
                  value: camry
        plateRegion:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct provinces/states present across all
                  events for this account. List values in accordance with ISO
                  3166.2
                properties:
                  value:
                    type: string
                    example: US-TX
                required:
                  - value
                example:
                  display: US-NY
                  value: US-NY
        direction:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct directions present across all events for
                  this account.
                properties:
                  value:
                    type: string
                    enum:
                      - entry
                      - exit
                    example: entry
                required:
                  - value
                example:
                  display: Exit
                  value: exit
        accessType:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the access types present across all events for this
                  account.
                properties:
                  value:
                    $ref: '#/components/schemas/AccessType'
                required:
                  - value
                example:
                  display: Allow
                  value: allow
        bodyType:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct vehicle body types present across all the
                  events for this account
                properties:
                  value:
                    type: string
                    example: sedan
                required:
                  - value
                example:
                  display: Sedan
                  value: sedan
        insightType:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/EntityDescriptor'
              - type: object
                description: >-
                  List of the distinct insight types present across all the
                  events for this account.
                required:
                  - value
                example:
                  display: new
                  value: new
      required:
        - actor
        - color
        - make
        - model
        - plateRegion
        - direction
        - accessType
        - bodyType
        - insightType
      title: LprFieldsData
    LprSummaryData:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/LprSummaryAggregate'
    LprSummaryAggregate:
      type: object
      properties:
        actorId:
          type: string
          example: 100b913c
          description: >-
            ESN of the camera to which the following event counts belong to or
            `all` for the aggregate summary
        latestEventTimestamp:
          type: string
          format: date-time
          description: Timestamp of the latest event
        lastHour:
          type: integer
          description: Count of events in last hour
        last24h:
          type: integer
          description: Count of events in last 24 hours
        today:
          type: integer
          description: >-
            Count of events for the current day of the user (in user's local
            time)
        yesterday:
          type: integer
          description: >-
            Count of events for the previous day of the user (in user's local
            time)
        last30Days:
          type: integer
          description: >-
            Count of events for the previous 30 days. This is independent of
            local time.
        last7Days:
          type: integer
          description: >-
            Count of events for previous 7 days. This is independent of local
            time.
      title: LprSummaryAggregate
    LprSearchResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/LprEventResult'
    LprEventResult:
      allOf:
        - $ref: '#/components/schemas/vehicleRecognitionEvent'
        - properties:
            relatedEvents:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEvent'
    vehicleRecognitionEvent:
      allOf:
        - type: object
          title: VehicleRecognitionEvent
          description: >-
            Generated when the camera captures a license plate of a passing
            vehicle. It represents a single point in time.
          required:
            - id
          oneOf:
            - $ref: '#/components/schemas/LprPlateReadEvent'
            - $ref: '#/components/schemas/FleetCodeRecognitionEvent'
          discriminator:
            propertyName: type
            mapping:
              een.lprPlateReadEvent.v1: ../event/events/een.lprPlateReadEvent.v1.yaml
              een.fleetCodeRecognitionEvent.v1: ../event/events/een.fleetCodeRecognitionEvent.v1.yaml
    RelatedEvent:
      type: object
      required:
        - id
        - rel
      properties:
        id:
          type: string
          description: The id of the related event
        rel:
          type: string
          description: The type of the related event
          enum:
            - child
            - parent
          example: child
        event:
          type: object
          description: The related event
          allOf:
            - $ref: '#/components/schemas/vehicleRecognitionEvent'
    ActorFilter:
      type: object
      description: 'Specifies the attributes of an actor, useful for passing as a filter'
      properties:
        id:
          type: string
          description: >-
            The id of the thing that caused the event This can be camera or
            location ID. If not supplied for any entry in the array, it is taken
            to mean as the entire account.
          example: 100b913c
        type:
          type: string
          enum:
            - camera
            - location
          default: camera
          description: Type of actor that caused the event.
      required:
        - type
    Actor:
      type: object
      description: >-
        Specifies the complete attributes of an actor, including the
        user-supplied field `name`
      allOf:
        - $ref: '#/components/schemas/ActorFilter'
        - type: object
          properties:
            name:
              type: string
              description: User-defined name for the actor
              example: Entrance LPR Camera
    PaginatedResponse:
      type: object
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages and, if  available, the total number of
        results.
      properties:
        nextPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the next page. The value of this token is passed
            into the field pageToken.  This value can be null if there is no
            next page.
        prevPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the previous page. The value of this token is
            passed into the field pageToken.  This value can be null of there is
            no previous page.
        totalSize:
          type: integer
          minimum: 0
          readOnly: true
          nullable: true
          description: >
            The number of resource entries being returned from the result set.  This can be omitted if the API endpoint does not have total size
            information.
        results:
          type: array
          readOnly: true
          description: The result set from a collection API call.
          items:
            type: object
      required:
        - nextPageToken
        - prevPageToken
        - results
    PaginatedResponseWithSize:
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages and  the total number of results.  
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseNoTotalSize'
        - properties:
            totalSize:
              type: integer
              readOnly: true
              description: |
                Size of the total result set.
          required:
            - totalSize
    PaginatedResponseNoTotalSize:
      type: object
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages.
      properties:
        nextPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the next page. The value of this token is passed
            into the field pageToken.  This value can be null if there is no
            next page.
        prevPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the previous page. The value of this token is
            passed into the field pageToken.  This value can be null of there is
            no previous page.
        results:
          type: array
          readOnly: true
          description: The result set from a collection API call.
          items:
            type: object
      required:
        - nextPageToken
        - prevPageToken
        - results
    ApiV3Error:
      type: object
      properties:
        code:
          description: HTTP code defined in EEN Standard Code Values
          type: integer
        status:
          description: A string enum describing the code
          type: string
          enum:
            - cancelled
            - unknown
            - invalidArgument
            - deadlineExceeded
            - notFound
            - conflict
            - permissionDenied
            - resourceExhausted
            - failedPrecondition
            - aborted
            - outOfRange
            - unimplemented
            - internal
            - unavailable
            - dataLoss
            - unauthenticated
            - mediaTypeNotSupported
            - acceptNotSupported
            - methodNotSupported
            - tooManyRequests
        message:
          description: Developer friendly human readable error message in English
          type: string
        details:
          description: An array of extensible objects that define error information
          type: array
          items:
            $ref: '#/components/schemas/ExceptionDetail'
      required:
        - code
        - status
        - message
        - details
    ExceptionDetail:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ErrorInfoExceptionDetail'
        - $ref: '#/components/schemas/BadRequestExceptionDetail'
        - $ref: '#/components/schemas/ResourceInfoExceptionDetail'
      discriminator:
        propertyName: type
        mapping:
          errorInfo: '#/components/schemas/ErrorInfoExceptionDetail'
          badRequest: '#/components/schemas/BadRequestExceptionDetail'
          resourceInfo: '#/components/schemas/ResourceInfoExceptionDetail'
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
            - badRequest
            - resourceInfo
      required:
        - type
    ErrorInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
        reason:
          description: >
            The reason for the error. This is a constant value that identifies
            the proximate cause of the

            error. Error reasons are unique within a particular domain of
            errors.
          type: string
          enum:
            - unauthenticated
            - unexpectedArgument
            - missingRequiredArgument
            - wrongArgumentValue
            - invalidPermission
            - wrongEdition
            - wrongAccountType
            - resourceNotFound
            - endpointNotFound
            - methodNotSupported
            - unexpectedError
            - acceptNotSupported
            - alreadyExists
            - foreignKeyConflict
            - childDevicesExist
            - contentNotSupported
            - deadlineExpired
            - tooManyRequests
            - deviceUnavailable
            - serviceUnavailable
            - invalidJSON
            - resourceLocked
            - notSupportedOnBridge
            - outOfRetention
            - deviceIdentificationFailed
            - credentialValidationFailed
            - credentialSetupFailed
            - localUrlValidationFailed
            - hwRegistrationFailed
            - failedAddingCameraAfterValidation
            - neverConnected
            - reconnectFailed
            - unsupportedModel
            - purged
            - userBlocked
            - userTemporarilyBlocked
            - quotaExceeded
        domain:
          description: |
            Logical grouping to which the "reason" belongs
          type: string
        metadata:
          $ref: '#/components/schemas/ExceptionMetadata'
    BadRequestExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - badRequest
        argumentViolations:
          type: array
          items:
            $ref: '#/components/schemas/ArgumentViolation'
    ArgumentViolation:
      properties:
        argumentName:
          type: string
          description: Name of the argument
        description:
          type: string
          description: Description of the violation
    ResourceInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - resourceInfo
        resource:
          description: 'Referenced resource type, eg "cameras", "bridges", or "locations".'
          type: string
        ids:
          type: array
          description: Identities of resources
          items:
            type: string
    ExceptionMetadata:
      properties:
        path:
          description: Path of the request
          type: string
        method:
          description: Method of the request
          type: string
    LprPlateReadEvent:
      description: >
        Generated when the camera captures a license plate of a passing vehicle.
        It can either be a span event or a point event. When the event is a span
        event, it represents the time period during which the vehicle was
        detected, here event will have different start and end time. When the
        event is a point event, it is the time of plate read trigger and both
        start and end times would be same.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventEnvelope'
        - properties:
            type:
              type: string
              enum:
                - een.lprPlateReadEvent.v1
            data:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/EenObjectDetectionV1'
                  - $ref: '#/components/schemas/EenLprDetectionV1'
                  - $ref: '#/components/schemas/EenVehicleAttributesV1'
                  - $ref: '#/components/schemas/EenLprAccessTypeV1'
                  - $ref: '#/components/schemas/EenUserDataV1'
                  - $ref: '#/components/schemas/EenCroppedFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenFullFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenCreatorDetailsV1'
                  - $ref: '#/components/schemas/EenDisplayOverlayBoundingBoxV1'
                  - $ref: '#/components/schemas/EenFullFrameImageUrlWithOverlayV1'
                  - $ref: '#/components/schemas/EenVehicleListInfoV1'
                  - $ref: '#/components/schemas/EenVspInsightsSummaryInfoV1'
    EventEnvelope:
      type: object
      description: Envelope for een events
      allOf:
        - $ref: '#/components/schemas/EventEnvelopeParent'
        - required:
            - accountId
            - actorAccountId
    EventEnvelopeParent:
      type: object
      description: Parent for envelope for een events
      required:
        - startTimestamp
        - endTimestamp
        - span
        - actorId
        - actorType
        - creatorId
        - type
        - dataSchemas
        - data
      properties:
        id:
          type: string
          description: System wide unique id of the event
          readOnly: true
        startTimestamp:
          type: string
          format: date-time
          description: Time at which the event starts.
        endTimestamp:
          type: string
          format: date-time
          description: 'Time at which the event ended. If null, the event is ongoing.'
          nullable: true
        span:
          type: boolean
          description: >-
            True if the event describes a period of time instead of a single
            moment in time.
        accountId:
          type: string
          description: >
            Id of the account the event belongs in. This can be a different
            account than the account of the actor that changed as part of the
            event, see the `actorAccountId` description for more details.
        actorId:
          type: string
          description: >
            Id of the entity that changed as part of the event, such as a camera
            id, user id, or account id. This id represents the specific entity
            that underwent a change, triggering the event notification.
        actorAccountId:
          type: string
          description: >
            Id of the account to which the changed actor belongs. This might be
            different from the `accountId` field in cases where one account is
            helping to manage another one. For example, a reseller that manages
            the bridges for one of their end-users would want to get alerts in
            their own account (`accountId`) that are about bridges located in
            their end-user's account (actorAccountId).
        actorType:
          type: string
          enum:
            - bridge
            - camera
            - speaker
            - account
            - user
            - layout
            - job
            - measurement
          default: camera
          description: 'Type of actor that changed, triggering the event.'
        creatorId:
          type: string
          default: unknown
          description: >-
            Id of the application or system that created this event. This id
            should not differ between instances or even versions of the same
            application.
        type:
          type: string
          description: >-
            Specific event type, e.g. een.motionDetectionEvent.v1,
            een.lprPlateReadEvent.v1
        dataSchemas:
          type: array
          items:
            type: string
          description: List of all data schema types that can be found in this event.
          example:
            - een.objectDetection.v1
            - een.objectClassification.v1
            - een.lprDetection.v1
            - een.personAttributes.v1
            - een.vehicleAttributes.v1
            - een.fullFrameImageUrl.v1
            - een.croppedFrameImageUrl.v1
            - een.objectRegionMapping.v1
            - een.eevaAttributes.v1
            - een.customLabels.v1
        data:
          type: array
          description: >
            Event specific data given as an array of objects that have a `type`
            field indicates the schema of the value.
          items:
            $ref: '#/components/schemas/BaseDataObject'
    BaseDataObject:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: >
            Specific data schema type, eg `een.lprDetection.v1` which describes
            what other fields will exist in this object.
        creatorId:
          type: string
          description: >-
            Id of the application or system that created this piece of
            information, generally the same as the `creatorId` of the event
            itself. This field allows clients to disambiguate data from multiple
            sources in the same event.
    EenObjectDetectionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the object that was detected.
          required:
            - boundingBox
            - type
            - objectId
            - timestamp
          properties:
            type:
              type: string
              enum:
                - een.objectDetection.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                The moment at which the object was detected at the location
                given by the bounding box.
              example: '2021-04-22T00:00:00.000+00:00'
            boundingBox:
              $ref: '#/components/schemas/BoundingBoxV1'
    ObjectEnvelopeDataObject:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          properties:
            objectId:
              $ref: '#/components/schemas/ObjectIdV1'
    ObjectIdV1:
      type: string
      description: >-
        ID given to the object by the detector. It is namespaced with a prefix
        to guarantee uniqueness while not

        needing different detectors like camera, edge based algorithms and cloud
        based algorithms to coordinate.

        The the prefix is followed by a colon and then the unique (within the
        namespace) id of the object.
      pattern: '^.*:.*$'
      example: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
    BoundingBoxV1:
      type: array
      description: >-
        Array of 4 floats describing a bounding box around the object of
        interest. Note that the percentage defined below

        is as a decimal value between 0 and 1. This means 55% would have to be
        provided as 0.55.

        * First - top left corner horizontal position (from left) as a
        percentage of the image width.

        * Second - top left corner vertical position (from top) as a percentage
        of the total image height.

        * Third - bottom right corner horizontal position (from left) as a
        percentage of the image width.

        * Fourth - bottom right corner vertical position (from top) as a
        percentage of the image height.
      minItems: 4
      maxItems: 4
      items:
        type: number
        format: double
        minimum: 0
        maximum: 1
    EenLprDetectionV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: Metadata specific to LPR attributes
          required:
            - plate
          properties:
            type:
              type: string
              enum:
                - een.lprDetection.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                Optional timestamp of the frame for which the plate recognition
                was done.
              example: '2021-04-22T00:00:00.000+00:00'
            plateBoundingBox:
              allOf:
                - $ref: '#/components/schemas/BoundingBoxV1'
                - description: References the bounding box of the license plate.
            plate:
              type: string
              description: This is the plate read in uppercase
              example: ABC1234
            plateConfidence:
              description: >-
                The confidence of the plate read reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.99
              minimum: 0
              maximum: 1
            plateRegion:
              type: string
              description: >-
                This is the state that the plate belongs to. This is compliant
                to ISO 3166.2 specification
              nullable: true
              example: US-NY
            plateRegionConfidence:
              description: >-
                The confidence of the plate region classification reported as a
                float value between 0 and 1.
              type: number
              format: float
              nullable: true
              example: 0.93
              minimum: 0
              maximum: 1
            direction:
              type: string
              description: 'Denotes the direction of the vehicle, Entry or Exit'
              enum:
                - entry
                - exit
              example: exit
    EenVehicleAttributesV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: |
            Attributes of the vehicle that created the LPR event.
          properties:
            type:
              type: string
              enum:
                - een.vehicleAttributes.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                Optional timestamp of the frame at which these attributes were
                inferred.
            color:
              allOf:
                - description: Enumerations of standard colors for vehicles.
                - $ref: '#/components/schemas/VehicleColorDefinitions'
            colorConfidence:
              description: >-
                Confidence of the color classification reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.89
              minimum: 0
              maximum: 1
            make:
              allOf:
                - description: Make of the vehicle
                - $ref: '#/components/schemas/VehicleMakeDefinitions'
            makeDisplay:
              type: string
              description: UI ready display name of the make of the vehicle
              example: Toyota
            makeConfidence:
              description: >-
                The confidence of the make classification reported as a float
                value between 0 and 1.
              type: number
              format: float
              example: 0.87
              minimum: 0
              maximum: 1
            model:
              type: string
              description: Model of the vehicle
              example: Camry
            modelConfidence:
              description: >-
                The confidence of the model classification reported as a float
                value between 0 and 1.
              type: number
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
            bodyType:
              allOf:
                - description: Type of the vehicle
                - $ref: '#/components/schemas/VehicleBodyTypeDefinitions'
            bodyTypeConfidence:
              description: >-
                The confidence of the body type classification reported as a
                float value between 0 and 1.
              type: number
              format: float
              example: 0.67
              minimum: 0
              maximum: 1
            year:
              type: integer
              description: Year of production
              example: 2007
            yearConfidence:
              description: >-
                The confidence of the year classification reported as a float
                value between 0 and 1.
              type: number
              example: 0.56
              format: float
              minimum: 0
              maximum: 1
            orientation:
              type: string
              description: >-
                Orientation of vehicle w.r.t. the camera. In other words, it
                describes how the camera viewed a specific vehicle.
              enum:
                - front
                - rear
                - side
              example: rear
            parked:
              type: boolean
              description: Information regarding whether the vehicle is parked or not
            parkedConfidence:
              type: number
              description: >-
                The confidence on the value of `parked` key reported as a float
                value between 0 and 1.
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
          required:
            - type
            - objectId
    PersonGenderDefinitions:
      type: string
      description: Enumerations of gender for person.
      enum:
        - male
        - female
      example: female
    PersonLbcColorDefinitions:
      type: string
      description: Enumerations of lowerbody clothing color for person.
      enum:
        - black
        - blue
        - white
        - gray
        - red
        - brown
        - green
        - yellow
        - pink
        - orange
      example: white
    PersonUbcColorDefinitions:
      type: string
      description: Enumerations of upperbody clothing color for person.
      enum:
        - black
        - blue
        - white
        - gray
        - red
        - brown
        - green
        - yellow
        - pink
        - orange
      example: white
    VehicleBodyTypeDefinitions:
      type: string
      description: >
        Enumerations of standard classes for vehicles. Warning: These body types
        are subject to future modifications
      enum:
        - motorbike
        - car
        - bus
        - truck
        - sedan
        - hatchback
        - coupe
        - convertible
        - minivan
        - wagon
        - trike
        - roadster
        - crossover
        - scooter
        - sports_car
        - van
        - bicycle
        - tukTuk
        - suv
        - pickupTruck
        - others
      example: car
    VehicleMakeDefinitions:
      type: string
      description: Enumerations of standard makes/brands for vehicles.
      enum:
        - abarth
        - acura
        - alfa_romeo
        - aston_martin
        - audi
        - bentley
        - bmw
        - bugatti
        - buick
        - byd
        - cadillac
        - chevrolet
        - chrysler
        - citroen
        - dacia
        - daihatsu
        - dodge
        - dodge_ram
        - ferrari
        - fiat
        - fisker
        - ford
        - ford_mustang
        - garia
        - genesis
        - gmc
        - harley_davidson
        - honda
        - hummer
        - hyundai
        - infiniti
        - isuzu
        - jaguar
        - jeep
        - kia
        - lamborghini
        - land_rover
        - lexus
        - lincoln
        - lotus
        - lucid
        - mahindra
        - maruti_suzuki
        - maserati
        - mazda
        - mclaren
        - mercedes_benz
        - mini_cooper
        - mitsubishi
        - mg
        - nissan
        - oldsmobile
        - opel
        - perodua
        - peugeot
        - plymouth
        - polaris
        - polestar
        - pontiac
        - porsche
        - proton
        - ram
        - renault
        - rivian
        - rolls_royce
        - rover
        - saab
        - saturn
        - scion
        - skoda
        - smart
        - subaru
        - suzuki
        - tata
        - tesla
        - toyota
        - vinfast
        - volkswagen
        - volvo
        - wagoneer
        - others
      example: volvo
    VehicleColorDefinitions:
      type: string
      description: Enumerations of standard colors for vehicles.
      enum:
        - beige
        - black
        - blue
        - brown
        - burgundy
        - gold-beige
        - green
        - gray
        - silver
        - silver-gray
        - maroon
        - orange
        - pink
        - purple
        - red
        - teal
        - white
        - yellow
      example: yellow
    WeaponClassDefinitions:
      type: string
      description: Enumerations of standard weapons classes
      enum:
        - handgun
        - rifle
      example: rifle
    PersonGenderList:
      type: object
      properties:
        gender:
          type: array
          items:
            $ref: '#/components/schemas/PersonGenderDefinitions'
      description: List of all available options for gender attribute of person
    PersonLbcColorList:
      type: object
      properties:
        lowerBodyClothingColor:
          type: array
          items:
            $ref: '#/components/schemas/PersonLbcColorDefinitions'
      description: >-
        List of all available options for lowerbody clothing color attribute of
        person
    PersonUbcColorList:
      type: object
      properties:
        upperBodyClothingColor:
          type: array
          items:
            $ref: '#/components/schemas/PersonUbcColorDefinitions'
      description: >-
        List of all available options for upperbody clothing color attribute of
        person
    VehicleBodyTypeList:
      type: object
      properties:
        bodyType:
          type: array
          items:
            $ref: '#/components/schemas/VehicleBodyTypeDefinitions'
      description: List of all available options for standard types of vehicles
    VehicleMakeList:
      type: object
      properties:
        make:
          type: array
          items:
            $ref: '#/components/schemas/VehicleMakeDefinitions'
      description: List of all available options for standard make/brand of vehicles
    VehicleColorList:
      type: object
      properties:
        color:
          type: array
          items:
            $ref: '#/components/schemas/VehicleColorDefinitions'
      description: List of all available options for standard color of vehicles
    WeaponClassList:
      type: object
      properties:
        class:
          type: array
          items:
            $ref: '#/components/schemas/WeaponClassDefinitions'
      description: List of all available opitons for standard classes of weapons
    ObjectClass:
      type: string
      description: The `class` of the object
      enum:
        - person
        - vehicle
        - suitcase
        - backpack
        - handbag
        - weapon
        - face
    PersonAttributeList:
      title: PersonAttributeList
      description: List of all the attributes related to object of `person` class
      allOf:
        - $ref: '#/components/schemas/PersonGenderList'
        - $ref: '#/components/schemas/PersonUbcColorList'
        - $ref: '#/components/schemas/PersonLbcColorList'
    VehicleAttributeList:
      title: VehicleAttributeList
      description: List of all the attributes related to object of `vehicle` class
      allOf:
        - $ref: '#/components/schemas/VehicleBodyTypeList'
        - $ref: '#/components/schemas/VehicleMakeList'
        - $ref: '#/components/schemas/VehicleColorList'
    WeaponAttributeList:
      title: WeaponAttributeList
      description: List of all the attributes related to object of `weapon` class
      allOf:
        - $ref: '#/components/schemas/WeaponClassList'
    EenLprAccessTypeV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >
            Lists are maintained about known vehicles and this object describes
            if a known vehicle should be allowed or denied according to these
            lists.
          required:
            - type
            - accessType
            - vehicleListId
          properties:
            type:
              type: string
              enum:
                - een.lprAccessType.v1
            accessType:
              type: string
              description: >-
                Denotes the access type the vehicle list set for the vehicle
                that triggered the event.
              enum:
                - allow
                - deny
              example: allow
            vehicleListId:
              type: string
              format: uuid
              description: Vehicle list Id which matched this event
              example: b38cd9db-d8e2-40cf-bcae-415d68fbfb7b
    EenUserDataV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >-
            Object containing all user information associated with the specific
            event. For example, for a plate read, this would contain user
            supplied attributes for the given plate like apartment number. the
            following are the guidelines for supplying User Data:
              * Fields Should be in camelCase
              * Maximum of 5 unique keys.
              * Each key or value should have only 256 characters max.
          example:
            type: een.userData.v1
            creatorId: een.lpr
            apartmentNum: 105A
          properties:
            type:
              type: string
              enum:
                - een.userData.v1
    EenCroppedFrameImageUrlV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the cropped frame image url related to the event.
          required:
            - httpsUrl
            - timestamp
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.croppedFrameImageUrl.v1
            httpsUrl:
              type: string
              format: url
              description: >-
                Link to obtain the frame crop image of the area of interest
                related to this event.  For example in case of LPR, it is
                beneficial for end user to obtain the crop of the license plate.
              example: >-
                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
            timestamp:
              type: string
              format: date-time
              description: Timestamp of the frame from which the crop was made.
    EenFullFrameImageUrlV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: Details about the full frame image url related to the event.
          properties:
            type:
              type: string
              enum:
                - een.fullFrameImageUrl.v1
            httpsUrl:
              type: string
              format: url
              description: Link to obtain the full frame image related to this event.
              example: >-
                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
            timestamp:
              type: string
              format: date-time
              description: Timestamp of the frame from which the crop was made.
            feedType:
              type: string
              enum:
                - main
                - preview
              description: >
                Multiple video feeds can be published per source, but they
                should all have the same viewpoint. They can differ in
                resolution:
                  * `main` is higher resolution and high framerate.
                  * `preview` is low resolution and low framerate.
          required:
            - httpsUrl
            - timestamp
    EenCreatorDetailsV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >
            Details about the source of the events. Generally this should mainly
            be used for "subjective" events where  different applications,
            hardware models and even versions might generate different results,
            making it useful to be  able to differentiate between them.
          required:
            - id
            - vendor
          properties:
            type:
              type: string
              enum:
                - een.creatorDetails.v1
            id:
              type: string
              description: CreatorId this gives the details for.
              example: een.lpr
            vendor:
              type: string
              description: >-
                The organisation that is responsible for the application that
                generated the event.
              example: Eagle Eye Networks
            application:
              type: string
              description: >
                The name of the application. Does not need to be supplied for
                device generated events unless it is generated by an an
                installable app on the device such.
              example: Cloud License Plate Recognition
            hardwareModel:
              type: string
              description: >-
                Model name if generated by software running on a device such as
                a camera.
              example: EN-CDUD-005a
            version:
              type: string
              description: >
                The version of the application. Can be unique build version, but
                less fine-grained is also ok if there is no impact on event
                generation between builds.
              example: 20230318.082522.039235885
            needsValidation:
              type: boolean
              description: >
                Indicates that confidence of the application or its integrators
                isn't high enough to use the event without further verification.
              default: false
    EenDisplayOverlayBoundingBoxV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >
            It represents the overlays data that can be used to overlay displays
            for a particular event type, from the bounding boxes. This can
            include details such as labels, bounding boxes, and other relevant
            visual markers.
          required:
            - overlays
          properties:
            type:
              type: string
              enum:
                - een.displayOverlay.boundingBox.v1
            overlays:
              type: array
              description: A list of overlay data available for the event.
              items:
                type: object
                required:
                  - label
                  - timestamp
                  - labelLocation
                  - color
                  - lineWidth
                  - boundingBox
                properties:
                  label:
                    type: string
                    description: >
                      The label to be displayed at the specified location based
                      on the event type. 
                  timestamp:
                    type: string
                    format: date-time
                    description: >
                      The timestamp for which the bounding box display overlay
                      is valid. Format is ISO 8601.
                  labelLocation:
                    type: string
                    description: |
                      The location where the label will be displayed.
                    enum:
                      - topLeft
                  color:
                    type: string
                    format: color
                    example: '#C0DF16'
                    description: >
                      The color code in hex format for the bounding box
                      (outline). In SVG or CSS, this corresponds to the `stroke`
                      property.
                  lineWidth:
                    type: integer
                    description: >
                      The width of the line for the bounding box based on
                      factors like object size, priority and event type,
                      specified in normalized units. This value represents a
                      fraction of the overall size of the display area. For
                      example, a value of 0.03 means the line will be 3% of the
                      total width or height of the display area. In SVG or CSS,
                      this corresponds to the `stroke-width` property.
                  boundingBox:
                    $ref: '#/components/schemas/BoundingBoxV1'
    EenFullFrameImageUrlWithOverlayV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >-
            Provides URLs for retrieving a full-frame image related to an event,
            with SVG overlays.
          properties:
            type:
              type: string
              enum:
                - een.fullFrameImageUrlWithOverlay.v1
            overlaySvgHeaderUrl:
              type: string
              format: url
              description: >-
                Link to obtain the svg overlay through `X-Een-OverlaySvg` header
                containing the overlays as a SVG image.
              example: >-
                https://media.c001.eagleeyenetworks.com/api/v3.0/media/recordedImage.jpeg?type=preview&deviceId=1002931e&include=overlaySvgHeader&overlayId__in=een.motionDetectionEvent.v1&timestamp__gt=2024-12-05T15%3A20%3A59.829%2B00%3A00
            overlayEmbeddedUrl:
              type: string
              format: url
              description: >-
                Link to obtain the svg overlay on top of the source image
                resulting in a single jpeg.
              example: >-
                https://media.c001.eagleeyenetworks.com/api/v3.0/media/recordedImage.jpeg?type=preview&deviceId=1002931e&include=overlayEmbedded&overlayId__in=een.motionDetectionEvent.v1&timestamp__gt=2024-12-05T15%3A20%3A59.829%2B00%3A00
          required:
            - overlaySvgHeaderUrl
    EenVehicleListInfoV1:
      readOnly: true
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >-
            Provides details of vehicle lists that include a license plate for
            which an LPR event was triggered. This is a system-generated data
            schema and cannot be created using POST API calls.
          example:
            type: een.vehicleListInfo.v1
            vehicleListId: 5de856b5-f450-4f47-bdcf-816ce8a353e2
            vehicleListName: Employee list
          properties:
            vehicleListId:
              type: string
              description: The unique uuid of the vehicle list
            vehicleListName:
              type: string
              description: The user defined name of the vehicle list
    EenVspInsightsSummaryInfoV1:
      readOnly: true
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: >-
            Object containing the insights details generated by the VSP package
            for a License Plate Recognition (LPR) event. These insights provide
            information such as first-time appearances, hotlist matches, or
            count of occurrences. This is a system-generated data schema and
            cannot be created using POST API calls.
          example:
            type: een.vspInsightsSummary.v1
            insightType: new
            description: First appearance of this plate in this account
          properties:
            insightType:
              type: string
              description: >
                A short identifier representing the type of insight.  Example
                values include:
                  - `new`: First appearance of the plate.
                  - `count`: Indicates number of times the vehicle has been seen
                  - `hotlist`: hotlisted vehicle
            value:
              type: string
              nullable: true
              description: |
                Optional value associated with the insightType.
            description:
              type: string
              description: >
                Human-readable explanation of the insight, intended for end
                users. A single tag can have multiple different descriptions,
                depending on the context or additional data associated with the
                insight.
    FleetCodeRecognitionEvent:
      description: >-
        Generated when the camera captures a fleet code of a passing vehicle. It
        represents a single point in time.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventEnvelope'
        - properties:
            type:
              type: string
              enum:
                - een.fleetCodeRecognitionEvent.v1
            data:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/EenObjectDetectionV1'
                  - $ref: '#/components/schemas/EenDotNumberRecognitionV1'
                  - $ref: '#/components/schemas/EenTruckNumberRecognitionV1'
                  - $ref: '#/components/schemas/EenTrailerNumberRecognitionV1'
                  - $ref: '#/components/schemas/EenCroppedFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenFullFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenCreatorDetailsV1'
                  - $ref: '#/components/schemas/EenFleetCodeRecognitionV1'
    EenDotNumberRecognitionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the dot number that was detected.
          required:
            - type
            - regNumber
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.dotNumberRecognition.v1
            regNumber:
              type: string
              description: This is the detected registration number of the vehicle.
              example: '1752035'
            regNumberConfidence:
              description: >-
                The confidence of the number read reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.99
              minimum: 0
              maximum: 1
    EenTruckNumberRecognitionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the truck number that was detected.
          required:
            - type
            - regNumber
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.truckNumberRecognition.v1
            regNumber:
              type: string
              description: This is the detected registration number of the vehicle.
              example: '1752035'
            regNumberConfidence:
              description: >-
                The confidence of the number read reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.99
              minimum: 0
              maximum: 1
    EenTrailerNumberRecognitionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the trailer number that was detected.
          required:
            - type
            - regNumber
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.trailerNumberRecognition.v1
            regNumber:
              type: string
              description: This is the detected registration number of the vehicle.
              example: '1752035'
            regNumberConfidence:
              description: >-
                The confidence of the number read reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.99
              minimum: 0
              maximum: 1
    EenFleetCodeRecognitionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the extra text that was detected from vehicle.
          required:
            - type
            - value
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.recognizedText.v1
            value:
              type: string
              description: This is the recognized text.
              example: ABC123
            valueConfidence:
              description: >-
                The confidence of the recognized text as a float value between 0
                and 1.
              type: number
              format: float
              example: 0.99
              minimum: 0
              maximum: 1
    LprRulesFields:
      type: object
      properties:
        actor:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        enabled:
          type: array
          items:
            type: boolean
        priority:
          type: array
          items:
            $ref: '#/components/schemas/Priority'
        type:
          type: array
          items:
            $ref: '#/components/schemas/RuleType'
    Priority:
      type: integer
      description: Defines the priority of the alert
      format: int32
      minimum: 1
      maximum: 10
    LprRulesResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/LprAlertConditionRule'
    RuleType:
      $ref: '#/components/schemas/LprRuleTypes'
    LprRuleTypes:
      type: string
      description: >
        Enumerates available rule types. The brief synopsis of the rules as
        follows. 
         * `lprRuleAccessControlAllow` and `lprRuleAccessControlDeny` create an alert when vehicles are seen whose access type is `allow` or `deny` respectively. 
         * `lprRuleWatch` sets up a timer on those vehicles for all vehicles except where `securityStatus` is set to `exempted`. If these vehicles are seen once and not seen again within the specified time interval, an alert is raised.
         * `lprRuleCountAggr` sets up aggregation for camera or location and fires an alert if the aggregation 
            (detection count) in a specified time interval falls above or below threshold.
         * `lprRuleHotlist` configures to receive an alert for a specific plate or for all plate in a vehicle list which has Vehicle Category (secuirtyStatus) marked as 'hotlist'
         * `lprRuleUnlisted` configures to receive an alert for vehicles which are not part of the vehicle list
      enum:
        - lprRuleAccessControlAllow
        - lprRuleAccessControlDeny
        - lprRuleWatch
        - lprRuleCountAggr
        - lprRuleHotlist
        - lprRuleUnlisted
    LprAlertConditionRuleUntaggedForPost:
      allOf:
        - type: object
          description: >-
            Encompasses all the user specified properties of a rule used to
            generate alerts.
          required:
            - type
            - name
            - configuration
          oneOf:
            - $ref: '#/components/schemas/LprAlertConditionRuleAccessControlForPost'
            - $ref: '#/components/schemas/LprAlertConditionRuleEventAggrForPost'
            - $ref: '#/components/schemas/LprAlertConditionRuleWatchForPost'
            - $ref: '#/components/schemas/LprAlertConditionRuleHotlistForPost'
            - $ref: '#/components/schemas/LprAlertConditionRuleUnlistedForPost'
          discriminator:
            propertyName: type
            mapping:
              lprRuleAccessControlAllow: '#/components/schemas/LprAlertConditionRuleAccessControlForPost'
              lprRuleAccessControlDeny: '#/components/schemas/LprAlertConditionRuleAccessControlForPost'
              lprRuleCountAggr: '#/components/schemas/LprAlertConditionRuleEventAggrForPost'
              lprRuleWatch: '#/components/schemas/LprAlertConditionRuleWatchForPost'
              lprRuleHotlist: '#/components/schemas/LprAlertConditionRuleHotlistForPost'
              lprRuleUnlisted: '#/components/schemas/LprAlertConditionRuleUnlistedForPost'
    LprAlertConditionRuleUntaggedForPatch:
      type: object
      description: >-
        Encompasses all the user specified properties of a rule used to generate
        alerts.
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleUntagged'
    LprAlertConditionRuleUntagged:
      oneOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleAccessControlForPatch'
        - $ref: '#/components/schemas/LprAlertConditionRuleEventAggrForPatch'
        - $ref: '#/components/schemas/LprAlertConditionRuleWatchForPatch'
        - $ref: '#/components/schemas/LprAlertConditionRuleHotlistForPatch'
        - $ref: '#/components/schemas/LprAlertConditionRuleUnlistedForPatch'
      discriminator:
        propertyName: type
        mapping:
          lprRuleAccessControlAllow: '#/components/schemas/LprAlertConditionRuleAccessControlForPatch'
          lprRuleAccessControlDeny: '#/components/schemas/LprAlertConditionRuleAccessControlForPatch'
          lprRuleCountAggr: '#/components/schemas/LprAlertConditionRuleEventAggrForPatch'
          lprRuleWatch: '#/components/schemas/LprAlertConditionRuleWatchForPatch'
          lprRuleHotlist: '#/components/schemas/LprAlertConditionRuleHotlistForPatch'
          lprRuleUnlisted: '#/components/schemas/LprAlertConditionRuleUnlistedForPatch'
    LprAlertConditionRuleAccessControl:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleBase'
        - type: object
          properties:
            type:
              type: string
              description: >-
                Rules of type `lprRuleAccessControlAllow` and
                `lprRuleAccessControlDeny` create an alert when vehicles are
                seen whose access type is `allow` or `deny` respectively.
              enum:
                - lprRuleAccessControlAllow
                - lprRuleAccessControlDeny
            configuration:
              oneOf:
                - $ref: '#/components/schemas/LprRuleCfgAccessControlByPlate'
                - $ref: '#/components/schemas/LprRuleCfgAccessControlByList'
                - $ref: '#/components/schemas/LprRuleCfgAccessControlByAnyPlateExcept'
              discriminator:
                propertyName: filterType
                mapping:
                  plate: '#/components/schemas/LprRuleCfgAccessControlByPlate'
                  vehicleList: '#/components/schemas/LprRuleCfgAccessControlByList'
                  anyPlateExcept: '#/components/schemas/LprRuleCfgAccessControlByAnyPlateExcept'
      example:
        type: lprRuleAccessControlAllow
        name: Allow Employees vehicles
        priority: 10
        notes: >-
          This rule filters plates belonging to global employee list and allows
          access
        enabled: false
        eventFilter:
          eventTypes:
            - een.lprPlateReadEvent.v1
          schedule:
            sunday:
              - start: '20:11'
                end: '18:34'
            monday:
              - start: '21:38'
                end: '17:12'
            tuesday:
              - start: '12:48'
                end: '11:20'
            wednesday:
              - start: '22:41'
                end: '22:23'
            thursday:
              - start: '20:00'
                end: '22:50'
            friday:
              - start: '09:40'
                end: '16:18'
            saturday:
              - start: '23:32'
                end: '21:45'
          resourceFilter:
            actors:
              - id: 100b913c
                type: camera
        configuration:
          barrierOpen: true
          filterType: plate
          plates:
            - ABC123
        id: f65907c0-5bb9-45cd-bc2e-173aa9a3f009
        createTimeStamp: '2021-04-22T00:00:00.000+00:00'
        updateTimeStamp: '2021-04-22T00:20:00.000+00:00'
        createdByUserId: ca0de584
        outputAlertTypes:
          - een.LprAccessControlAllow.v1
    LprAlertConditionRuleAccessControlForPatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleAccessControl'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilterForPatch'
    LprAlertConditionRuleAccessControlForPost:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleAccessControl'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilter'
          required:
            - name
            - type
            - configuration
    LprAlertConditionRuleEventAggr:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleBase'
        - type: object
          properties:
            type:
              type: string
              description: >-
                Rule of type `lprRuleCountAggr` sets up aggregation for camera
                or location and fires an alert if the aggregation (detection
                count) in a specified time interval falls above or below
                threshold.
              enum:
                - lprRuleCountAggr
            configuration:
              type: object
              description: >-
                Configuration Parameters pertaining to Event Aggregation Rule.
                This rule checks for the count vehicle events in a window of
                specified size, for any camera under the purview of this rule.
                It fires on this count being either above or below this
                threshold, as specified by the configuration parameters. In
                other words, the rule can be used for checking either too many
                or too few events in a given time window.
              properties:
                windowSize:
                  type: string
                  description: >-
                    Window size of event aggregation. For example, if set to 1h,
                    then the rule is applied on every sliding window of duration
                    1 hour.
                  example: 1h
                countThr:
                  type: integer
                  format: int32
                  description: Count of vehicle threshold for alert
                greaterThanThr:
                  type: boolean
                  description: >-
                    If true, alert fires on count > threshold, else it fires on
                    below thr
              required:
                - windowSize
                - countThr
                - greaterThanThr
      example:
        type: lprRuleCountAggr
        name: Event high count rule
        priority: 10
        notes: This rule alerts when event count is greater than 100 in an hour
        enabled: false
        eventFilter:
          eventTypes:
            - een.lprPlateReadEvent.v1
          schedule:
            sunday:
              - start: '20:11'
                end: '18:34'
            monday:
              - start: '21:38'
                end: '17:12'
            tuesday:
              - start: '12:48'
                end: '11:20'
            wednesday:
              - start: '22:41'
                end: '22:23'
            thursday:
              - start: '20:00'
                end: '22:50'
            friday:
              - start: '09:40'
                end: '16:18'
            saturday:
              - start: '23:32'
                end: '21:45'
          resourceFilter:
            actors:
              - id: 100b913c
                type: camera
        configuration:
          windowSize: 1h
          countThr: 100
          greaterThanThr: true
        id: f65907c0-5bb9-45cd-bc2e-173aa9a3f008
        createTimeStamp: '2021-04-22T00:00:00.000+00:00'
        updateTimeStamp: '2021-04-22T00:20:00.000+00:00'
        createdByUserId: ca0de584
        outputAlertTypes:
          - een.LprRuleCountAggr.v1
    LprAlertConditionRuleEventAggrForPatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleEventAggr'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilterForPatch'
    LprAlertConditionRuleEventAggrForPost:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleEventAggr'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilter'
          required:
            - name
            - type
            - configuration
    LprAlertConditionRuleWatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleBase'
        - type: object
          properties:
            type:
              type: string
              description: >-
                Rule of type `lprRuleWatch` sets a timer for all vehicles,
                except those with `securityStatus` set to `exempted`. If these
                vehicles are seen once and not seen again within the specified
                time interval, an alert is raised.
              enum:
                - lprRuleWatch
            configuration:
              oneOf:
                - $ref: '#/components/schemas/LprRuleCfgWatchByPlate'
                - $ref: '#/components/schemas/LprRuleCfgWatchByList'
                - $ref: '#/components/schemas/LprRuleCfgWatchByAnyPlateExcept'
              discriminator:
                propertyName: filterType
                mapping:
                  plate: '#/components/schemas/LprRuleCfgWatchByPlate'
                  vehicleList: '#/components/schemas/LprRuleCfgWatchByList'
                  anyPlateExcept: '#/components/schemas/LprRuleCfgWatchByAnyPlateExcept'
      example:
        type: lprRuleWatch
        name: Watch rule
        priority: 10
        notes: >-
          This rule alerts if a vehicle does not appear in the destination
          camera within the specified time
        enabled: false
        eventFilter:
          eventTypes:
            - een.lprPlateReadEvent.v1
          schedule:
            sunday:
              - start: '20:11'
                end: '18:34'
            monday:
              - start: '21:38'
                end: '17:12'
            tuesday:
              - start: '12:48'
                end: '11:20'
            wednesday:
              - start: '22:41'
                end: '22:23'
            thursday:
              - start: '20:00'
                end: '22:50'
            friday:
              - start: '09:40'
                end: '16:18'
            saturday:
              - start: '23:32'
                end: '21:45'
          resourceFilter:
            actors:
              - id: 100b913c
                type: camera
              - id: 1000205a
                type: camera
        configuration:
          durationThresh: 1h
          originActors:
            - id: 100b913c
              type: camera
          destinationActors:
            - id: 1000205a
              type: camera
          filterType: plate
          plates:
            - ABC123
        id: f65907c0-5bb9-45cd-bc2e-173aa9a3f007
        createTimeStamp: '2021-04-22T00:00:00.000+00:00'
        updateTimeStamp: '2021-04-22T00:20:00.000+00:00'
        createdByUserId: ca0de584
        outputAlertTypes:
          - een.LprRuleWatch.v1
    LprAlertConditionRuleWatchForPatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleWatch'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilterForPatch'
    LprAlertConditionRuleWatchForPost:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleWatch'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilter'
          required:
            - name
            - type
            - configuration
    LprAlertConditionRuleHotlist:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleBase'
        - type: object
          properties:
            type:
              type: string
              description: |
                A rule of type `lprRuleHotlist` triggers an alert when either:
                 1. A specific license plate is detected.
                 2. Any license plate from a vehicle list with Vehicle Category (securityStatus) marked as 'hotlist' is detected.
              enum:
                - lprRuleHotlist
            configuration:
              oneOf:
                - $ref: '#/components/schemas/LprRuleCfgHotlistByPlate'
                - $ref: '#/components/schemas/LprRuleCfgHotlistByList'
                - $ref: '#/components/schemas/LprRuleCfgHotlistByAnyPlateExcept'
              discriminator:
                propertyName: filterType
                mapping:
                  plate: '#/components/schemas/LprRuleCfgHotlistByPlate'
                  vehicleList: '#/components/schemas/LprRuleCfgHotlistByList'
                  anyPlateExcept: '#/components/schemas/LprRuleCfgHotlistByAnyPlateExcept'
      example:
        type: lprRuleHotlist
        name: Hotlist rule
        priority: 10
        notes: This rule alerts for a hotlisted vehicle
        enabled: false
        eventFilter:
          eventTypes:
            - een.lprPlateReadEvent.v1
          schedule:
            sunday:
              - start: '20:11'
                end: '18:34'
            monday:
              - start: '21:38'
                end: '17:12'
            tuesday:
              - start: '12:48'
                end: '11:20'
            wednesday:
              - start: '22:41'
                end: '22:23'
            thursday:
              - start: '20:00'
                end: '22:50'
            friday:
              - start: '09:40'
                end: '16:18'
            saturday:
              - start: '23:32'
                end: '21:45'
          resourceFilter:
            actors:
              - id: 100b913c
                type: camera
              - id: 1000205a
                type: camera
        configuration:
          filterType: vehicleList
          vehicleListIds:
            - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
        id: f65907c0-5bb9-45cd-bc2e-173aa9a3f006
        createTimeStamp: '2021-04-22T00:00:00.000+00:00'
        updateTimeStamp: '2021-04-22T00:20:00.000+00:00'
        createdByUserId: ca0de584
        outputAlertTypes:
          - een.LprRuleHotlist.v1
    LprAlertConditionRuleHotlistForPatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleHotlist'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilterForPatch'
    LprAlertConditionRuleHotlistForPost:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleHotlist'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilter'
          required:
            - name
            - type
            - configuration
    LprAlertConditionRuleUnlisted:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleBase'
        - type: object
          properties:
            type:
              type: string
              description: >-
                A rule of type `lprRuleUnlisted` triggers an alert when a
                license plate is detected that does not appear in the configured
                vehicle list.
              enum:
                - lprRuleUnlisted
            configuration:
              oneOf:
                - $ref: '#/components/schemas/LprRuleCfgUnlistedByList'
              discriminator:
                propertyName: filterType
                mapping:
                  vehicleList: '#/components/schemas/LprRuleCfgUnlistedByList'
      example:
        type: lprRuleUnlisted
        name: Unlisted rule
        priority: 10
        notes: This rule alerts for vehicles not in the vehicle list
        enabled: false
        eventFilter:
          eventTypes:
            - een.lprPlateReadEvent.v1
          schedule:
            sunday:
              - start: '20:11'
                end: '18:34'
            monday:
              - start: '21:38'
                end: '17:12'
            tuesday:
              - start: '12:48'
                end: '11:20'
            wednesday:
              - start: '22:41'
                end: '22:23'
            thursday:
              - start: '20:00'
                end: '22:50'
            friday:
              - start: '09:40'
                end: '16:18'
            saturday:
              - start: '23:32'
                end: '21:45'
          resourceFilter:
            actors:
              - id: 100b913c
                type: camera
              - id: 1000205a
                type: camera
        configuration:
          filterType: vehicleList
          vehicleListIds:
            - b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
        id: f65907c0-5bb9-45cd-bc2e-173aa9a3f005
        createTimeStamp: '2021-04-22T00:00:00.000+00:00'
        updateTimeStamp: '2021-04-22T00:20:00.000+00:00'
        createdByUserId: ca0de584
        outputAlertTypes:
          - een.LprRuleUnlisted.v1
    LprAlertConditionRuleUnlistedForPatch:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleUnlisted'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilterForPatch'
    LprAlertConditionRuleUnlistedForPost:
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleUnlisted'
        - type: object
          properties:
            eventFilter:
              $ref: '#/components/schemas/EventFilter'
          required:
            - name
            - type
            - configuration
    LprAlertConditionRuleBase:
      type: object
      description: >-
        Encompasses all the user specified properties of a rule used to generate
        alerts.
      properties:
        name:
          type: string
          description: Meaningful name for the rule
          example: Allow Employees vehicles
        priority:
          $ref: '#/components/schemas/Priority'
        notes:
          type: string
          description: A verbose explanation of the rule
          example: >-
            This rule filters plates belonging to global employee list and
            allows access
        enabled:
          type: boolean
          default: false
          description: Whether rule is enabled
        configuration:
          type: object
    LprAlertConditionRule:
      type: object
      description: >-
        Encompasses all the user specified and system generated properties of a
        rule used to generate alerts.
      allOf:
        - $ref: '#/components/schemas/LprAlertConditionRuleUntagged'
        - type: object
          properties:
            id:
              type: string
              description: The system generated id of this rule resource
              readOnly: true
            createTimeStamp:
              type: string
              description: Time at which the Alert Condition Rule was created.
              example: '2021-04-22T00:00:00.000+00:00'
              readOnly: true
              format: date-time
            updateTimeStamp:
              type: string
              description: Time at which the Alert Condition Rule was updated.
              example: '2021-04-22T00:20:00.000+00:00'
              readOnly: true
              format: date-time
            createdByUserId:
              type: string
              description: User id of the creator of the rule
              example: ca0de584
              readOnly: true
            outputAlertTypes:
              type: array
              description: >-
                Possible Alert Types that are producible by this rule. For a
                given event, what alert is produced depends on the configuration
                parameters of the rule and the event properties
              items:
                type: string
                example: een.LprAccessControlAllow.v1
    EventFilter:
      type: object
      description: >-
        A list of attributes of the event used to funnel down a specific set of
        events for any downstream action. This filtering construct is as such
        independent of VSP and quite generic
      properties:
        eventTypes:
          type: array
          description: List of event types allowed to be processed by this rule
          items:
            type: string
            example: een.lprPlateReadEvent.v1
        schedule:
          $ref: '#/components/schemas/WeeklyIntervalScheduleAllRequired'
        resourceFilter:
          $ref: '#/components/schemas/ResourceFilter'
    EventFilterForPatch:
      type: object
      description: >-
        A list of attributes of the event used to funnel down a specific set of
        events for any downstream action. This filtering construct is as such
        independent of VSP and quite generic
      properties:
        eventTypes:
          type: array
          description: List of event types allowed to be processed by this rule
          items:
            type: string
            example: een.lprPlateReadEvent.v1
        schedule:
          $ref: '#/components/schemas/WeeklyIntervalSchedule'
        resourceFilter:
          $ref: '#/components/schemas/ResourceFilter'
    ResourceFilter:
      type: object
      description: >-
        List of actors against which filtering to happen
        (camera/location/account)
      properties:
        actors:
          type: array
          description: List of the actors for which events are checked.
          items:
            anyOf:
              - $ref: '#/components/schemas/ActorFilter'
    LprRuleCfgAccessControlByPlate:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgAccessControlBase'
        - $ref: '#/components/schemas/RuleMapPlate'
    LprRuleCfgAccessControlByList:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgAccessControlBase'
        - $ref: '#/components/schemas/RuleMapList'
    LprRuleCfgAccessControlByAnyPlateExcept:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgAccessControlBase'
        - $ref: '#/components/schemas/RuleMapAnyPlateExcept'
    LprRuleCfgAccessControlBase:
      type: object
      description: Configuration parameters for access control Rule Behavior
      example:
        barrierOpen: true
        filterType: plate
        plates:
          - ABC123
      properties:
        barrierOpen:
          type: boolean
          description: >-
            A flag that indicates whether to open boom barrier / vending gate,
            if any associated. This rule property may be interpreted by any LPR
            algorithm that runs for the cameras/locations/account to which this
            rule applies.
          example: true
        filterType:
          type: string
          example: plate
          description: >-
            Enumerates available filter types. The brief synopsis of the filters
            is as follows:
              * plate: rule is applied to one or more plate(s)
              * vehicleList: rule is applied to one or more vehicle list(s)
              * anyPlateExcept: rule to be applied to all plates, except ones which are exempted in the optionally provided vehicle list
          enum:
            - plate
            - vehicleList
            - anyPlateExcept
      required:
        - filterType
        - barrierOpen
    RuleMapList:
      type: object
      properties:
        filterType:
          type: string
          enum:
            - vehicleList
        vehicleListIds:
          type: array
          maxItems: 1
          description: >
            Enumerates the IDs of all Vehicle Lists that are under the purview
            of this rule.
          items:
            type: string
            example: b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
      required:
        - vehicleListIds
    RuleMapPlate:
      type: object
      properties:
        filterType:
          type: string
          enum:
            - plate
        plates:
          type: array
          maxItems: 1
          description: >-
            Specific license plates on which the rule fires. This can be used to
            map specific plates to a rule, without the need to add them to a
            vehicle list.
          items:
            type: string
            example: ABC123
      required:
        - plates
    RuleMapAnyPlateExcept:
      type: object
      required:
        - exemptionVehicleListIds
      properties:
        filterType:
          type: string
          enum:
            - anyPlateExcept
        exemptionVehicleListIds:
          type: array
          maxItems: 1
          description: >
            Enumerates the IDs of all Vehicle Lists that are used for exemption
            of vehicles from the rule.
          items:
            type: string
            example: b6a5e240-6ba8-4d5a-a38e-bc648ac5f94e
    LprRuleCfgWatchByPlate:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgWatchBase'
        - $ref: '#/components/schemas/RuleMapPlate'
    LprRuleCfgWatchByList:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgWatchBase'
        - $ref: '#/components/schemas/RuleMapList'
    LprRuleCfgWatchByAnyPlateExcept:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgWatchBase'
        - $ref: '#/components/schemas/RuleMapAnyPlateExcept'
    LprRuleCfgWatchBase:
      type: object
      description: Configuration parameters for the Vehicle Watch rule
      properties:
        durationThresh:
          type: string
          description: >-
            Time threshold within which same vehicle (same license plate) needs
            to be seen again, failing which, an alert is fired.
          example: 1h
        originActors:
          type: array
          items:
            type: object
            description: >-
              Specifies the attributes of an actor from where the first
              occurrence of the vehicle should happen for the rule to initiate.
              The below actors should be part of resource filter defined for the
              rule and should not be part of destinationActors.
            properties:
              id:
                type: string
                description: >-
                  The id of the thing that caused the event This can be camera
                  or location ID.
                example: 100b913c
              type:
                type: string
                enum:
                  - camera
                  - location
                default: camera
                description: Type of actor that caused the event.
            required:
              - type
        destinationActors:
          type: array
          items:
            type: object
            description: >-
              Specifies the attributes of an actor from where the second
              occurrence of the vehicle should happen to affect the rule. The
              below actors should be part of resource filter defined for the
              rule and should not be part of originActors.
            properties:
              id:
                type: string
                description: >-
                  The id of the thing that caused the event This can be camera
                  or location ID.
                example: 100b913c
              type:
                type: string
                enum:
                  - camera
                  - location
                default: camera
                description: Type of actor that caused the event.
            required:
              - type
        filterType:
          type: string
          example: plate
          description: >-
            Enumerates available filter types. The brief synopsis of the maps as
            follows:
              * plate: rule should be applied to one or more plate(s)
              * vehicleList: rule to be applied to one or more vehicle list(s)
              * anyPlateExcept: rule to be applied to all plates, except ones which are exempted in the optionally provided vehicle list
          enum:
            - plate
            - vehicleList
            - anyPlateExcept
      required:
        - originActors
        - destinationActors
        - durationThresh
        - filterType
    LprRuleCfgHotlistByPlate:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgHotlistBase'
        - $ref: '#/components/schemas/RuleMapPlate'
    LprRuleCfgHotlistByList:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgHotlistBase'
        - $ref: '#/components/schemas/RuleMapList'
    LprRuleCfgHotlistByAnyPlateExcept:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgHotlistBase'
        - $ref: '#/components/schemas/RuleMapAnyPlateExcept'
    LprRuleCfgHotlistBase:
      type: object
      description: Configuration parameters for the Vehicle hotlist rule
      properties:
        filterType:
          type: string
          example: plate
          description: >-
            Enumerates available filter types. The brief synopsis of the maps as
            follows:
              * plate: rule should be applied to one or more plate(s)
              * vehicleList: rule to be applied to one or more vehicle list(s)
              * anyPlateExcept: rule to be applied to all plates, except ones which are exempted in the optionally provided vehicle list  
          enum:
            - plate
            - vehicleList
            - anyPlateExcept
      required:
        - filterType
    LprRuleCfgUnlistedByList:
      allOf:
        - $ref: '#/components/schemas/LprRuleCfgUnlistedBase'
        - $ref: '#/components/schemas/RuleMapList'
    LprRuleCfgUnlistedBase:
      type: object
      description: Configuration parameters for the Unlisted vehicle rule
      properties:
        filterType:
          type: string
          example: vehicleList
          description: >-
            Specify the filter type for the rule, currently only vehicleList is
            supported:
              * vehicleList: rule to be applied to one or more vehicle list(s)
          enum:
            - vehicleList
      required:
        - filterType
    AlertActionRuleUpdate:
      type: object
      properties:
        id:
          description: Unique identifier of the alert action rule.
          type: string
          readOnly: true
          example: 322d38b9-8ed7-41b5-a57d-3fe9f160939c
        createTimestamp:
          description: Time at which the alert action rule was created.
          type: string
          format: date-time
          readOnly: true
          example: '2021-04-22T00:00:00.000+00:00'
        name:
          description: >-
            Name to let humans easily identify and understand the alert action
            rule.
          type: string
          example: Cameras offline for 5 min.
        notes:
          description: >-
            Large text field that allows users to leave notes for themselves and
            others.
          type: string
          example: Take action if cameras are offline for more than 5 minutes.
        enabled:
          description: >-
            If set to true, this rule is active, if set to false, it will not be
            applied.
          type: boolean
          example: true
          default: true
        categories:
          description: >-
            If defined, this rule will only trigger on alerts that fall within
            one of the given categories.
          type: array
          items:
            $ref: '#/components/schemas/category'
          nullable: true
          minLength: 1
        alertTypes:
          description: >-
            If defined, this rule will only trigger on alerts of the given
            types.
          type: array
          items:
            type: string
            example: audit
          nullable: true
          minLength: 1
        actorIds:
          description: >-
            If defined, this rule will only trigger on alerts about actors with
            the given ids.
          type: array
          items:
            type: string
          nullable: true
          minLength: 1
        actorTypes:
          description: >-
            If defined, this rule will only trigger on alerts about actors of
            the given types.
          type: array
          items:
            type: string
            example: device
          nullable: true
          minLength: 1
        actorAccountIds:
          description: >-
            If defined, this rule will only trigger on alerts about actors from
            the given accounts.
          type: array
          items:
            type: string
          nullable: true
          minLength: 1
        ruleIds:
          description: >
            If defined, this rule will only trigger on alerts that were
            generated by one of the given alert condition

            rules.
          type: array
          items:
            type: string
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          nullable: true
          minLength: 1
        priority__gte:
          description: >
            If defined, this rule will only trigger on alerts with a priority
            greater than or equal to the given value.
          type: integer
          example: 3
          nullable: true
        priority__lte:
          description: >
            If defined, this rule will only trigger on alerts with a priority
            less than or equal to the given value.
          type: integer
          example: 8
          nullable: true
        alertActionIds:
          description: Defines the actions to take if an alert matches the rule.
          type: array
          items:
            type: string
            example: f3436b61-94fd-41b6-8f0a-ee6ff55acaa6
    category:
      type: string
      description: The type of the alert.
      enum:
        - health
        - video
        - operational
        - audit
        - job
        - security
        - sharing
      example: video
    AlertActionRule:
      allOf:
        - $ref: '#/components/schemas/AlertActionRuleUpdate'
        - required:
            - name
    WeeklySchedule:
      type: object
      properties:
        days:
          $ref: '#/components/schemas/WeeklyScheduleDays'
        hours:
          $ref: '#/components/schemas/WeeklyScheduleHours'
    WeeklyScheduleAllRequired:
      type: object
      properties:
        days:
          $ref: '#/components/schemas/WeeklyScheduleDaysAllRequired'
        hours:
          $ref: '#/components/schemas/WeeklyScheduleHours'
      required:
        - days
        - hours
    WeeklyScheduleDays:
      type: object
      description: Days of the week that the start and end times are applied.
      properties:
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
    WeeklyScheduleDaysAllRequired:
      allOf:
        - $ref: '#/components/schemas/WeeklyScheduleDays'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    WeeklyScheduleHours:
      type: object
      description: >
        Times that the schedule starts and ends. If the start time is greater
        than the end time, the interval is considered to cover the remaining
        time of the day from the start time until 24:00, and then from 00:00 to
        the end time. 

        For example, start: 16:30 and end: 06:00 on monday means the interval
        covers from 16:30 to 24:00 and continues from 00:00 to 06:00 on the same
        day (monday).
      properties:
        start:
          type: string
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: >-
            Starting point of the interval. It should be in the range of 00:00
            to 23:59 since this is the range for a day.
          minLength: 5
          maxLength: 5
        end:
          type: string
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: >-
            End point of the interval. It should be in the range of 00:00 to
            23:59 since this is the range for the day.
          minLength: 5
          maxLength: 5
      required:
        - start
        - end
    WeeklyIntervalScheduleAllRequired:
      allOf:
        - $ref: '#/components/schemas/WeeklyIntervalSchedule'
        - type: object
          required:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
    WeeklyIntervalSchedule:
      type: object
      description: >
        It signifies a week long alert schedule. This schedule is effective
        according to actor's (user/camera/account) timezone. It allows setting
        different times for different days.
      properties:
        sunday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        monday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        tuesday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        wednesday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        thursday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        friday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        saturday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    Interval:
      type: object
      description: >
        Interval of a schedule. If the start time is greater than the end time,
        the interval is considered to cover the remaining time of the day from
        the start time until 24:00, and then from 00:00 to the end time. 

        For example, start: 16:30 and end: 06:00 on monday means the interval
        covers from 16:30 to 24:00 and continues from 00:00 to 06:00 on the same
        day (monday).
      properties:
        start:
          type: string
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: >-
            Starting point of the interval. It should be in the range of 00:00
            to 23:59 since this is the range for a day
        end:
          type: string
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: >-
            End point of the interval. It should be in the range of 00:00 to
            23:59 since this is the range for the day
      required:
        - start
        - end
    SecurityStatus:
      type: string
      enum:
        - hotlist
        - exempted
      description: |-
        Indicates whether vehicle is
          * hotlist: Vehicle flagged for tracking
          * exempted: Vehicle is exempt from watchlist rule and other rules. This is useful, for instance, when an organization wishes to avoid alerts on known vehicles, like employee vehicles.

          * none: Empty value provided when no special consideration for the vehicle
      example: exempted
    Plate:
      type: string
      description: License plate number of the vehicle in uppercase
      example: ABC123
    LprVehicleListEntriesResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/LprVehicleListPaddedRecord'
    LprVehicleListMetaUntaggedForPost:
      type: object
      description: >-
        User supplied attributes of the list, that does not return the
        individual vehicle records, to be used during creation of list
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/LprVehicleListMetaUntagged'
    LprVehicleListMetaUntaggedForPatch:
      type: object
      description: >-
        User supplied attributes of the list, that does not return the
        individual vehicle records, to be used during patching of list
      allOf:
        - $ref: '#/components/schemas/LprVehicleListMetaUntagged'
    LprVehicleListMetaUntagged:
      type: object
      description: >-
        User supplied attributes of the list, that does not return the
        individual vehicle records, to be used during creation of list or
        patching of list
      properties:
        name:
          type: string
          description: User supplied name for the list
          example: EmployeesList
        enabled:
          type: boolean
          default: false
          description: Whether list is enabled
        notes:
          type: string
          description: A verbose explanation of the vehicle list
          example: This is vehicle list of denied vehicles
        resourceFilter:
          $ref: '#/components/schemas/ResourceFilter'
    LprVehicleListMeta:
      type: object
      description: >-
        User supplied and System generated attributes of the list. However it
        excludes the vehicle records
      allOf:
        - $ref: '#/components/schemas/LprVehicleListMetaUntagged'
        - type: object
          properties:
            id:
              type: string
              description: Unique system generated id for list
              example: ABC123-20221014123567
            createTimestamp:
              type: string
              description: Timestamp when this list created
              format: date-time
              example: '2017-02-27T10:44:13.423Z'
              readOnly: true
            updateTimestamp:
              type: string
              description: Timestamp when this list last updated
              format: date-time
              example: '2017-02-27T10:44:13.423Z'
              readOnly: true
            createdByUserId:
              type: string
              description: User id of the creator of the vehicle list
              example: ca0de584
              readOnly: true
            vehicleCount:
              type: integer
              description: Number of vehicles in the list
              example: 10
              readOnly: true
          required:
            - id
            - createTimestamp
            - updateTimestamp
            - createdByUserId
            - vehicleCount
            - name
    LprVehicleListUntaggedRecordBulkUpdate:
      description: >
        This object identifies the list of records to be updated, and the fields
        and their values to be updated.
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 500
          items:
            type: string
            minItems: 1
          example:
            - ABC123-20221014123567
            - DEF567-20241219873567
            - PQR294-20230712874567
        updateFields:
          type: object
          description: >
            This defines the parameters that will be updated for list of
            records. 
          allOf:
            - $ref: '#/components/schemas/LprVehicleListUntaggedRecordUpdate'
      required:
        - ids
        - updateFields
    LprVehicleListUntaggedRecordUpdate:
      type: object
      description: Encompasses all the fields of the vehicle record that are editable
      properties:
        validFrom:
          type: string
          format: date
          nullable: true
          description: Date from which this record is valid
          example: '2022-01-24'
        validTo:
          type: string
          format: date
          nullable: true
          description: Date upto which this record is valid
          example: '2022-02-25'
        schedule:
          allOf:
            - $ref: '#/components/schemas/WeeklyIntervalSchedule'
          nullable: true
        accessType:
          $ref: '#/components/schemas/AccessType1'
        securityStatus:
          allOf:
            - $ref: '#/components/schemas/SecurityStatus'
          nullable: true
        userData:
          allOf:
            - $ref: '#/components/schemas/UserDataLpr'
          nullable: true
    LprVehicleListUntaggedRecordArray:
      type: array
      items:
        $ref: '#/components/schemas/LprVehicleListUntaggedRecord'
      minItems: 1
      maxItems: 500
    LprVehicleListUntaggedRecord:
      type: object
      description: >-
        Describes each record of the list before addition to the vehicle List,
        in other words, all the user supplied attributes of a specific vehicle.
        This is a union of the editable fields and create-only user-supplied
        fields.
      allOf:
        - $ref: '#/components/schemas/LprVehicleListUntaggedRecordUpdate'
        - type: object
          properties:
            plate:
              $ref: '#/components/schemas/Plate'
            schedule:
              allOf:
                - $ref: '#/components/schemas/WeeklyIntervalScheduleAllRequired'
          required:
            - plate
            - accessType
    LprVehicleListTaggedRecord:
      type: object
      description: >-
        Union of user attributes of a given vehicle and system generated
        attributes (unique id)
      allOf:
        - $ref: '#/components/schemas/LprVehicleListUntaggedRecord'
        - type: object
          properties:
            id:
              type: string
              description: Unique system generated id for record
              example: ABC123-20221014123567
              readOnly: true
            createTimestamp:
              type: string
              description: Timestamp when this record created
              format: date-time
              example: '2017-02-27T10:44:13.423Z'
              readOnly: true
            updateTimestamp:
              type: string
              description: Timestamp when this record last updated
              format: date-time
              example: '2017-02-27T10:44:13.423Z'
              readOnly: true
          required:
            - id
            - createTimestamp
    VehicleBulkDelete:
      type: object
      properties:
        ids:
          minItems: 1
          maxItems: 500
          type: array
          items:
            type: string
      required:
        - ids
    BulkCreateResponseArray:
      type: array
      items:
        allOf:
          - type: object
            properties:
              status:
                type: integer
                example: 201
              plate:
                type: string
                example: ABC456
            required:
              - status
              - plate
    BulkResponseArray:
      type: array
      items:
        allOf:
          - type: object
            properties:
              status:
                type: integer
                example: 204
              id:
                type: string
                example: ABC123-20221014123567
            required:
              - status
              - id
    LprVehicleListPaddedRecord:
      description: >-
        Union of user attributes of a given vehicle and system generated
        attributes (unique id), along with its association to the appropriate
        Vehicle List
      allOf:
        - $ref: '#/components/schemas/LprVehicleListTaggedRecord'
        - type: object
          properties:
            listId:
              type: string
              description: Id of the list this record belongs to
              format: uuid
          required:
            - listId
    LprVehicleListResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              description: IDs of all the vehicle Lists that satisfy the query.
              items:
                $ref: '#/components/schemas/LprVehicleListMeta'
    LprVehicleListsSearchResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/LprVehicleListPaddedRecord'
    AccessType1:
      type: string
      enum:
        - allow
        - deny
    UserDataLpr:
      type: object
      description: >-
        Object containing all user information associated with the specific
        event. For example, for a plate read, this would contain user supplied
        attributes for the given plate like apartment number. the following are
        the guidelines for supplying User Data:
          * It is recommended to use camelCase for field names, but this is not required
          * Maximum of 5 unique keys.
          * Each key or value should have only 256 characters max.
          * The keys 'type' and 'creatorId' are reserved keys.
      example:
        owner: John Doe
        apartmentNum: 105A
  parameters:
    id:
      in: path
      name: id
      required: true
      description: Id
      schema:
        type: string
    timestamp__gte:
      in: query
      name: timestamp__gte
      description: >-
        Provide timestamp to fetch events after this time. Format -
        20220626183000.000
      schema:
        type: string
        format: date-time
    timestamp__lte:
      in: query
      name: timestamp__lte
      description: >-
        Provide timestamp to fetch events before this time. Format -
        20220626183000.000
      schema:
        type: string
        format: date-time
    plateConfidence__lte:
      in: query
      name: plateConfidence__lte
      description: >-
        Provide the confidence value to fetch events with confidence less than
        or equal to the provided value.
      example: 0.57
      schema:
        type: number
        format: float
        minimum: 0
        maximum: 1
    plate:
      in: query
      name: plate
      description: >-
        Provide the license plate in uppercase to be searched with an exact
        match. You can pass `plate`, `plate__fuzzy`, or `plate__contains` as a
        query parameter, but not more than one. Doing so will result in a `400
        Bad Request` error
      schema:
        type: string
    plate__fuzzy:
      in: query
      name: plate__fuzzy
      description: >-
        Provide the license plate for fuzzy search that allows for a single
        character difference. You can pass `plate`, `plate__fuzzy`, or
        `plate__contains` as a query parameter, but not more than one. Doing so
        will result in a `400 Bad Request` error
      schema:
        type: string
    plate__contains:
      in: query
      name: plate__contains
      description: >-
        Provide the license plate for searching substrings or exact match
        license plate. Refrain from passing asterisk `*` else will get `400 Bad
        Request`. You can pass `plate`, `plate__fuzzy`, or `plate__contains` as
        a query parameter, but not more than one. Doing so will result in a `400
        Bad Request` error
      schema:
        type: string
    recognizedText:
      in: query
      name: recognizedText
      description: >-
        Provide the text to be searched with an exact match in any of license
        plate, dot number, truck number, trailer number and recognized text. You
        can pass only one of `recognizedText`, `recognizedText__fuzzy`, or
        `recognizedText__contains` as a query parameter. Passing multiple will
        cause a `400 Bad Request` error.
      schema:
        type: string
    recognizedText__contains:
      in: query
      name: recognizedText__contains
      description: >-
        Provide the text for partial search that allows for a searching partial
        string in any of license plate, dot number, truck number, trailer number
        and recognized text. You can pass only one of `recognizedText`,
        `recognizedText__fuzzy`, or `recognizedText__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    recognizedText__fuzzy:
      in: query
      name: recognizedText__fuzzy
      description: >-
        Provide the text for fuzzy search that allows for a single character
        difference in any of license plate, dot number, truck number, trailer
        number and recognized text. You can pass only one of `recognizedText`,
        `recognizedText__fuzzy`, or `recognizedText__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.dotNumberRecognition.v1.regNumber:
      in: query
      name: data.een.dotNumberRecognition.v1.regNumber
      description: >-
        Provide the number to be searched with an exact match in the dot number
        recognition data. You can pass only one of
        `data.een.dotNumberRecognition.v1.regNumber`,
        `data.een.dotNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.dotNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.dotNumberRecognition.v1.regNumber__contains:
      in: query
      name: data.een.dotNumberRecognition.v1.regNumber__contains
      description: >-
        Provide the number for partial search that allows for a searching
        partial string in the dot number recognition data. You can pass only one
        of `data.een.dotNumberRecognition.v1.regNumber`,
        `data.een.dotNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.dotNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.dotNumberRecognition.v1.regNumber__fuzzy:
      in: query
      name: data.een.dotNumberRecognition.v1.regNumber__fuzzy
      description: >-
        Provide the number for fuzzy search that allows for a single character
        difference in the dot number recognition data. You can pass only one of
        `data.een.dotNumberRecognition.v1.regNumber`,
        `data.een.dotNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.dotNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.truckNumberRecognition.v1.regNumber:
      in: query
      name: data.een.truckNumberRecognition.v1.regNumber
      description: >-
        Provide the number to be searched with an exact match in the truck
        number recognition data. You can pass only one of
        `data.een.truckNumberRecognition.v1.regNumber`,
        `data.een.truckNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.truckNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.truckNumberRecognition.v1.regNumber__contains:
      in: query
      name: data.een.truckNumberRecognition.v1.regNumber__contains
      description: >-
        Provide the number for partial search that allows for a searching
        partial string in the truck number recognition data. You can pass only
        one of `data.een.truckNumberRecognition.v1.regNumber`,
        `data.een.truckNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.truckNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.truckNumberRecognition.v1.regNumber__fuzzy:
      in: query
      name: data.een.truckNumberRecognition.v1.regNumber__fuzzy
      description: >-
        Provide the number for fuzzy search that allows for a single character
        difference in the truck number recognition data. You can pass only one
        of `data.een.truckNumberRecognition.v1.regNumber`,
        `data.een.truckNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.truckNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.trailerNumberRecognition.v1.regNumber:
      in: query
      name: data.een.trailerNumberRecognition.v1.regNumber
      description: >-
        Provide the number to be searched with an exact match in the trailer
        number recognition data. You can pass only one of
        `data.een.trailerNumberRecognition.v1.regNumber`,
        `data.een.trailerNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.trailerNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.trailerNumberRecognition.v1.regNumber__contains:
      in: query
      name: data.een.trailerNumberRecognition.v1.regNumber__contains
      description: >-
        Provide the number for partial search that allows for a searching
        partial string in the trailer number recognition data. You can pass only
        one of `data.een.trailerNumberRecognition.v1.regNumber`,
        `data.een.trailerNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.trailerNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.trailerNumberRecognition.v1.regNumber__fuzzy:
      in: query
      name: data.een.trailerNumberRecognition.v1.regNumber__fuzzy
      description: >-
        Provide the number for fuzzy search that allows for a single character
        difference in the trailer number recognition data. You can pass only one
        of `data.een.trailerNumberRecognition.v1.regNumber`,
        `data.een.trailerNumberRecognition.v1.regNumber__fuzzy`, or
        `data.een.trailerNumberRecognition.v1.regNumber__contains` as a query
        parameter. Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.lprPlateRead.v1.plate:
      in: query
      name: data.een.lprPlateRead.v1.plate
      description: >-
        Provide the license plate in uppercase to be searched with an exact
        match in the lpr plate read data. You can pass only one of
        `data.een.lprPlateRead.v1.plate`,
        `data.een.lprPlateRead.v1.plate__fuzzy`, or
        `data.een.lprPlateRead.v1.plate__contains` as a query parameter. Passing
        multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.lprPlateRead.v1.plate__contains:
      in: query
      name: data.een.lprPlateRead.v1.plate__contains
      description: >-
        Provide the license plate for partial search that allows for a searching
        partial string in the lpr plate read data. You can pass only one of
        `data.een.lprPlateRead.v1.plate`,
        `data.een.lprPlateRead.v1.plate__fuzzy`, or
        `data.een.lprPlateRead.v1.plate__contains` as a query parameter. Passing
        multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.lprPlateRead.v1.plate__fuzzy:
      in: query
      name: data.een.lprPlateRead.v1.plate__fuzzy
      description: >-
        Provide the license plate for fuzzy search that allows for a single
        character difference in the lpr plate read data. You can pass only one
        of `data.een.lprPlateRead.v1.plate`,
        `data.een.lprPlateRead.v1.plate__fuzzy`, or
        `data.een.lprPlateRead.v1.plate__contains` as a query parameter. Passing
        multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.recognizedText.v1.value:
      in: query
      name: data.een.recognizedText.v1.value
      description: >-
        Provide the recognized text value to be searched with an exact match in
        the recognized text detection data. You can pass only one of
        `data.een.recognizedText.v1.value`,
        `data.een.recognizedText.v1.value__fuzzy`, or
        `data.een.recognizedText.v1.value__contains` as a query parameter.
        Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.recognizedText.v1.value__contains:
      in: query
      name: data.een.recognizedText.v1.value__contains
      description: >-
        Provide the recognized text value for partial search that allows for a
        searching partial string in the recognized text detection data. You can
        pass only one of `data.een.recognizedText.v1.value`,
        `data.een.recognizedText.v1.value__fuzzy`, or
        `data.een.recognizedText.v1.value__contains` as a query parameter.
        Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.recognizedText.v1.value__fuzzy:
      in: query
      name: data.een.recognizedText.v1.value__fuzzy
      description: >-
        Provide the recognized text value for fuzzy search that allows for a
        single character difference in the recognized text detection data. You
        can pass only one of `data.een.recognizedText.v1.value`,
        `data.een.recognizedText.v1.value__fuzzy`, or
        `data.een.recognizedText.v1.value__contains` as a query parameter.
        Passing multiple will cause a `400 Bad Request` error.
      schema:
        type: string
    data.een.vspInsightsSummary.v1.insightType__in:
      in: query
      name: data.een.vspInsightsSummary.v1.insightType__in
      description: >-
        Filter events by the exact `insightType` value from the VSP insights
        summary.
      schema:
        type: string
    searchRelatedEventData:
      in: query
      name: searchRelatedEventData
      description: >-
        If set to true, the API will search for related events based on the
        license plate, dot number, truck number, trailer number and recognized
        text. This will return all events that are related to the search
        criteria.
      schema:
        type: boolean
        default: false
      examples:
        Example for true case:
          summary: 'true'
          description: >-
            If the value is set to true, the API will filter inside related
            events list the top level events will be present only if search
            criteria matches related events.
          value: true
        Example for false case:
          summary: 'false'
          description: >-
            If the value is set to false, the API won't filter inside related
            events. Filtering will only work in top level events.
          value: false
    relatedEvents.rel:
      in: query
      name: relatedEvents.rel
      description: Used to Filter relatedEvents based on the relationship type.
      schema:
        type: string
        enum:
          - parent
          - child
    type__in:
      in: query
      name: type__in
      description: >-
        Filter events based on the type of event. If this parameter is not
        specified, the API will return only `een.lprPlateReadEvent.v1` events by
        default.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - een.lprPlateReadEvent.v1
            - een.fleetCodeRecognitionEvent.v1
        default:
          - een.lprPlateReadEvent.v1
        example:
          - een.lprPlateReadEvent.v1
          - een.fleetCodeRecognitionEvent.v1
    direction__in:
      in: query
      name: direction__in
      description: Fetch events based on the direction of vehicle
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - entry
            - exit
        example:
          - entry
          - exit
    actor__in:
      in: query
      name: actor
      description: >
        Filter to get only events where the actorType and actorId value equals
        any one of the supplied value in the list. For each entry of list, the
        actor type has to be prefixed along with actor id like
        `actorType:actorId`. For example, to filter for camera with id 100d4c41,
        the actorId that has to be used is `camera:100d4c41`. To search for
        events from a specific type of actor, for example users, use a wildcard
        as actorId: `user:*`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        example:
          - 'camera:100d4c41'
          - 'location:abcd1234'
    color__in:
      in: query
      name: color__in
      description: Fetch events based on the color of vehicle
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ColorDefinitions'
    make__in:
      in: query
      name: make__in
      description: >-
        Fetch events based on make of vehicle. Examples are "ford", "toyota"
        etc.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    bodyType__in:
      in: query
      name: bodyType__in
      description: >-
        Fetch events based on body type of vehicle. Examples are "sedan", "jeep"
        etc.
      schema:
        type: array
        items:
          type: string
    userData:
      in: query
      name: data.een.userData.v1
      description: >-
        Dynamically named query parameter that allows clients to filter events
        based on specific values in user supplied fields.
          * This allows searching by user supplied attributes instead of plates, for example, apartment number, organization etc.
          * If the user for example wishes to search for `organization` having value `ABC` then the correct way to search is `data.een.userData.v1.organization=ABC`. This then needs to be specified directly in the query parameters or in json object as a key value pair.
          * The list of user Data keys can be obtained by calling `/lprVehicleLists:listFields` endpoint
      style: form
      explode: true
      schema:
        type: object
        additionalProperties:
          type: string
      example:
        data.een.userData.v1.organization: ABC
        data.een.userData.v1.parkingType: monthly
    accessType__in:
      in: query
      name: accessType__in
      description: Search based on the access type
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AccessType'
    vehicleListId__in:
      in: query
      name: vehicleListId__in
      description: >
        Filters events by a list of vehicle list IDs. Accepts a comma-separated
        list of IDs. A maximum of 15 vehicle list IDs can be provided.
      schema:
        type: string
    pageToken:
      in: query
      name: pageToken
      description: >
        Token string value that references a page for pagination. This value is
        received when retrieving the first page in the `nextPageToken` and
        `prevPageToken` fields.
      example: b2Zmc2V0PTEwJmxpbWl0PTEw
      required: false
      schema:
        type: string
    pageSize:
      in: query
      name: pageSize
      description: >
        The number of entries to return per page. The maximum range of valid
        page sizes is documented with minimum and  maximum values, but the range
        might be further limited dynamically based on the requested information,
        account, and system status. Values outside of the (dynamic) allowed
        range will not result in an error, but will be clamped to the nearest
        limit. Thus, logic to detect the last page should not be based on
        comparing the requested size with the received size, but on the
        existence of a `nextPageToken` value.
      example: 100
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 100
    name__contains:
      in: query
      name: name__contains
      description: >-
        Phrase that is used to search for resources (rules or lists) whose names
        contain it
      schema:
        type: string
    type__in1:
      in: query
      name: type__in
      description: Search based on the rule type
      schema:
        $ref: '#/components/schemas/RuleType'
    enabled:
      in: query
      name: enabled
      description: >-
        Filter against enabled rules (when set to true) or disabled rules (when
        set to false)
      schema:
        type: boolean
    eventFilter.eventTypes__contains:
      description: >-
        Filter to only include results that contain all the specified event
        types.
      in: query
      name: eventFilter.eventTypes__contains
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
    eventFilter.eventTypes__in:
      description: >-
        Filter to only include results that contain one of the specified event
        types.
      in: query
      name: eventFilter.eventTypes__in
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
    priority__gte:
      in: query
      name: priority__gte
      description: Filter by priority__gte
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 10
    priority__lte:
      in: query
      name: priority__lte
      description: Filter by priority__lte
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 10
    recordId:
      in: path
      name: recordId
      required: true
      description: Id of specific record
      schema:
        type: string
        format: uuid
    securityStatus__in:
      in: query
      name: securityStatus__in
      description: Filters by only those records under a specific type of security status
      schema:
        type: array
        items:
          $ref: '#/components/schemas/SecurityStatus'
    plate1:
      in: query
      name: plate
      description: >-
        Provide the license plate in uppercase to be searched with an exact
        match
      schema:
        type: string
    userDataRecord:
      in: query
      name: userData
      description: >-
        Dynamically named query parameter that allows clients to filter events
        based on specific values in user supplied fields.
          * This allows searching by user supplied attributes instead of plates, for example, apartment number, organization etc.
          * If the user for example wishes to search for `organization` having value `ABC` then the correct way to search is `userData.organization=ABC`. This then needs to be specified directly in the query parameters or in json object as a key value pair.
          * The list of user Data keys can be obtained by calling `/lprVehicleLists:listFields` endpoint
      style: form
      explode: true
      schema:
        type: object
        additionalProperties:
          type: string
      example:
        userData.organization: ABC
        userData.parkingType: monthly
    accessType__in1:
      in: query
      name: accessType__in
      description: Search based on the access type
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AccessType1'
  responses:
    validationError:
      description: >-
        The supplied object is invalid. Error detail will contain the validation
        error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            unexpectedArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Unexpected argument: name'
                details:
                  - type: errorInfo
                    reason: unexpectedArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            missingRequiredArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Missing required arguments: name, id'
                details:
                  - type: errorInfo
                    reason: missingRequiredArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidJSON:
              value:
                code: 400
                status: invalidArgument
                message: Invalid JSON
                details:
                  - type: errorInfo
                    reason: invalidJSON
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Invalid Argument: Argument name is too long'
                details:
                  - type: errorInfo
                    reason: wrongArgumentValue
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: badRequest
                    argumentViolations:
                      - argumentName: name
                        description: Name is too long
    unauthorized:
      description: You are not authenticated. Please authenticate and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 401
            status: unauthenticated
            message: The client caller does not have a valid authentication credential
            details:
              - type: errorInfo
                reason: unauthenticated
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    forbidden:
      description: You have no permission to access the specified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            invalidPermission:
              value:
                code: 403
                status: permissionDenied
                message: >-
                  The client caller does not have permission for the specified
                  operation
                details:
                  - type: errorInfo
                    reason: invalidPermission
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            wrongEdition:
              value:
                code: 403
                status: permissionDenied
                message: This feature is not enabled for the account
                details:
                  - type: errorInfo
                    reason: wrongEdition
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
            wrongAccountType:
              value:
                code: 403
                status: permissionDenied
                message: This feature is only available for end users
                details:
                  - type: errorInfo
                    reason: wrongAccountType
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
    resourceNotFound:
      description: Referenced resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            endpointNotFound:
              value:
                code: 404
                status: notFound
                message: The API endpoint was not found
                details:
                  - type: errorInfo
                    reason: endpointNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            resourceNotFound:
              value:
                code: 404
                status: notFound
                message: The resource was not found
                details:
                  - type: errorInfo
                    reason: resourceNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: resourceInfo
                    resource: <resource>
                    ids:
                      - <ids>
    methodNotSupported:
      description: HTTP method not supported for this API path.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 405
            status: methodNotSupported
            message: HTTP method DELETE not supported for API path /api/v3.0/locations
            details:
              - type: errorInfo
                reason: methodNotSupported
                domain: apiv3
                metadata:
                  path: /api/v3.0/locations
    notAcceptableError:
      description: Requested content type for response not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 406
            status: acceptNotSupported
            message: Requested content type for response not supported
            details:
              - type: errorInfo
                reason: acceptNotSupported
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    conflict:
      description: >-
        There was a conflict while trying to perform your request. See error
        details for more information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            alreadyExists:
              value:
                code: 409
                status: conflict
                message: The resource already exists
                details:
                  - type: errorInfo
                    reason: alreadyExists
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            foreignKeyConflict:
              value:
                code: 409
                status: conflict
                message: >-
                  The resource cannot be deleted as other resources link to it.
                  Please remove the links or delete the other resources first
                  before deleting this resource.
                details:
                  - type: errorInfo
                    reason: foreignKeyConflict
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            childDevicesExist:
              value:
                code: 409
                status: conflict
                message: >-
                  This device can not be deleted before all attached cameras
                  have been deleted. Please delete all cameras and then delete
                  this device.
                details:
                  - type: errorInfo
                    reason: childDevicesExist
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
    unsupportedMediaType:
      description: Content type of request body not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 415
            status: mediaTypeNotSupported
            message: >-
              Unsupported content type: `text/plain`, should be one of:
              `application/json`
            details:
              - type: errorInfo
                reason: contentNotSupported
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    tooManyRequests:
      description: >-
        It indicates the user has sent too many requests in a given amount of
        time ("rate limiting").
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 429
            status: tooManyRequests
            message: Too many requests in a given amount of time
            details:
              - type: errorInfo
                reason: tooManyRequests
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    internalServerError:
      description: Something went wrong in the server. Please try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 500
            status: internal
            message: An internal error has occurred. Please try again later.
            details:
              - type: errorInfo
                reason: unexpectedError
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    unavailable:
      description: The service or resource is currently not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            deviceUnavailable:
              value:
                code: 503
                status: unavailable
                message: >-
                  The resource is currently not available, please try later
                  again
                details:
                  - type: errorInfo
                    reason: deviceUnavailable
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            serviceUnavailable:
              value:
                code: 503
                status: unavailable
                message: 'The service is currently not available, please try later again'
                details:
                  - type: errorInfo
                    reason: serviceUnavailable
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
    deadlineExceeded:
      description: The request had a deadline that expired before the operation completed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 504
            status: deadlineExceeded
            message: Deadline expired before the operation could complete
            details:
              - type: errorInfo
                reason: deadlineExpired
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
x-readme:
  explorer-enabled: true
