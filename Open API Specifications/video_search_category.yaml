---
openapi: 3.0.3
info:
  title: VIDEO SEARCH
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0'
    description: Eagle Eye Networks API Server
    variables:
      BaseUrl:
        default: api.cxxx.eagleeyenetworks.com
        description: >-
          HTTPS Base url to use for all API calls, retrieved from
          https://api.eagleeyenetworks.com/api/v3.0/clientSettings
security:
  - bearerAuth: []
tags:
  - name: Video Analytics Events
paths:
  '/videoAnalyticEvents:parse':
    post:
      operationId: parseVideoAnalytics
      tags:
        - Video Analytics Events
      description: >-
        Map a natural language query to a set of object filters to use in the
        deep search endpoints. The

        deep search can identify a variety of objects, including people,
        vehicles, and some common handheld

        objects such as backpacks and suitcases. The deep search can also
        identify the attributes of these

        objects, such as the color of a person's clothing or the make of a
        vehicle.
      requestBody:
        $ref: '#/components/requestBodies/RequestParse'
      parameters:
        - $ref: '#/components/parameters/acceptLanguageHeader'
        - $ref: '#/components/parameters/languageQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseParse'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/videoAnalyticEvents:deepSearch':
    post:
      operationId: listVideoAnalyticsEvents
      tags:
        - Video Analytics Events
      description: >-
        Fetches video analytic events matching the filters defined for the deep
        search. The events are returned as the base event envelope with the data
        objects requested using the `include` parameter.
      requestBody:
        $ref: '#/components/requestBodies/RequestCommon'
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/layoutId__in'
        - $ref: '#/components/parameters/tags__any'
        - $ref: '#/components/parameters/roiName__in'
        - $ref: '#/components/parameters/creatorId__in'
        - $ref: '#/components/parameters/eventType__in'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - in: query
          name: include
          description: >-
            List of properties that should be included in the response, if
            available.

            The `data` field can be used as prefix to request data if it is
            available.

            Eg. if the client wants to have object detection details and
            supports the

            `een.objectDetection.v1` schemas, it can add
            `data.een.objectDetection.v1` to the list of requested includes.

            This parameter does not operate as a filter, events without the
            requested properties are still returned.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - data.een.objectDetection.v1
                - data.een.objectClassification.v1
                - data.een.vehicleAttributes.v1
                - data.een.personAttributes.v1
                - data.een.fullFrameImageUrl.v1
                - data.een.croppedFrameImageUrl.v1
                - data.een.objectRegionMapping.v1
                - data.een.customLabels.v1
                - data.een.eevaAttributes.v1
        - in: query
          name: sort
          description: >-
            Provide options to sort in ascending or descending order based on
            timestamp
          schema:
            type: string
            items:
              type: string
            default: '-timestamp'
            enum:
              - +timestamp
              - '-timestamp'
            example: +timestamp
      responses:
        '200':
          $ref: '#/components/responses/ResponseSearchCommon'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    parameters: []
  '/videoAnalyticEvents:deepSearchGroupByResource':
    post:
      operationId: listVideoAnalyticsEventsDeepSearchGroupByResource
      tags:
        - Video Analytics Events
      description: >-
        Fetches matching video analytic event frequencies grouped as requested.
        The response is a list of groups, each with a count of matching events,
        and optionally a sample event.
      requestBody:
        $ref: '#/components/requestBodies/RequestCommon'
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/layoutId__in'
        - $ref: '#/components/parameters/tags__any'
        - $ref: '#/components/parameters/roiName__in'
        - $ref: '#/components/parameters/creatorId__in'
        - $ref: '#/components/parameters/eventType__in'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/includeGroupApi'
        - in: query
          name: sort
          description: >-
            Provide options to sort in ascending or descending order based on
            timestamp/events count/alphabetical order
          schema:
            type: string
            items:
              type: string
            default: '-timestamp'
            enum:
              - +timestamp
              - '-timestamp'
              - +eventCount
              - '-eventCount'
              - +alphabetical
              - '-alphabetical'
            example: +timestamp
        - in: query
          name: groupBy
          description: >-
            Contains the information on the event metadata on which the grouping
            has to be executed. Currently supports `camera` based grouping only
          schema:
            type: string
            default: camera
            example: camera
            enum:
              - camera
      responses:
        '200':
          $ref: '#/components/responses/ResponseSearchGroup'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    parameters: []
  '/videoAnalyticEvents:deepSearchGroupByTime':
    post:
      operationId: listVideoAnalyticsEventsDeepSearchGroupByTime
      tags:
        - Video Analytics Events
      description: >-
        Fetches matching video analytic event frequencies grouped in time
        periods.

        The set of periods are defined by defining either their length using
        `timeInterval`, or their count with `groupCount`.

        The response is a list of time periods, each with a count of matching
        events, and optionally a sample event.
      requestBody:
        $ref: '#/components/requestBodies/RequestCommon'
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/layoutId__in'
        - $ref: '#/components/parameters/tags__any'
        - $ref: '#/components/parameters/roiName__in'
        - $ref: '#/components/parameters/creatorId__in'
        - $ref: '#/components/parameters/eventType__in'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/includeGroupApi'
        - in: query
          name: sort
          description: >-
            Provide options to sort in ascending or descending order based on
            timestamp/events count/alphabetical order
          schema:
            type: string
            items:
              type: string
            default: '-timestamp'
            enum:
              - +timestamp
              - '-timestamp'
            example: +timestamp
        - in: query
          name: timeInterval
          description: >-
            The time interval of each of time-based groups.

            The values can be numbers followed by
            s(seconds)/m(minutes)/h(hours)/d(days).

            Example: 10s, 20m etc


            **Note:** It is mandatory to have either of `timeInterval` or
            `groupCount` query parameter.

            Presence of none or presence of both would return a 400 status code.
          schema:
            type: string
            pattern: '^(?:([0-9]*)[smhd])?$'
            example: 10s
        - in: query
          name: groupCount
          description: >-
            Total number of time-based groups.

            The total time between `timestamp__lte` and `timestamp__gte` gets
            evenly distributed across all the groups


            **Note:** It is mandatory to have either of `timeInterval` or
            `groupCount` query parameter.

            Presence of none or presence of both would return a 400 status code.
          schema:
            type: integer
            example: 24
            minimum: 1
      responses:
        '200':
          $ref: '#/components/responses/ResponseSearchGroupByTime'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    parameters: []
  '/videoAnalyticEvents:listFieldValues':
    post:
      operationId: listVideoAnalyticsFieldValues
      tags:
        - Video Analytics Events
      description: >-
        Fetches available deep search query parameters based on events matching
        the input filters and other query parameter inputs.

        Query parameters can be requested using the `parameter` param.

        It has to be noted that the values in the filter will be a subset for
        those fields which are mentioned in the `parameter` param.

        Eg. If the filter specifies a set of actors (such as cameras), and
        `parameter=actor` is given, the search for matching is done with the
        given actor filters and therefore the response will always be a subset
        of the given list of actors.
      requestBody:
        $ref: '#/components/requestBodies/RequestCommon'
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/layoutId__in'
        - $ref: '#/components/parameters/tags__any'
        - $ref: '#/components/parameters/roiName__in'
        - $ref: '#/components/parameters/creatorId__in'
        - $ref: '#/components/parameters/eventType__in'
        - in: query
          name: parameter
          description: >-
            Provide the parameter to be returned in the response body with the
            list of available values for the selected parameter.
          required: true
          schema:
            type: string
            enum:
              - actor
              - region
              - eventType
              - creatorId
      responses:
        '200':
          description: List of field values matching search criteria
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          oneOf:
                            - $ref: '#/components/schemas/ActorInfo'
                            - $ref: '#/components/schemas/RegionInfo'
                            - $ref: '#/components/schemas/CreatorIdInfo'
                            - $ref: '#/components/schemas/EventTypeInfo'
                          discriminator:
                            propertyName: type
                            mapping:
                              actor: '#/components/schemas/ActorInfo'
                              region: '#/components/schemas/RegionInfo'
                              creatorId: '#/components/schemas/CreatorIdInfo'
                              eventType: '#/components/schemas/EventTypeInfo'
              examples:
                ActorInfo Example:
                  value:
                    nextPageToken: string
                    prevPageToken: string
                    totalSize: 1
                    results:
                      - type: actor
                        id: 'camera:100d4c41'
                RegionInfo Example:
                  value:
                    nextPageToken: string
                    prevPageToken: string
                    totalSize: 1
                    results:
                      - type: region
                        id: Region1 Id
                        name: Region1 Name
                CreatorId Example:
                  value:
                    nextPageToken: string
                    prevPageToken: string
                    totalSize: 1
                    results:
                      - type: creatorId
                        id: een.videoAnalytics.v1
                EventType Example:
                  value:
                    nextPageToken: string
                    prevPageToken: string
                    totalSize: 1
                    results:
                      - type: eventType
                        id: een.gunDetectionEvent.v1
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/videoAnalyticEvents:listObjectValues':
    get:
      operationId: listVideoAnalyticsObjectValues
      tags:
        - Video Analytics Events
      description: >-
        Fetches available deep search filter attribute values for a given filter
        based on events matching the input filters.

        The `include` parameter is used to indicate what filter the attribute
        values should be returned for.
      parameters:
        - $ref: '#/components/parameters/timestamp__gte'
        - $ref: '#/components/parameters/timestamp__lte'
        - $ref: '#/components/parameters/actor__in'
        - $ref: '#/components/parameters/layoutId__in'
        - $ref: '#/components/parameters/tags__any'
        - $ref: '#/components/parameters/roiName__in'
        - $ref: '#/components/parameters/creatorId__in'
        - $ref: '#/components/parameters/eventType__in'
        - in: query
          name: include
          description: >-
            Provide filter names for which all the possible values of each of
            the attributes are to be returned in response body.

            These values are from the events present in the search result based
            on the criteria in the query parameters.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - filter.vehicleAttributes.v1
                - filter.personAttributes.v1
      responses:
        '200':
          description: >-
            List of values for each of the attributes of the selected object
            class that matches the search criteria
          content:
            application/json:
              schema:
                properties:
                  filter.personAttributes.v1:
                    $ref: '#/components/schemas/PersonAttributeList'
                  filter.vehicleAttributes.v1:
                    $ref: '#/components/schemas/VehicleAttributeList'
                type: object
              examples:
                Person Attributes List:
                  value:
                    filter.personAttributes.v1:
                      gender:
                        - female
                      upperBodyClothingColor:
                        - white
                      lowerBodyClothingColor:
                        - white
                      helmet:
                        - true
                      vest:
                        - false
                vehicle Attribute List:
                  value:
                    filter.vehicleAttributes.v1:
                      bodyType:
                        - car
                      make:
                        - volvo
                      color:
                        - yellow
                personVehicleAttributesList:
                  value:
                    filter.personAttributes.v1:
                      gender:
                        - female
                      upperBodyClothingColor:
                        - white
                      lowerBodyClothingColor:
                        - white
                      helmet:
                        - true
                      vest:
                        - false
                    filter.vehicleAttributes.v1:
                      bodyType:
                        - car
                      make:
                        - volvo
                      color:
                        - yellow
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    parameters: []
  '/videoAnalyticEvents/{id}':
    get:
      operationId: getVideoAnalyticsEvent
      tags:
        - Video Analytics Events
      description: >-
        Fetches video analytics event based on `id` provided. The event is
        returned as the base event envelope with the data objects requested
        using the `include` parameter.
      parameters:
        - in: query
          name: include
          description: >-
            List of properties that should be included in the response, if
            available.

            The `data` field can be used as prefix to request data if it is
            available.

            Eg. if the client wants to have object detection details and
            supports the

            `een.objectDetection.v1` schemas, it can add
            `data.een.objectDetection.v1` to the list of requested includes.

            This parameter does not operate as a filter, events without the
            requested properties are still returned.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - data.een.objectDetection.v1
                - data.een.objectClassification.v1
                - data.een.vehicleAttributes.v1
                - data.een.personAttributes.v1
                - data.een.fullFrameImageUrl.v1
                - data.een.croppedFrameImageUrl.v1
                - data.een.objectRegionMapping.v1
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEvent.v1'
              examples:
                sampleEvent:
                  $ref: '#/components/examples/responseIdSampleEvent'
        '400':
          $ref: '#/components/responses/validationError'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/resourceNotFound'
        '500':
          $ref: '#/components/responses/internalServerError'
    parameters:
      - $ref: '#/components/parameters/id'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LanguageTag:
      type: string
      description: >
        IETF language tag used as main identifier of the language in the Eagle
        Eye Networks API. The format can be just the two character "primary
        language subtag" or a combination of the two character "primary language
        subtag" and 2 character "region subtag". Use `/api/v3.0/languages` API
        to retrieve supported language codes.
      example: pt-BR
      enum:
        - de-DE
        - en-US
        - es-ES
        - fr-FR
        - ja-JP
        - nl-NL
        - pl-PL
        - pt-BR
        - pt-PT
        - sv-SE
        - tr-TR
      pattern: '^[a-z]{2}(-[A-Z]{2})?$'
    TimestampData:
      type: string
      format: date-time
      example: '2021-04-22T00:00:00.000+00:00'
      description: Data format for the timestamp
    StartTimestamp:
      type: object
      properties:
        startTimestamp:
          description: The start timestamp of the group.
          allOf:
            - $ref: '#/components/schemas/TimestampData'
    EndTimestamp:
      type: object
      properties:
        endTimestamp:
          allOf:
            - $ref: '#/components/schemas/TimestampData'
          description: The end timestamp of the group.
    CommonRequestBodyMeta:
      description: >-
        Structure containing the filter details of the object/objects that is to
        be searched. It can contain the object classification, object attributes
        or object similarity information.
      oneOf:
        - properties:
            objects__all:
              type: array
              description: >-
                List of all objects that need to be found for an event to match,
                each defined by a set of

                filters. The VMS can identify people, vehicles, and a variety of
                common objects. You can

                generate a valid filter by using the [`POST
                /videoAnalyticEvents:parse`](ref:parsevideoanalytics) endpoint.
              items:
                type: array
                description: Set of filters the object has to match with.
                items:
                  oneOf:
                    - $ref: '#/components/schemas/FilterObjectClassificationV1'
                    - $ref: '#/components/schemas/FilterPersonAttributesV1'
                    - $ref: '#/components/schemas/FilterVehicleAttributesV1'
                    - $ref: '#/components/schemas/FilterObjectSimilarityV1'
                    - $ref: '#/components/schemas/FilterCustomLabelsV1'
                  discriminator:
                    propertyName: type
                    mapping:
                      filter.objectClassification.v1: >-
                        ../event/videoSearchFilterSchemas/filter.objectClassification.v1.yaml
                      filter.personAttributes.v1: >-
                        ../event/videoSearchFilterSchemas/filter.personAttributes.v1.yaml
                      filter.vehicleAttributes.v1: >-
                        ../event/videoSearchFilterSchemas/filter.vehicleAttributes.v1.yaml
                      filter.objectSimilarity.v1: >-
                        ../event/videoSearchFilterSchemas/filter.objectSimilarity.v1.yaml
                      filter.customLabels.v1: >-
                        ../event/videoSearchFilterSchemas/filter.customLabels.v1.yaml
          required:
            - objects__all
      type: object
    RequestBodyQueryParams:
      properties:
        queryParams:
          type: array
          description: >-
            Some filters are applied as query parameters.  This array gives a
            list of all query parameters that should be added to the request to
            fulfill the user request.
          items:
            type: object
            properties:
              type:
                type: string
                description: The datatype of the value
              name:
                type: string
                description: Name of the query param
              value:
                oneOf:
                  - type: string
                  - type: array
                  - type: boolean
                  - type: integer
                  - type: number
                  - type: object
                description: Value of the query param
            required:
              - type
              - name
              - value
    SearchEvent.v1:
      allOf:
        - $ref: '#/components/schemas/EventEnvelope'
        - type: object
          properties:
            matchObjectIds:
              $ref: '#/components/schemas/MatchObjectId'
            data:
              type: array
              description: >-
                List of data schemas supported in the results.

                The decision on which schemas are to be enabled is based on the
                list mentioned in the `include` query parameter
              items:
                oneOf:
                  - $ref: '#/components/schemas/EenObjectDetectionV1'
                  - $ref: '#/components/schemas/EenObjectClassificationV1'
                  - $ref: '#/components/schemas/EenPersonAttributesV1'
                  - $ref: '#/components/schemas/EenVehicleAttributesV1'
                  - $ref: '#/components/schemas/EenEEVAAttributesV1'
                  - $ref: '#/components/schemas/EenCustomLabelsV1'
                  - $ref: '#/components/schemas/EenFullFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenCroppedFrameImageUrlV1'
                  - $ref: '#/components/schemas/EenObjectRegionMappingV1'
                discriminator:
                  propertyName: type
                  mapping:
                    een.objectDetection.v1: ../event/dataSchemas/een.objectDetection.v1.yaml
                    een.objectClassification.v1: ../event/dataSchemas/een.objectClassification.v1.yaml
                    een.personAttributes.v1: ../event/dataSchemas/een.personAttributes.v1.yaml
                    een.vehicleAttributes.v1: ../event/dataSchemas/een.vehicleAttributes.v1.yaml
                    een.eevaAttributes.v1: ../event/dataSchemas/een.eevaAttributes.v1.yaml
                    een.customLabels.v1: ../event/dataSchemas/een.customLabels.v1.yaml
                    een.fullFrameImageUrl.v1: ../event/dataSchemas/een.fullFrameImageUrl.v1.yaml
                    een.croppedFrameImageUrl.v1: ../event/dataSchemas/een.croppedFrameImageUrl.v1.yaml
                    een.objectRegionMapping.v1: ../event/dataSchemas/een.objectRegionMapping.v1.yaml
    SearchResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/SearchEvent.v1'
    SearchResultGroup:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupInfo'
                  count:
                    $ref: '#/components/schemas/Count'
                  lastSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                  firstSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                  randomSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                required:
                  - group
                  - count
    SearchResultGroupByTime:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  time:
                    $ref: '#/components/schemas/TimeInfo'
                  count:
                    $ref: '#/components/schemas/Count'
                  lastSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                  firstSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                  randomSample:
                    $ref: '#/components/schemas/SearchEvent.v1'
                required:
                  - time
                  - count
    Count:
      type: integer
      description: Total count of events in the group that match the search criteria.
      example: 10
    TimeInfo:
      type: object
      description: Start and end time details of the selected group
      allOf:
        - $ref: '#/components/schemas/StartTimestamp'
        - $ref: '#/components/schemas/EndTimestamp'
      required:
        - startTimestamp
        - endTimestamp
    MatchObjectId:
      type: array
      description: List of all the object Ids that match the search query
      items:
        $ref: '#/components/schemas/ObjectIdV1'
    GroupInfo:
      type: object
      description: Details of the selected group
      properties:
        id:
          $ref: '#/components/schemas/GroupId'
        type:
          $ref: '#/components/schemas/GroupType'
        name:
          $ref: '#/components/schemas/GroupName'
      required:
        - type
        - id
    GroupType:
      type: string
      description: Metadata type on which the grouping was carried out
      example: camera
    GroupName:
      type: string
      description: >-
        Metadata name to which all the events in this group belongs to after
        grouping
      example: Houston
    GroupId:
      type: string
      description: >-
        Metadata id to which all the events in this group belongs to after
        grouping
      example: ab13433c
    ActorInfo:
      type: object
      description: Details of the selected group
      properties:
        type:
          type: string
          description: Type of the data
          enum:
            - actor
        id:
          $ref: '#/components/schemas/ActorGenericId'
      required:
        - id
        - type
      x-examples:
        Example 1:
          id: 'camera:100d4c41'
    RegionInfo:
      type: object
      description: Details of the region where object is found
      properties:
        type:
          type: string
          description: Type of the data
          enum:
            - region
        id:
          type: string
          example: Region1 Id
        name:
          type: string
          example: Region1 Name
      required:
        - name
        - type
    EventTypeInfo:
      type: object
      description: Details of the type of the event
      properties:
        type:
          type: string
          description: Type of the data
          enum:
            - eventType
        id:
          type: string
          example: een.gunDetectionEvent.v1
      required:
        - id
        - type
    CreatorIdInfo:
      type: object
      description: Details of the creator of the event
      properties:
        type:
          type: string
          description: Type of the data
          enum:
            - creatorId
        id:
          type: string
          example: een.videoAnalytics.v1
      required:
        - id
        - type
    ActorGenericId:
      type: string
      example: 'camera:100d4c41'
      description: >
        This parameter filters events based on associated camera IDs for the
        specified actors.  The actor type is prefixed along with the actor ID in
        the format `actorType:actorId`. Supported actor types: - `camera` (e.g.
        `camera:100d4c41`) - `location` (e.g.
        `location:d0e4aad4-06c5-4c43-a4ac-3106738ed206`) - `bridge` (e.g.
        `bridge:10035b4a`)
    CommaSeparatedList:
      type: array
      items:
        type: string
        example: Id_1
        description: >
          A comma-separated list of values. For example: - `layout__in`: Filters
          results based on layout IDs (e.g., `layoutId_1,layoutId_2`) -
          `tags__any`: Filters results based on tag IDs (e.g.,
          `tagId_1,tagId_2`).

          Each value in the list corresponds to associated camera IDs, which are
          added to the filter.
    ROIGenericName:
      type: string
      example: Parking 1
      description: The name of a motion-event related region in any camera view
    EventType:
      type: string
      example: een.tamperDetectionEvent.v1
      description: >-
        Specific event type, e.g. een.motionDetectionEvent.v1,
        een.lprPlateReadEvent.v1
    EventCreatorId:
      type: string
      example: een.videoAnalytics.v1
      description: >-
        Id of the application or system that created this event. This id should
        not differ between instances or even versions of the same application.
    ApiV3Error:
      type: object
      properties:
        code:
          description: HTTP code defined in EEN Standard Code Values
          type: integer
        status:
          description: A string enum describing the code
          type: string
          enum:
            - cancelled
            - unknown
            - invalidArgument
            - deadlineExceeded
            - notFound
            - conflict
            - permissionDenied
            - resourceExhausted
            - failedPrecondition
            - aborted
            - outOfRange
            - unimplemented
            - internal
            - unavailable
            - dataLoss
            - unauthenticated
            - mediaTypeNotSupported
            - acceptNotSupported
            - methodNotSupported
            - tooManyRequests
        message:
          description: Developer friendly human readable error message in English
          type: string
        details:
          description: An array of extensible objects that define error information
          type: array
          items:
            $ref: '#/components/schemas/ExceptionDetail'
      required:
        - code
        - status
        - message
        - details
    ExceptionDetail:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ErrorInfoExceptionDetail'
        - $ref: '#/components/schemas/BadRequestExceptionDetail'
        - $ref: '#/components/schemas/ResourceInfoExceptionDetail'
      discriminator:
        propertyName: type
        mapping:
          errorInfo: '#/components/schemas/ErrorInfoExceptionDetail'
          badRequest: '#/components/schemas/BadRequestExceptionDetail'
          resourceInfo: '#/components/schemas/ResourceInfoExceptionDetail'
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
            - badRequest
            - resourceInfo
      required:
        - type
    ErrorInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - errorInfo
        reason:
          description: >
            The reason for the error. This is a constant value that identifies
            the proximate cause of the

            error. Error reasons are unique within a particular domain of
            errors.
          type: string
          enum:
            - unauthenticated
            - unexpectedArgument
            - missingRequiredArgument
            - wrongArgumentValue
            - invalidPermission
            - wrongEdition
            - wrongAccountType
            - resourceNotFound
            - endpointNotFound
            - methodNotSupported
            - unexpectedError
            - acceptNotSupported
            - alreadyExists
            - foreignKeyConflict
            - childDevicesExist
            - contentNotSupported
            - deadlineExpired
            - tooManyRequests
            - deviceUnavailable
            - serviceUnavailable
            - invalidJSON
            - resourceLocked
            - notSupportedOnBridge
            - outOfRetention
            - deviceIdentificationFailed
            - credentialValidationFailed
            - credentialSetupFailed
            - localUrlValidationFailed
            - hwRegistrationFailed
            - failedAddingCameraAfterValidation
            - neverConnected
            - reconnectFailed
            - unsupportedModel
            - purged
            - userBlocked
            - userTemporarilyBlocked
            - quotaExceeded
        domain:
          description: |
            Logical grouping to which the "reason" belongs
          type: string
        metadata:
          $ref: '#/components/schemas/ExceptionMetadata'
    BadRequestExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - badRequest
        argumentViolations:
          type: array
          items:
            $ref: '#/components/schemas/ArgumentViolation'
    ArgumentViolation:
      properties:
        argumentName:
          type: string
          description: Name of the argument
        description:
          type: string
          description: Description of the violation
    ResourceInfoExceptionDetail:
      properties:
        type:
          description: A string enum describing the type of detail object.
          type: string
          enum:
            - resourceInfo
        resource:
          description: 'Referenced resource type, eg "cameras", "bridges", or "locations".'
          type: string
        ids:
          type: array
          description: Identities of resources
          items:
            type: string
    ExceptionMetadata:
      properties:
        path:
          description: Path of the request
          type: string
        method:
          description: Method of the request
          type: string
    PaginatedResponse:
      type: object
      description: >
        Used to wrap results for a paginated response, containing information on
        how to retrieve further pages and, if  available, the total number of
        results.
      properties:
        nextPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the next page. The value of this token is passed
            into the field pageToken.  This value can be null if there is no
            next page.
        prevPageToken:
          type: string
          readOnly: true
          nullable: true
          description: >
            Token to retrieve the previous page. The value of this token is
            passed into the field pageToken.  This value can be null of there is
            no previous page.
        totalSize:
          type: integer
          minimum: 0
          readOnly: true
          nullable: true
          description: >
            The number of resource entries being returned from the result set.  This can be omitted if the API endpoint does not have total size
            information.
        results:
          type: array
          readOnly: true
          description: The result set from a collection API call.
          items:
            type: object
      required:
        - nextPageToken
        - prevPageToken
        - results
    PersonGenderDefinitions:
      type: string
      description: Enumerations of gender for person.
      enum:
        - male
        - female
      example: female
    PersonLbcColorDefinitions:
      type: string
      description: Enumerations of lowerbody clothing color for person.
      enum:
        - black
        - blue
        - white
        - gray
        - red
        - brown
        - green
        - yellow
        - pink
        - orange
      example: white
    PersonUbcColorDefinitions:
      type: string
      description: Enumerations of upperbody clothing color for person.
      enum:
        - black
        - blue
        - white
        - gray
        - red
        - brown
        - green
        - yellow
        - pink
        - orange
      example: white
    VehicleBodyTypeDefinitions:
      type: string
      description: >
        Enumerations of standard classes for vehicles. Warning: These body types
        are subject to future modifications
      enum:
        - motorbike
        - car
        - bus
        - truck
        - sedan
        - hatchback
        - coupe
        - convertible
        - minivan
        - wagon
        - trike
        - roadster
        - crossover
        - scooter
        - sports_car
        - van
        - bicycle
        - tukTuk
        - suv
        - pickupTruck
        - others
      example: car
    VehicleMakeDefinitions:
      type: string
      description: Enumerations of standard makes/brands for vehicles.
      enum:
        - abarth
        - acura
        - alfa_romeo
        - aston_martin
        - audi
        - bentley
        - bmw
        - bugatti
        - buick
        - byd
        - cadillac
        - chevrolet
        - chrysler
        - citroen
        - dacia
        - daihatsu
        - dodge
        - dodge_ram
        - ferrari
        - fiat
        - fisker
        - ford
        - ford_mustang
        - garia
        - genesis
        - gmc
        - harley_davidson
        - honda
        - hummer
        - hyundai
        - infiniti
        - isuzu
        - jaguar
        - jeep
        - kia
        - lamborghini
        - land_rover
        - lexus
        - lincoln
        - lotus
        - lucid
        - mahindra
        - maruti_suzuki
        - maserati
        - mazda
        - mclaren
        - mercedes_benz
        - mini_cooper
        - mitsubishi
        - mg
        - nissan
        - oldsmobile
        - opel
        - perodua
        - peugeot
        - plymouth
        - polaris
        - polestar
        - pontiac
        - porsche
        - proton
        - ram
        - renault
        - rivian
        - rolls_royce
        - rover
        - saab
        - saturn
        - scion
        - skoda
        - smart
        - subaru
        - suzuki
        - tata
        - tesla
        - toyota
        - vinfast
        - volkswagen
        - volvo
        - wagoneer
        - others
      example: volvo
    VehicleColorDefinitions:
      type: string
      description: Enumerations of standard colors for vehicles.
      enum:
        - beige
        - black
        - blue
        - brown
        - burgundy
        - gold-beige
        - green
        - gray
        - silver
        - silver-gray
        - maroon
        - orange
        - pink
        - purple
        - red
        - teal
        - white
        - yellow
      example: yellow
    PersonGenderList:
      type: object
      properties:
        gender:
          type: array
          items:
            $ref: '#/components/schemas/PersonGenderDefinitions'
      description: List of all available options for gender attribute of person
    PersonLbcColorList:
      type: object
      properties:
        lowerBodyClothingColor:
          type: array
          items:
            $ref: '#/components/schemas/PersonLbcColorDefinitions'
      description: >-
        List of all available options for lowerbody clothing color attribute of
        person
    PersonUbcColorList:
      type: object
      properties:
        upperBodyClothingColor:
          type: array
          items:
            $ref: '#/components/schemas/PersonUbcColorDefinitions'
      description: >-
        List of all available options for upperbody clothing color attribute of
        person
    VehicleBodyTypeList:
      type: object
      properties:
        bodyType:
          type: array
          items:
            $ref: '#/components/schemas/VehicleBodyTypeDefinitions'
      description: List of all available options for standard types of vehicles
    VehicleMakeList:
      type: object
      properties:
        make:
          type: array
          items:
            $ref: '#/components/schemas/VehicleMakeDefinitions'
      description: List of all available options for standard make/brand of vehicles
    VehicleColorList:
      type: object
      properties:
        color:
          type: array
          items:
            $ref: '#/components/schemas/VehicleColorDefinitions'
      description: List of all available options for standard color of vehicles
    ObjectClass:
      type: string
      description: The `class` of the object
      enum:
        - person
        - vehicle
        - suitcase
        - backpack
        - handbag
        - weapon
        - face
    PersonAttributeList:
      title: PersonAttributeList
      description: List of all the attributes related to object of `person` class
      allOf:
        - $ref: '#/components/schemas/PersonGenderList'
        - $ref: '#/components/schemas/PersonUbcColorList'
        - $ref: '#/components/schemas/PersonLbcColorList'
    VehicleAttributeList:
      title: VehicleAttributeList
      description: List of all the attributes related to object of `vehicle` class
      allOf:
        - $ref: '#/components/schemas/VehicleBodyTypeList'
        - $ref: '#/components/schemas/VehicleMakeList'
        - $ref: '#/components/schemas/VehicleColorList'
    FilterObjectClassificationV1:
      type: object
      required:
        - type
        - class
      properties:
        type:
          type: string
          description: Type of the filter selected
          enum:
            - filter.objectClassification.v1
        class:
          $ref: '#/components/schemas/ObjectClass'
    FilterPersonAttributesV1:
      type: object
      description: Attributes related to a person detected in an event image
      required:
        - type
      properties:
        type:
          type: string
          description: Type of the filter selected
          enum:
            - filter.personAttributes.v1
        upperBodyClothingColor:
          allOf:
            - description: Color of upper body clothing of the person
            - $ref: '#/components/schemas/PersonUbcColorDefinitions'
        lowerBodyClothingColor:
          allOf:
            - description: Color of lower body clothing of the person
            - $ref: '#/components/schemas/PersonLbcColorDefinitions'
        gender:
          allOf:
            - description: Gender of the person
            - $ref: '#/components/schemas/PersonGenderDefinitions'
        stationary:
          type: boolean
          description: Information regarding whether the person is moving or not
        helmet:
          type: boolean
          description: Information regarding whether the person is wearing a helmet or not
        vest:
          type: boolean
          description: Information regarding whether the person is wearing a vest or not
    FilterVehicleAttributesV1:
      type: object
      description: Attributes related to the vehicle detected in an event image
      required:
        - type
      properties:
        type:
          type: string
          description: Type of the filter selected
          enum:
            - filter.vehicleAttributes.v1
        color:
          allOf:
            - description: Enumerations of standard colors for vehicles.
            - $ref: '#/components/schemas/VehicleColorDefinitions'
        make:
          allOf:
            - description: Make of the vehicle
            - $ref: '#/components/schemas/VehicleMakeDefinitions'
        bodyType:
          allOf:
            - description: Type of the vehicle
            - $ref: '#/components/schemas/VehicleBodyTypeDefinitions'
        parked:
          type: boolean
          description: Information regarding whether the vehicle is parked or not
    FilterObjectSimilarityV1:
      type: object
      required:
        - type
      description: >-
        This filter can be used for the following:
          - To support searching for events with unique objects and eliminate the presence of duplicate results in the response
          - To search for all instances of a selected unique object.
        Seaching for multiple objects in a single query will not be supported
        when the `objectSimilarity` filter is present in the request.
      properties:
        type:
          type: string
          description: Type of the filter selected
          enum:
            - filter.objectSimilarity.v1
        objectId:
          allOf:
            - $ref: '#/components/schemas/ObjectIdV1'
            - description: >-
                ID given to the object by the detector. It is namespaced with a
                prefix to guarantee uniqueness while not

                needing different detectors like camera, edge based algorithms
                and cloud based algorithms to coordinate.

                The the prefix is followed by a colon and then the unique
                (within the namespace) id of the object.


                If the object pointed to by the objectId has a signature, then
                the signature matching logic will be applied.

                If "signature matching" is not enabled, or the object doesn't
                have a signature, the object metadata information will be
                fetched and used for the search.

                The detail of whether it was a similarity or metadata search
                will not be mentioned in the response.


                `objectId` key and `unique` key are mutually exclusive.
        unique:
          type: boolean
          description: >-
            Enabling this key would help in providing search results containing
            only unique objects.


            Currently, this feature is supported for
            `filter.objectClassificationV1.class` value of `face` only.


            `objectId` key and `unique` key are mutually exclusive.
    ObjectIdV1:
      type: string
      description: >-
        ID given to the object by the detector. It is namespaced with a prefix
        to guarantee uniqueness while not

        needing different detectors like camera, edge based algorithms and cloud
        based algorithms to coordinate.

        The the prefix is followed by a colon and then the unique (within the
        namespace) id of the object.
      pattern: '^.*:.*$'
      example: 'camera-46743c2:d3275d08-16df-4176-b9c6-688046c858a2'
    FilterCustomLabelsV1:
      type: object
      required:
        - type
        - label
      properties:
        type:
          type: string
          description: Type of the filter selected
          enum:
            - filter.customLabels.v1
        label:
          type: string
          description: Label user wants to search for.
    EventEnvelope:
      type: object
      description: Envelope for een events
      allOf:
        - $ref: '#/components/schemas/EventEnvelopeParent'
        - required:
            - accountId
            - actorAccountId
    EventEnvelopeParent:
      type: object
      description: Parent for envelope for een events
      required:
        - startTimestamp
        - endTimestamp
        - span
        - actorId
        - actorType
        - creatorId
        - type
        - dataSchemas
        - data
      properties:
        id:
          type: string
          description: System wide unique id of the event
          readOnly: true
        startTimestamp:
          type: string
          format: date-time
          description: Time at which the event starts.
        endTimestamp:
          type: string
          format: date-time
          description: 'Time at which the event ended. If null, the event is ongoing.'
          nullable: true
        span:
          type: boolean
          description: >-
            True if the event describes a period of time instead of a single
            moment in time.
        accountId:
          type: string
          description: >
            Id of the account the event belongs in. This can be a different
            account than the account of the actor that changed as part of the
            event, see the `actorAccountId` description for more details.
        actorId:
          type: string
          description: >
            Id of the entity that changed as part of the event, such as a camera
            id, user id, or account id. This id represents the specific entity
            that underwent a change, triggering the event notification.
        actorAccountId:
          type: string
          description: >
            Id of the account to which the changed actor belongs. This might be
            different from the `accountId` field in cases where one account is
            helping to manage another one. For example, a reseller that manages
            the bridges for one of their end-users would want to get alerts in
            their own account (`accountId`) that are about bridges located in
            their end-user's account (actorAccountId).
        actorType:
          type: string
          enum:
            - bridge
            - camera
            - speaker
            - account
            - user
            - layout
            - job
            - measurement
          default: camera
          description: 'Type of actor that changed, triggering the event.'
        creatorId:
          type: string
          default: unknown
          description: >-
            Id of the application or system that created this event. This id
            should not differ between instances or even versions of the same
            application.
        type:
          type: string
          description: >-
            Specific event type, e.g. een.motionDetectionEvent.v1,
            een.lprPlateReadEvent.v1
        dataSchemas:
          type: array
          items:
            type: string
          description: List of all data schema types that can be found in this event.
          example:
            - een.objectDetection.v1
            - een.objectClassification.v1
            - een.lprDetection.v1
            - een.personAttributes.v1
            - een.vehicleAttributes.v1
            - een.fullFrameImageUrl.v1
            - een.croppedFrameImageUrl.v1
            - een.objectRegionMapping.v1
            - een.eevaAttributes.v1
            - een.customLabels.v1
        data:
          type: array
          description: >
            Event specific data given as an array of objects that have a `type`
            field indicates the schema of the value.
          items:
            $ref: '#/components/schemas/BaseDataObject'
    BaseDataObject:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: >
            Specific data schema type, eg `een.lprDetection.v1` which describes
            what other fields will exist in this object.
        creatorId:
          type: string
          description: >-
            Id of the application or system that created this piece of
            information, generally the same as the `creatorId` of the event
            itself. This field allows clients to disambiguate data from multiple
            sources in the same event.
    EenObjectDetectionV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the object that was detected.
          required:
            - boundingBox
            - type
            - objectId
            - timestamp
          properties:
            type:
              type: string
              enum:
                - een.objectDetection.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                The moment at which the object was detected at the location
                given by the bounding box.
              example: '2021-04-22T00:00:00.000+00:00'
            boundingBox:
              $ref: '#/components/schemas/BoundingBoxV1'
    ObjectEnvelopeDataObject:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          properties:
            objectId:
              $ref: '#/components/schemas/ObjectIdV1'
    BoundingBoxV1:
      type: array
      description: >-
        Array of 4 floats describing a bounding box around the object of
        interest. Note that the percentage defined below

        is as a decimal value between 0 and 1. This means 55% would have to be
        provided as 0.55.

        * First - top left corner horizontal position (from left) as a
        percentage of the image width.

        * Second - top left corner vertical position (from top) as a percentage
        of the total image height.

        * Third - bottom right corner horizontal position (from left) as a
        percentage of the image width.

        * Fourth - bottom right corner vertical position (from top) as a
        percentage of the image height.
      minItems: 4
      maxItems: 4
      items:
        type: number
        format: double
        minimum: 0
        maximum: 1
    EenObjectClassificationV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the object's classification.
          required:
            - class
            - objectId
            - type
          properties:
            type:
              type: string
              enum:
                - een.objectClassification.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                Optional timestamp of the frame for which the classification was
                made.
              example: '2021-04-22T00:00:00.000+00:00'
            class:
              $ref: '#/components/schemas/ObjectClass'
            confidence:
              type: number
              description: >-
                Confidence of the system in the classification. Higher is
                better.
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
    EenPersonAttributesV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Attributes related to a person detected in an event image
          properties:
            type:
              type: string
              description: >-
                Type of this data schema. The value is fixed as
                'een.personAttributes.v1'
              enum:
                - een.personAttributes.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                Optional timestamp of the frame for which the attributes were
                inferred.
              example: '2021-04-22T00:00:00.000+00:00'
            upperBodyClothingColor:
              allOf:
                - description: Color of the upper body clothing of the person
                - $ref: '#/components/schemas/PersonUbcColorDefinitions'
            upperBodyClothingColorConfidence:
              description: >-
                The confidence of the clothing color classification reported as
                a float value between 0 and 1.
              type: number
              format: float
              example: 0.89
              minimum: 0
              maximum: 1
            lowerBodyClothingColor:
              allOf:
                - description: Color of the lower body clothing of the person
                - $ref: '#/components/schemas/PersonLbcColorDefinitions'
            lowerBodyClothingColorConfidence:
              description: >-
                The confidence of the clothing color classification reported as
                a float value between 0 and 1.
              type: number
              format: float
              example: 0.87
              minimum: 0
              maximum: 1
            gender:
              allOf:
                - description: Gender of the person
                - $ref: '#/components/schemas/PersonGenderDefinitions'
            genderConfidence:
              description: >-
                The confidence of the gender classification reported as a float
                value between 0 and 1.
              type: number
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
            stationary:
              type: boolean
              description: Information regarding whether the person is moving or not
            stationaryConfidence:
              type: number
              description: The confidence on the value of `stationary` key
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
            helmet:
              type: boolean
              description: >-
                Information regarding whether the person is wearing a helmet or
                not
            helmetConfidence:
              type: number
              description: The confidence on the value of `helmet` key
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
            vest:
              type: boolean
              description: >-
                Information regarding whether the person is wearing a vest or
                not
            vestConfidence:
              type: number
              description: The confidence on the value of `vest` key
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
          required:
            - type
            - objectId
    EenVehicleAttributesV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: |
            Attributes of the vehicle that created the LPR event.
          properties:
            type:
              type: string
              enum:
                - een.vehicleAttributes.v1
            timestamp:
              type: string
              format: date-time
              description: >-
                Optional timestamp of the frame at which these attributes were
                inferred.
            color:
              allOf:
                - description: Enumerations of standard colors for vehicles.
                - $ref: '#/components/schemas/VehicleColorDefinitions'
            colorConfidence:
              description: >-
                Confidence of the color classification reported as a float value
                between 0 and 1.
              type: number
              format: float
              example: 0.89
              minimum: 0
              maximum: 1
            make:
              allOf:
                - description: Make of the vehicle
                - $ref: '#/components/schemas/VehicleMakeDefinitions'
            makeDisplay:
              type: string
              description: UI ready display name of the make of the vehicle
              example: Toyota
            makeConfidence:
              description: >-
                The confidence of the make classification reported as a float
                value between 0 and 1.
              type: number
              format: float
              example: 0.87
              minimum: 0
              maximum: 1
            model:
              type: string
              description: Model of the vehicle
              example: Camry
            modelConfidence:
              description: >-
                The confidence of the model classification reported as a float
                value between 0 and 1.
              type: number
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
            bodyType:
              allOf:
                - description: Type of the vehicle
                - $ref: '#/components/schemas/VehicleBodyTypeDefinitions'
            bodyTypeConfidence:
              description: >-
                The confidence of the body type classification reported as a
                float value between 0 and 1.
              type: number
              format: float
              example: 0.67
              minimum: 0
              maximum: 1
            year:
              type: integer
              description: Year of production
              example: 2007
            yearConfidence:
              description: >-
                The confidence of the year classification reported as a float
                value between 0 and 1.
              type: number
              example: 0.56
              format: float
              minimum: 0
              maximum: 1
            orientation:
              type: string
              description: >-
                Orientation of vehicle w.r.t. the camera. In other words, it
                describes how the camera viewed a specific vehicle.
              enum:
                - front
                - rear
                - side
              example: rear
            parked:
              type: boolean
              description: Information regarding whether the vehicle is parked or not
            parkedConfidence:
              type: number
              description: >-
                The confidence on the value of `parked` key reported as a float
                value between 0 and 1.
              format: float
              example: 0.75
              minimum: 0
              maximum: 1
          required:
            - type
            - objectId
    EenEEVAAttributesV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: >-
            Attributes related to an EEVA query that resulted in this event
            being detected in an image.
          properties:
            type:
              type: string
              description: >-
                Type of this data schema. The value is fixed as
                'een.eevaAttributes.v1'.
              enum:
                - een.eevaAttributes.v1
            queryType:
              type: string
              description: The type of the EEVA query which is run on the image.
              enum:
                - binaryTimestamp
            query:
              type: string
              description: Query set by the user to run on image.
              example: Is there an amazon van present?
            binaryResponse:
              type: boolean
              description: >-
                Boolean response returned by the OpenAI VLM in response to the
                query.
              example: true
          required:
            - type
            - queryType
            - query
            - binaryResponse
    EenCustomLabelsV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the custom label created by the user.
          properties:
            type:
              type: string
              description: >-
                Type of this data schema. The value is fixed as
                'een.customLabels.v1'
              enum:
                - een.customLabels.v1
            label:
              type: string
              description: Label assigned by the user.
          required:
            - type
            - label
    EenFullFrameImageUrlV1:
      allOf:
        - $ref: '#/components/schemas/BaseDataObject'
        - type: object
          description: Details about the full frame image url related to the event.
          properties:
            type:
              type: string
              enum:
                - een.fullFrameImageUrl.v1
            httpsUrl:
              type: string
              format: url
              description: Link to obtain the full frame image related to this event.
              example: >-
                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
            timestamp:
              type: string
              format: date-time
              description: Timestamp of the frame from which the crop was made.
            feedType:
              type: string
              enum:
                - main
                - preview
              description: >
                Multiple video feeds can be published per source, but they
                should all have the same viewpoint. They can differ in
                resolution:
                  * `main` is higher resolution and high framerate.
                  * `preview` is low resolution and low framerate.
          required:
            - httpsUrl
            - timestamp
    EenCroppedFrameImageUrlV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: Details about the cropped frame image url related to the event.
          required:
            - httpsUrl
            - timestamp
            - objectId
          properties:
            type:
              type: string
              enum:
                - een.croppedFrameImageUrl.v1
            httpsUrl:
              type: string
              format: url
              description: >-
                Link to obtain the frame crop image of the area of interest
                related to this event.  For example in case of LPR, it is
                beneficial for end user to obtain the crop of the license plate.
              example: >-
                https://media.c001.eagleeyenetworks.com/assets/events/lpr/plate/4333af21c0-4335312343521312213.jpeg
            timestamp:
              type: string
              format: date-time
              description: Timestamp of the frame from which the crop was made.
    EenObjectRegionMappingV1:
      allOf:
        - $ref: '#/components/schemas/ObjectEnvelopeDataObject'
        - type: object
          description: >-
            Details about the region(s) to which a selected object is associated
            with.

            An object is considered to be associated with a region, if >20% of
            the area of the object bounding box lies within the region.

            If an object is associated with multiple regions, all those regions
            should be enumerated in a single instance of this schema.
          required:
            - type
            - objectId
            - regions
          properties:
            type:
              type: string
              description: >-
                Type of this data schema. The value is fixed as
                'een.objectRegionMapping.v1'
              enum:
                - een.objectRegionMapping.v1
            regions:
              description: A list of the associated regions.
              title: ObjectRegionMappingV1
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
                required:
                  - name
  responses:
    ResponseParse:
      description: Structured information based on the user-specified query data
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CommonRequestBodyMeta'
              - $ref: '#/components/schemas/RequestBodyQueryParams'
          examples:
            parsePerson:
              value:
                objects__all:
                  -   - type: filter.objectClassification.v1
                        class: person
                      - type: filter.personAttributes.v1
                        gender: male
            parsePersonAndVehicle:
              value:
                objects__all:
                  -   - type: filter.objectClassification.v1
                        class: person
                      - type: filter.personAttributes.v1
                        gender: male
                  -   - type: filter.objectClassification.v1
                        class: vehicle
                      - type: filter.vehicleAttributes.v1
                        make: volvo
                        color: red
            parseEEVA:
              value:
                queryParams:
                  - type: array
                    name: eventType__in
                    value:
                      - een.eevaQueryEvent.v1
                objects__all: []
            parseEEVALabel:
              value:
                objects__all:
                  -   - type: filter.customLabels.v1
                        label: Amazon van
    ResponseSearchCommon:
      description: List of events matching search criteria
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResult'
          examples:
            searchPerson:
              $ref: '#/components/examples/responseCommonSearchPerson'
            searchId:
              $ref: '#/components/examples/responseCommonSearchId'
            searchUniqueFaces:
              $ref: '#/components/examples/responseCommonSearchUniqueFaces'
            searchPersonAndVehicle:
              $ref: '#/components/examples/responseCommonSearchPersonAndVehicle'
    ResponseSearchGroup:
      description: List of events matching search criteria
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResultGroup'
          examples:
            searchPerson:
              value:
                nextPageToken: string
                prevPageToken: string
                totalSize: 1
                results:
                  - group:
                      type: camera
                      id: camera1
                      name: camera name
                    count: 2
                    lastSample:
                      id: camera1_event1
                      startTimestamp: '2019-08-24T14:15:22Z'
                      endTimestamp: '2019-08-24T14:15:22Z'
                      span: false
                      accountId: account1
                      actorId: camera1
                      actorAccountId: account1
                      actorType: camera
                      actorName: camera1 name
                      creatorId: een.bridge.v1
                      type: todo
                      matchObjectIds:
                        - 'camera1:event1-object1'
                      dataSchemas:
                        - een.objectDetection.v1
                        - een.objectClassification.v1
                        - een.personAttributes.v1
                        - een.vehicleAttributes.v1
                        - een.fullFrameImageUrl.v1
                        - een.objectRegionMapping.v1
                      data:
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          boundingBox:
                            - 0.2
                            - 0.24
                            - 0.5
                            - 0.7
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          class: person
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          boundingBox:
                            - 0.3
                            - 0.34
                            - 0.4
                            - 0.4
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          class: person
                        - type: een.personAttributes.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          upperBodyClothingColor: white
                          upperBodyClothingColorConfidence: 0.89
                          lowerBodyClothingColor: black
                          lowerBodyClothingColorConfidence: 0.87
                          gender: female
                          genderConfidence: 0.75
                          helmet: true
                          helmetConfidence: 0.85
                          vest: false
                          vestConfidence: 0.85
                        - type: een.fullFrameImageUrl.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: string
                          httpsUrl: >-
                            https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                          feedType: preview
                        - type: een.objectRegionMapping.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          regions:
                            - name: Region1
            searchId:
              value:
                nextPageToken: string
                prevPageToken: string
                totalSize: 1
                results:
                  - group:
                      type: camera
                      id: camera1
                      name: camera name
                    count: 2
                    lastSample:
                      id: camera1_event1
                      startTimestamp: '2019-08-24T14:15:22Z'
                      endTimestamp: '2019-08-24T14:15:22Z'
                      span: false
                      accountId: account1
                      actorId: camera1
                      actorAccountId: account1
                      actorType: camera
                      actorName: camera1 name
                      creatorId: een.bridge.v1
                      type: todo
                      matchObjectIds:
                        - 'camera1:event1-object1'
                      dataSchemas:
                        - een.objectDetection.v1
                        - een.objectClassification.v1
                        - een.personAttributes.v1
                        - een.vehicleAttributes.v1
                        - een.fullFrameImageUrl.v1
                        - een.objectRegionMapping.v1
                      data:
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          boundingBox:
                            - 0.2
                            - 0.24
                            - 0.5
                            - 0.7
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          class: person
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          boundingBox:
                            - 0.3
                            - 0.34
                            - 0.4
                            - 0.4
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          class: person
                        - type: een.personAttributes.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          upperBodyClothingColor: white
                          upperBodyClothingColorConfidence: 0.89
                          lowerBodyClothingColor: black
                          lowerBodyClothingColorConfidence: 0.87
                          gender: female
                          genderConfidence: 0.75
                          helmet: true
                          helmetConfidence: 0.85
                          vest: false
                          vestConfidence: 0.85
                        - type: een.fullFrameImageUrl.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: string
                          httpsUrl: >-
                            https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                          feedType: preview
                        - type: een.objectRegionMapping.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          regions:
                            - name: Region1
            searchUniqueFaces:
              value:
                nextPageToken: string
                prevPageToken: string
                totalSize: 1
                results:
                  - group:
                      type: camera
                      id: camera1
                      name: camera name
                    count: 2
                    lastSample:
                      id: camera1_event1
                      startTimestamp: '2019-08-24T14:15:22Z'
                      endTimestamp: '2019-08-24T14:15:22Z'
                      span: false
                      accountId: account1
                      actorId: camera1
                      actorAccountId: account1
                      actorType: camera
                      actorName: camera1 name
                      creatorId: een.bridge.v1
                      type: todo
                      matchObjectIds:
                        - 'camera1:event1-object1'
                      dataSchemas:
                        - een.objectDetection.v1
                        - een.objectClassification.v1
                        - een.fullFrameImageUrl.v1
                        - een.objectRegionMapping.v1
                      data:
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          boundingBox:
                            - 0.2
                            - 0.24
                            - 0.5
                            - 0.7
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          class: face
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          boundingBox:
                            - 0.3
                            - 0.34
                            - 0.4
                            - 0.4
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          class: person
                        - type: een.personAttributes.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          upperBodyClothingColor: white
                          upperBodyClothingColorConfidence: 0.89
                          lowerBodyClothingColor: black
                          lowerBodyClothingColorConfidence: 0.87
                          gender: female
                          genderConfidence: 0.75
                          helmet: true
                          helmetConfidence: 0.85
                          vest: false
                          vestConfidence: 0.85
                        - type: een.fullFrameImageUrl.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: string
                          httpsUrl: >-
                            https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                          feedType: preview
                        - type: een.objectRegionMapping.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          regions:
                            - name: Region1
            searchPersonAndVehicle:
              value:
                nextPageToken: string
                prevPageToken: string
                totalSize: 1
                results:
                  - group:
                      type: camera
                      id: camera1
                      name: camera name
                    count: 2
                    lastSample:
                      id: camera1_event1
                      startTimestamp: '2019-08-24T14:15:22Z'
                      endTimestamp: '2019-08-24T14:15:22Z'
                      span: false
                      accountId: account1
                      actorId: camera1
                      actorAccountId: account1
                      actorType: camera
                      actorName: camera1 name
                      creatorId: een.bridge.v1
                      type: todo
                      matchObjectIds:
                        - 'camera1:event1-object1'
                        - 'camera1:event1-object2'
                      dataSchemas:
                        - een.objectDetection.v1
                        - een.objectClassification.v1
                        - een.personAttributes.v1
                        - een.vehicleAttributes.v1
                        - een.fullFrameImageUrl.v1
                        - een.objectRegionMapping.v1
                      data:
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          boundingBox:
                            - 0.2
                            - 0.24
                            - 0.5
                            - 0.7
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          class: person
                        - type: een.objectDetection.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          boundingBox:
                            - 0.3
                            - 0.34
                            - 0.4
                            - 0.4
                        - type: een.objectClassification.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object2'
                          class: person
                        - type: een.personAttributes.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          upperBodyClothingColor: white
                          upperBodyClothingColorConfidence: 0.89
                          lowerBodyClothingColor: black
                          lowerBodyClothingColorConfidence: 0.87
                          gender: female
                          genderConfidence: 0.75
                          helmet: true
                          helmetConfidence: 0.85
                          vest: false
                          vestConfidence: 0.85
                        - type: een.fullFrameImageUrl.v1
                          timestamp: '2019-08-24T14:15:22Z'
                          creatorId: string
                          httpsUrl: >-
                            https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                          feedType: preview
                        - type: een.objectRegionMapping.v1
                          creatorId: een.videoSearch.v1
                          objectId: 'camera1:event1-object1'
                          regions:
                            - name: Region1
    ResponseSearchGroupByTime:
      description: List of events matching search criteria
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResultGroupByTime'
          examples:
            searchPersonGroupByTime:
              $ref: '#/components/examples/responseGroupByTimeSearchPerson'
    validationError:
      description: >-
        The supplied object is invalid. Error detail will contain the validation
        error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            unexpectedArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Unexpected argument: name'
                details:
                  - type: errorInfo
                    reason: unexpectedArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            missingRequiredArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Missing required arguments: name, id'
                details:
                  - type: errorInfo
                    reason: missingRequiredArgument
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidJSON:
              value:
                code: 400
                status: invalidArgument
                message: Invalid JSON
                details:
                  - type: errorInfo
                    reason: invalidJSON
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            badRequestInvalidArgument:
              value:
                code: 400
                status: invalidArgument
                message: 'Invalid Argument: Argument name is too long'
                details:
                  - type: errorInfo
                    reason: wrongArgumentValue
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: badRequest
                    argumentViolations:
                      - argumentName: name
                        description: Name is too long
    unauthorized:
      description: You are not authenticated. Please authenticate and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 401
            status: unauthenticated
            message: The client caller does not have a valid authentication credential
            details:
              - type: errorInfo
                reason: unauthenticated
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
    forbidden:
      description: You have no permission to access the specified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            invalidPermission:
              value:
                code: 403
                status: permissionDenied
                message: >-
                  The client caller does not have permission for the specified
                  operation
                details:
                  - type: errorInfo
                    reason: invalidPermission
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            wrongEdition:
              value:
                code: 403
                status: permissionDenied
                message: This feature is not enabled for the account
                details:
                  - type: errorInfo
                    reason: wrongEdition
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
            wrongAccountType:
              value:
                code: 403
                status: permissionDenied
                message: This feature is only available for end users
                details:
                  - type: errorInfo
                    reason: wrongAccountType
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/locations
    resourceNotFound:
      description: Referenced resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          examples:
            endpointNotFound:
              value:
                code: 404
                status: notFound
                message: The API endpoint was not found
                details:
                  - type: errorInfo
                    reason: endpointNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
            resourceNotFound:
              value:
                code: 404
                status: notFound
                message: The resource was not found
                details:
                  - type: errorInfo
                    reason: resourceNotFound
                    domain: apiv3
                    metadata:
                      path: /api/v3.0/<resource>
                  - type: resourceInfo
                    resource: <resource>
                    ids:
                      - <ids>
    internalServerError:
      description: Something went wrong in the server. Please try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiV3Error'
          example:
            code: 500
            status: internal
            message: An internal error has occurred. Please try again later.
            details:
              - type: errorInfo
                reason: unexpectedError
                domain: apiv3
                metadata:
                  path: /api/v3.0/<resource>
  parameters:
    id:
      in: path
      name: id
      description: Id of the event
      required: true
      schema:
        type: string
    acceptLanguageHeader:
      in: header
      name: Accept-Language
      description: >
        Allows clients to request translated versions of human readable fields
        such as the `name` and `description` fields. If no translation is
        available, the values will be returned in English. If both the
        `Accept-Language` and `language=` query parameter are used, the query
        parameter value is used and the header is ignored.
      required: false
      schema:
        $ref: '#/components/schemas/LanguageTag'
    languageQueryParam:
      in: query
      name: language
      description: >
        Allows clients to request translated versions of human readable fields
        such as the `name` and `description` fields. If no translation is
        available, the values will be returned in English. If both the
        `Accept-Language` and `language=` query parameter are used, the query
        parameter value is used and the header is ignored.
      required: false
      schema:
        $ref: '#/components/schemas/LanguageTag'
    timestamp__gte:
      in: query
      name: timestamp__gte
      description: >-
        Minimum range of timestamp to fetch events after this time. Default
        would be 2 hours from current time.
      required: true
      schema:
        $ref: '#/components/schemas/TimestampData'
    timestamp__lte:
      in: query
      name: timestamp__lte
      description: >-
        Maximum range of timestamp to fetch events before this time. Default
        would be the current time.
      required: true
      schema:
        $ref: '#/components/schemas/TimestampData'
    actor__in:
      in: query
      name: actor__in
      description: >-
        Filter to get only events where the actorType and actorId value equals
        any one of the supplied value in the list.

        The `actorType` must be prefixed to the `actorId` using a colon (`:`)
        separator.

        For example:

        - To filter for a camera with ID `cameraId_1`, use `camera:cameraId_1`.

        - To filter for a location with ID `locationId_1`, use
        `location:locationId_1`.

        - To filter for a bridge with ID `bridgeId_1`, use `bridge:bridgeId_1`.


        Currently, the following `actorType` values are supported:

        - `camera`: Matches the specific camera ID.

        - `location`: Matches all camera IDs associated with the specified
        location ID(s).

        - `bridge`: Matches all camera IDs associated with the specified bridge
        ID(s).


        If multiple actor types are provided (e.g., `camera`, `location`, and
        `bridge`), the filter will include camera IDs associated with **any** of
        the given values.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ActorGenericId'
      style: form
      explode: false
    layoutId__in:
      in: query
      name: layoutId__in
      description: >-
        Filter to get only events associated with camera Ids mapped to the
        specified layout Ids.

        Accepts a comma-separated list of layout Ids (e.g.,
        `layoutId_1,layoutId_2`).

        All matching camera IDs for the provided layout IDs will be included in
        the result.
      schema:
        $ref: '#/components/schemas/CommaSeparatedList'
      style: form
      explode: false
    tags__any:
      in: query
      name: tags__any
      description: >-
        Filter to get only events associated with camera Ids mapped to the
        specified tag Ids.

        Accepts a comma-separated list of tag Ids (e.g., `tagId_1,tagId_2`).

        All matching camera IDs for the provided tag IDs will be included in the
        result.

        Here the suffix `__any` is used to indicate that the filter is an OR
        operation, i.e., events associated with any of the provided tag IDs will
        be included in the result.
      schema:
        $ref: '#/components/schemas/CommaSeparatedList'
      style: form
      explode: false
    roiName__in:
      in: query
      name: roiName__in
      description: >-
        Matches with all events that have at least one motion-event related
        region with a name containing one or more of the values in this list.
        Matching is done exactly but is not case-sensitive.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ROIGenericName'
    includeGroupApi:
      in: query
      name: include
      description: >-
        List of properties that should be included in the response, if
        available.

        The `data` field can be used as prefix to request data if it is
        available.

        Eg. if the client wants to have object detection details and supports
        the

        `een.objectDetection.v1` schemas, it can add
        `data.een.objectDetection.v1` to the list of requested includes.

        This parameter does not operate as a filter, events without the
        requested properties are still returned.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - data.een.objectDetection.v1
            - data.een.objectClassification.v1
            - data.een.vehicleAttributes.v1
            - data.een.personAttributes.v1
            - data.een.fullFrameImageUrl.v1
            - data.een.croppedFrameImageUrl.v1
            - data.een.objectRegionMapping.v1
            - lastSample
            - firstSample
            - randomSample
    creatorId__in:
      in: query
      name: creatorId__in
      description: >-
        Filter to get only events that have a `creatorId` value that equals one
        of the given parameter values.


        To get the list of creatorIds that have been recorded for a specific
        actor/device, use
        [`/videoAnalyticEvents:listFieldValues`](ref:listVideoAnalyticsFieldValues).
      schema:
        type: array
        items:
          $ref: '#/components/schemas/EventCreatorId'
      style: form
      explode: false
    eventType__in:
      in: query
      name: eventType__in
      description: >-
        Filter to get only events that have a `type` value that equals one of
        the given parameter values.


        To get the list of event types that have been recorded for a specific
        actor/device, use
        [`/videoAnalyticEvents:listFieldValues`](ref:listVideoAnalyticsFieldValues).
      schema:
        type: array
        items:
          $ref: '#/components/schemas/EventType'
      style: form
      explode: false
    pageToken:
      in: query
      name: pageToken
      description: >
        Token string value that references a page for pagination. This value is
        received when retrieving the first page in the `nextPageToken` and
        `prevPageToken` fields.
      example: b2Zmc2V0PTEwJmxpbWl0PTEw
      required: false
      schema:
        type: string
    pageSize:
      in: query
      name: pageSize
      description: >
        The number of entries to return per page. The maximum range of valid
        page sizes is documented with minimum and  maximum values, but the range
        might be further limited dynamically based on the requested information,
        account, and system status. Values outside of the (dynamic) allowed
        range will not result in an error, but will be clamped to the nearest
        limit. Thus, logic to detect the last page should not be based on
        comparing the requested size with the received size, but on the
        existence of a `nextPageToken` value.
      example: 100
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 100
  examples:
    responseCommonSearchPerson:
      value:
        nextPageToken: string
        prevPageToken: string
        totalSize: 1
        results:
          - id: camera1_event1
            startTimestamp: '2019-08-24T14:15:22Z'
            endTimestamp: '2019-08-24T14:15:22Z'
            span: false
            accountId: account1
            actorId: camera1
            actorAccountId: account1
            actorType: camera
            actorName: camera1 name
            creatorId: een.bridge.v1
            type: todo
            matchObjectIds:
              - 'camera1:event1-object1'
            dataSchemas:
              - een.objectDetection.v1
              - een.objectClassification.v1
              - een.personAttributes.v1
              - een.vehicleAttributes.v1
              - een.fullFrameImageUrl.v1
              - een.objectRegionMapping.v1
            data:
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                boundingBox:
                  - 0.2
                  - 0.24
                  - 0.5
                  - 0.7
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                class: person
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                boundingBox:
                  - 0.3
                  - 0.34
                  - 0.4
                  - 0.4
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                class: person
              - type: een.personAttributes.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                upperBodyClothingColor: white
                upperBodyClothingColorConfidence: 0.89
                lowerBodyClothingColor: black
                lowerBodyClothingColorConfidence: 0.87
                gender: female
                genderConfidence: 0.75
                helmet: true
                helmetConfidence: 0.85
                vest: false
                vestConfidence: 0.85
              - type: een.fullFrameImageUrl.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: string
                httpsUrl: >-
                  https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                feedType: preview
              - type: een.objectRegionMapping.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                regions:
                  - name: Region1
    responseCommonSearchId:
      value:
        nextPageToken: string
        prevPageToken: string
        totalSize: 1
        results:
          - id: camera1_event1
            startTimestamp: '2019-08-24T14:15:22Z'
            endTimestamp: '2019-08-24T14:15:22Z'
            span: false
            accountId: account1
            actorId: camera1
            actorAccountId: account1
            actorType: camera
            actorName: camera1 name
            creatorId: een.bridge.v1
            type: todo
            matchObjectIds:
              - 'camera1:event1-object1'
            dataSchemas:
              - een.objectDetection.v1
              - een.objectClassification.v1
              - een.personAttributes.v1
              - een.vehicleAttributes.v1
              - een.fullFrameImageUrl.v1
              - een.objectRegionMapping.v1
            data:
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                boundingBox:
                  - 0.2
                  - 0.24
                  - 0.5
                  - 0.7
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                class: person
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                boundingBox:
                  - 0.3
                  - 0.34
                  - 0.4
                  - 0.4
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                class: person
              - type: een.personAttributes.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                upperBodyClothingColor: white
                upperBodyClothingColorConfidence: 0.89
                lowerBodyClothingColor: black
                lowerBodyClothingColorConfidence: 0.87
                gender: female
                genderConfidence: 0.75
                helmet: true
                helmetConfidence: 0.85
                vest: false
                vestConfidence: 0.85
              - type: een.fullFrameImageUrl.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: string
                httpsUrl: >-
                  https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                feedType: preview
              - type: een.objectRegionMapping.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                regions:
                  - name: Region1
    responseCommonSearchUniqueFaces:
      value:
        nextPageToken: string
        prevPageToken: string
        totalSize: 1
        results:
          - id: camera1_event1
            startTimestamp: '2019-08-24T14:15:22Z'
            endTimestamp: '2019-08-24T14:15:22Z'
            span: false
            accountId: account1
            actorId: camera1
            actorAccountId: account1
            actorType: camera
            actorName: camera1 name
            creatorId: een.bridge.v1
            type: todo
            matchObjectIds:
              - 'camera1:event1-object1'
            dataSchemas:
              - een.objectDetection.v1
              - een.objectClassification.v1
              - een.fullFrameImageUrl.v1
              - een.objectRegionMapping.v1
            data:
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                boundingBox:
                  - 0.2
                  - 0.24
                  - 0.5
                  - 0.7
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                class: face
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                boundingBox:
                  - 0.3
                  - 0.34
                  - 0.4
                  - 0.4
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                class: face
              - type: een.fullFrameImageUrl.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: string
                httpsUrl: >-
                  https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                feedType: preview
              - type: een.objectRegionMapping.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                regions:
                  - name: Region1
    responseCommonSearchPersonAndVehicle:
      value:
        nextPageToken: string
        prevPageToken: string
        totalSize: 1
        results:
          - id: camera1_event1
            startTimestamp: '2019-08-24T14:15:22Z'
            endTimestamp: '2019-08-24T14:15:22Z'
            span: false
            accountId: account1
            actorId: camera1
            actorAccountId: account1
            actorType: camera
            actorName: camera1 name
            creatorId: een.bridge.v1
            type: todo
            matchObjectIds:
              - 'camera1:event1-object1'
              - 'camera1:event1-object2'
            dataSchemas:
              - een.objectDetection.v1
              - een.objectClassification.v1
              - een.personAttributes.v1
              - een.vehicleAttributes.v1
              - een.fullFrameImageUrl.v1
              - een.objectRegionMapping.v1
            data:
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                boundingBox:
                  - 0.2
                  - 0.24
                  - 0.5
                  - 0.7
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                class: person
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                boundingBox:
                  - 0.3
                  - 0.34
                  - 0.4
                  - 0.4
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object2'
                class: person
              - type: een.objectDetection.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object3'
                boundingBox:
                  - 0.8
                  - 0.84
                  - 0.9
                  - 0.9
              - type: een.objectClassification.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object3'
                class: vehicle
              - type: een.personAttributes.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                upperBodyClothingColor: white
                upperBodyClothingColorConfidence: 0.89
                lowerBodyClothingColor: black
                lowerBodyClothingColorConfidence: 0.87
                gender: female
                genderConfidence: 0.75
                helmet: true
                helmetConfidence: 0.85
                vest: false
                vestConfidence: 0.85
              - type: een.vehicleAttributes.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object3'
                color: red
                colorConfidence: 0.89
                make: bmw
                makeConfidence: 0.87
                bodyType: car
                bodyTypeConfidence: 0.87
              - type: een.fullFrameImageUrl.v1
                timestamp: '2019-08-24T14:15:22Z'
                creatorId: string
                httpsUrl: >-
                  https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                feedType: preview
              - type: een.objectRegionMapping.v1
                creatorId: een.videoSearch.v1
                objectId: 'camera1:event1-object1'
                regions:
                  - name: Region1
    responseGroupByTimeSearchPerson:
      value:
        nextPageToken: string
        prevPageToken: string
        totalSize: 1
        results:
          - time:
              startTimestamp: '2019-08-24T14:15:22Z'
              endTimestamp: '2019-08-24T15:15:22Z'
            count: 10
            lastSample:
              id: camera1_event1
              startTimestamp: '2019-08-24T14:15:22Z'
              endTimestamp: '2019-08-24T14:15:22Z'
              span: false
              accountId: account1
              actorId: camera1
              actorAccountId: account1
              actorType: camera
              actorName: camera1 name
              creatorId: een.bridge.v1
              type: todo
              matchObjectIds:
                - 'camera1:event1-object1'
              dataSchemas:
                - een.objectDetection.v1
                - een.objectClassification.v1
                - een.personAttributes.v1
                - een.vehicleAttributes.v1
                - een.fullFrameImageUrl.v1
                - een.objectRegionMapping.v1
              data:
                - type: een.objectDetection.v1
                  timestamp: '2019-08-24T14:15:22Z'
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object1'
                  boundingBox:
                    - 0.2
                    - 0.24
                    - 0.5
                    - 0.7
                - type: een.objectClassification.v1
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object1'
                  class: person
                - type: een.objectDetection.v1
                  timestamp: '2019-08-24T14:15:22Z'
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object2'
                  boundingBox:
                    - 0.3
                    - 0.34
                    - 0.4
                    - 0.4
                - type: een.objectClassification.v1
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object2'
                  class: person
                - type: een.personAttributes.v1
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object1'
                  upperBodyClothingColor: white
                  upperBodyClothingColorConfidence: 0.89
                  lowerBodyClothingColor: black
                  lowerBodyClothingColorConfidence: 0.87
                  gender: female
                  genderConfidence: 0.75
                  helmet: true
                  helmetConfidence: 0.85
                  vest: false
                  vestConfidence: 0.85
                - type: een.fullFrameImageUrl.v1
                  timestamp: '2019-08-24T14:15:22Z'
                  creatorId: string
                  httpsUrl: >-
                    https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg
                  feedType: preview
                - type: een.objectRegionMapping.v1
                  creatorId: een.videoSearch.v1
                  objectId: 'camera1:event1-object1'
                  regions:
                    - name: Region1
    responseIdSampleEvent:
      value:
        id: camera1_event1
        startTimestamp: '2019-08-24T14:15:22Z'
        endTimestamp: '2019-08-24T14:15:22Z'
        span: false
        accountId: account1
        actorId: camera1
        actorAccountId: account1
        actorType: camera
        actorName: camera1 name
        creatorId: een.bridge.v1
        type: todo
        matchObjectIds:
          - 'camera1:event1-object1'
        dataSchemas:
          - een.objectDetection.v1
          - een.objectClassification.v1
          - een.personAttributes.v1
          - een.vehicleAttributes.v1
          - een.fullFrameImageUrl.v1
          - een.objectRegionMapping.v1
        data:
          - type: een.objectDetection.v1
            timestamp: '2019-08-24T14:15:22Z'
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object1'
            boundingBox:
              - 0.2
              - 0.24
              - 0.5
              - 0.7
          - type: een.objectClassification.v1
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object1'
            class: person
          - type: een.objectDetection.v1
            timestamp: '2019-08-24T14:15:22Z'
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object2'
            boundingBox:
              - 0.3
              - 0.34
              - 0.4
              - 0.4
          - type: een.objectClassification.v1
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object2'
            class: person
          - type: een.personAttributes.v1
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object1'
            upperBodyClothingColor: white
            upperBodyClothingColorConfidence: 0.89
            lowerBodyClothingColor: black
            lowerBodyClothingColorConfidence: 0.87
            gender: female
            genderConfidence: 0.75
            helmet: true
            helmetConfidence: 0.85
            vest: false
            vestConfidence: 0.85
          - type: een.fullFrameImageUrl.v1
            timestamp: '2019-08-24T14:15:22Z'
            creatorId: string
            httpsUrl: 'https://media.c001.eagleeyenetworks.com/assets/camera1:event1.jpeg'
            feedType: preview
          - type: een.objectRegionMapping.v1
            creatorId: een.videoSearch.v1
            objectId: 'camera1:event1-object1'
            regions:
              - name: Region1
  requestBodies:
    RequestParse:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: string
                minLength: 1
                description: >-
                  A natural language query for searching events based on their
                  metadata.
            required:
              - query
          examples:
            parsePerson:
              value:
                query: a girl
            parsePersonAndVehicle:
              value:
                query: a red bmw with a guy
            parseEEVA:
              value:
                query: eeva
            parseEEVALabel:
              value:
                query: 'eeva:Amazon Van'
      description: Pass the query string that is to be converted
    RequestCommon:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonRequestBodyMeta'
          examples:
            searchPerson:
              value:
                objects__all:
                  -   - type: filter.objectClassification.v1
                        class: person
                      - type: filter.personAttributes.v1
                        gender: female
            searchId:
              value:
                objects__all:
                  -   - type: filter.objectSimilarity.v1
                        objectId: 'camera99:event3-object10'
            searchUniqueFaces:
              value:
                objects__all:
                  -   - type: filter.objectSimilarity.v1
                        unique: true
                      - type: filter.objectClassification.v1
                        class: face
            searchPersonAndVehicle:
              value:
                objects__all:
                  -   - type: filter.objectClassification.v1
                        class: person
                      - type: filter.personAttributes.v1
                        gender: male
                  -   - type: filter.objectClassification.v1
                        class: vehicle
                      - type: filter.vehicleAttributes.v1
                        make: volvo
                        color: red
      description: >-
        The request body can be used to add additional object details based on
        various combinations of the object metadata.
