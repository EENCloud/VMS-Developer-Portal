openapi: "3.0.0"
info:
  title: Bridges
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0/'
    description: "Eagle Eye Networks API Server"
x-readme:
  explorer-enabled: true

paths:
  /bridges:
    get:
      operationId: listBridges
      description: >
        A list of bridges can be retrieved using this endpoint.  
          
        It is important to note that after using the pageSize parameter, the "totalSize" in the response represents the total number 
        of available devices, not the number of bridges resulting from the query string. 
      tags:
        - Bridges
      parameters:
        - $ref: '#/components/parameters/accountId__in'
        - $ref: '#/components/parameters/locationId__in'

        # Include parameters
        - $ref: '#/components/parameters/include'

        # Pagination
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageToken'
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageSize'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedBridgeResponse'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

    post:
      operationId: createBridge
      description: By using this endpoint, a bridge is created for the account with the provided connect ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiBridgeCreate'
      responses:
        '201':
          description: Bridge Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBridgeMain'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '409':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/conflict'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'
      tags:
        - Bridges

  /bridges:bulkUpdate:
    post:
      operationId: updateBulkBridges
      description: In this endpoint, multiple bridges are updated based on the provided updateField.
      tags:
        - Bridges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUpdateBulkBridge'
      responses:
        '201':
          description: Bridges updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeBulkUpdate'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

  /bridges/{bridgeId}:

    parameters:
      - in: path
        name: bridgeId
        schema:
          type: string
        required: true

    patch:
      description: This endpoint updates the bridge for the account with the given bridge ID.
      operationId: updateBridge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiBridgeUpdate'
      responses:
        '204':
          description: Bridge Updated
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'
      tags:
        - Bridges

    get:
      operationId: getBridge
      description: Using this endpoint, you can retrieve a single Bridge based on its ID.
      tags:
        - Bridges
      parameters:
        # Include parameters
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBridgeWithIncludes'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

    delete:
      operationId: deleteBridge
      description: A single Bridge can be deleted by ID using this endpoint.
      responses:
        '204':
          description: Bridge deleted.
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'
      tags:
        - Bridges

components:
  parameters:
    accountId__in:
      in: query
      name: accountId__in
      required: false
      description: List of Account IDs to filter on that is comma separated.
      schema:
        $ref: '#/components/schemas/ApiEsns'

    locationId__in:
      in: query
      name: locationId__in
      required: false
      description: List of Location IDs to filter on that is comma separated.
      schema:
        type: array
        example: ["2428fda3-389f-48ce-b062-85875dd6b2e2"] # EEN VMS location id value
        items:
          type: string

    include:
      in: query
      name: include
      schema:
        type: array
        items:
          type: string
          enum:
            - status
            - locationSummary
            - deviceAddress
            - timeZone
            - notes
            - tags
            - devicePosition
            - networkInfo
            - deviceInfo
            - effectivePermissions

  schemas:

    ApiEsns:
      type: array
      example: ["00001106","00001107"] # EEN VMS Demo Account value
      items:
        type: string
        pattern: '^[a-fA-F0-9]{8},?$'

    ApiPaginatedBridgeResponse:
      allOf:
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApiBridgeWithIncludes'

    ApiBridgeWithIncludes:
      allOf:
        - $ref: '#/components/schemas/ApiBridgeMain'
        - $ref: '#/components/schemas/ApiBridgeIncludes'
        - type: object

    ApiBridgeMain:
      type: object
      properties:
        id:
          type: string
          example: 1002bc5a
          description: "Unique bridge identifier"
        accountId:
          type: string
          description: Account ID specified in as an ESN Type.
          pattern: '^[a-fA-F0-9]{8}$'
          example: 00001106
        name:
          type: string
          example: CF1 - Capital Factory Austin Floor 8 CMVR
          description: "Bridge name"
        locationId:
          $ref: '#/components/schemas/LocationId'
      required:
        - id
        - accountId
        - name

    ApiBridgeIncludes:
      type: object
      properties:
        status:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/DeviceStatus'
        locationSummary:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/LocationSummary'
        timeZone:
          $ref: '#/components/schemas/ApiTimeZone'
        deviceAddress:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/DeviceAddress'
        notes:
          type: string
          example: Previously used for laser eye surgery. Records pizzas as squares
        tags:
          type: array
          items:
            type: string
            # TODO figure out allowed pattern.
        devicePosition:
          $ref: '#/components/schemas/ApiDevicePosition'
        networkInfo:
          $ref: '#/components/schemas/ApiNetworkInfo'
        deviceInfo:
          $ref: '#/components/schemas/ApiDeviceInfo'
        effectivePermissions:
          $ref: '#/components/schemas/EffectiveBridgePermissions'

    LocationId:
      description: ID Of the location.
      type: string
      example: 2428fda3-389f-48ce-b062-85875dd6b2e2

    Guid:
      type: string
      format: uuid
      example: ddfa5b34-5d04-431e-8287-110fe87edf71

    MacAddress:
      type: string
      pattern: ^([A-F0-9]{2}:){5}[A-F0-9]{2}$
      example: 8A:D4:AD:09:DF:91

    IpAddress:
      type: string
      pattern: ^(?:25[0-5]|2[0-4]\d|[0-1]?\d{1,2})(?:\.(?:25[0-5]|2[0-4]\d|[0-1]?\d{1,2})){3}$
      example: 10.143.55.140

    EffectiveBridgePermissions:
      readOnly: true
      type: object
      properties:
        read:
          type: boolean
        delete:
          type: boolean
        editBillingSettings:
          type: boolean
        editNoBillingSettings:
          type: boolean

    ApiTimeZone:
      type: object
      properties:
        zone:
          type: string
          example: "Americas/Chicago"
          description: 'The timezone the bridge is in.'
        offset:
          type: string
          example: '-06:00'
          description: 'The time offset from UTC the bridge is on.'
          readOnly: true

    ApiDevicePosition:
      type: object
      properties:
        latitude:
          description: The latitude of the device. (WGS 84)
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 52.3074013
        longitude:
          description: The longitude of the device. (WGS 84).
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 4.9459903
        floor:
          type: integer
          minimum: 0
          example: 50

    ApiNetworkInfo:
      type: object
      properties:
        globalIP:
          $ref: '#/components/schemas/IpAddress'
        adapters:
          type: array
          items:
            $ref: '#/components/schemas/ApiAdapterInfo'

    ApiDeviceInfo:
      type: object
      properties:
        icon:
          description: >
            This field allows UIs to roughly differentiate between bridge types when displaying a list of bridges.
            * Important: this should not be used in any way to decide on what functionality is available for a bridge,
            that logic should be based on the capabilities and possibly the settings endpoints.
            * Important: more enum values might be added in the future, clients should handle new values by having a
            fallback icon, eg a generic "bridge" icon.
            * Important: The value for a specific model might change without notice.
          type: string
          enum:
            - bridge
            - vehicle bridge
            - mobile bridge
            - CMVR
          default: bridge
        serialNumber:
          description: The serial number of the bridge.
          type: string
        guid:
          $ref: '#/components/schemas/Guid'

    ApiAdapterInfo:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        ipAddress:
          $ref: '#/components/schemas/IpAddress'

    ApiBridgeCreate:
      type: object
      properties:
        name:
          type: string
          description: Name of the bridge
          example: CF1 EBT Bridge
        connectId:
          type: string
          description: The code delivered with a bridge and assigned to it
          example: 1ABC-1234-A12B-1AB4
        locationId:
          $ref: '#/components/schemas/LocationId'
      required: [name,connectId]

    ApiBridgeUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 126
          description: Name of the bridge
          example: CF1 EBT Bridge
        notes:
          type: string
          description: Notes
          example: Previously used for laser eye surgery. Records pizzas as squares
        locationId:
          $ref: '#/components/schemas/LocationId'

    ApiUpdateBulkBridge:
      description: >
        This object identifies the list of bridges to be updated, and the fields and their values to be updated.
      properties:
        ids:
          type: array
          items:
            type: string
            minItems: 1
          example: ["10088cde","10088ceb","10088abc"]
        updateFields:
          type: object
          description: >
            This defines the parameter that will be updated for list of bridges. Currently, we allow only one
            parameter to be updated at a time.
          properties:
            locationId:
              nullable: true
              description: ID Of the location.
              type: string
              example: 2428fda3-389f-48ce-b062-85875dd6b2e2
      required:
        - ids
        - updateFields

    BridgeBulkUpdate:
      properties:
        #        id:
        #          type: string
        #          description: unique job id
        #          example: 1b0c8ffb-90a5-44a2-b17f-c0bf6ea6c9b1
        #        done:
        #          type: boolean
        #          description: Boolean value identifying if the bulk update job is completed
        #          example: true
        #        progress:
        #          type: number
        #          description: Represents current progress of job in percentage
        response:
          $ref: '#/components/schemas/BulkUpdateResponses'

    BulkUpdateResponses:
      type: object
      description: >
        Provides collection of individual responses of each camera update.
      additionalProperties:
        $ref: '#/components/schemas/BulkUpdateResponse'
      example:
        {
          "10088cde": { "status": 400 },
          "10088ceb": { "status": 204 },
          "10088abc": { "status": 500 },
        }

    BulkUpdateResponse:
      type: object
      properties:
        status:
          type : integer

  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
  - bearerAuth: []