openapi: 3.0.0
info:
  title: Media
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0/'
    description: "Eagle Eye Networks API Server"
x-readme:
  explorer-enabled: true

paths:
  /media:
    get:
      operationId: listMedia
      description: >
        This endpoint requests a list of intervals for which there are recordings for the given type and 
        mediaType. If no endTimestamp_lte (according to ISO 8601) is given, then the 
        results until now are returned.  
          
        Note: The ISO 8601 timestamp format is a standardized format for representing date 
        and time information. It uses the format "YYYY-MM-DDTHH:MM:SS.sssZ" where 
        "T" is the separator between the date and time portions, "Z" indicates that the 
        time is in UTC, and the ".sss" portion is optional and represents milliseconds.  
          
        It is important to note that after using the pageSize parameter, the "totalSize" in 
        the response represents the total number of available devices, not the number of bridges resulting from the query string.
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/mediaType'
        - $ref: '#/components/parameters/startTimestamp'
        - $ref: '#/components/parameters/endTimestamp'
        - $ref: '#/components/parameters/coalesce'
        
        # Include parameters
        - $ref: '#/components/parameters/include'

        # Pagination
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageToken'
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedMediaResponse'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

  /media/recordedImage.jpeg:
    get:
      operationId: getRecordedImage
      description: >
       This endpoint requests an image around a timestamp according to ISO 8601. It can be specified if the timestamp must match exactly, or if it can be 
       before or after. Alternatively by giving pageToken, the next/previous image from the last image is returned. In this case none of the other parameters 
       are used. Be aware that the image type `main` is rate limited, and should not be used in quick succession.  
       In a single request, only one timestamp parameter can be specified.  
         
       It is important to note that after using the pageSize parameter, the "totalSize" in the response represents the total number of available devices, 
       not the number of bridges resulting from the query string.
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/deviceIdNotRequired'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/recordedType'
        - $ref: '#/components/parameters/timestampLess'
        - $ref: '#/components/parameters/timestampLessOrEqual'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/timestampGreaterOrEqual'
        - $ref: '#/components/parameters/timestampGreater'
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
          headers:
            X-Een-Timestamp:
              schema:
                type: string
              description: Timestamp of image
              required: true
            X-Een-NextToken:
              schema:
                type: string
              description: Token to fetch the next image
            X-Een-PrevToken:
              schema:
                type: string
              description: Token to fetch the previous image
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

  /media/liveImage.jpeg:
    get:
      operationId: getLiveImage
      description: >
        This endpoint allows users to get a new image from the device. This call will wait until the image is available.
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/liveType'
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
          headers:
            X-Een-Timestamp:
              schema:
                type: string
              description: Timestamp of image
              required: true
            X-Een-PrevToken:
              schema:
                type: string
              description: Token to fetch the previous image
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'
        '503':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unavailable'

components:
  parameters:
    deviceId:
      in: query
      name: deviceId
      description: The ID of the device that generates the media.
      required: true
      schema:
        type: string
        example: 10058b7a

    deviceIdNotRequired:
      in: query
      name: deviceId
      description: The ID of the device that generates the media.
      schema:
        type: string
        example: 10058b7a

    coalesce:
      in: query
      name: coalesce
      description: If true, we coalesce connected intervals into a single. An interval is seen as connected if the end time and start time are exactly the same.
      schema:
        type: boolean   
        default: true 

    type:
      in: query
      name: type
      description: The stream type of the device used to generate the media.
      required: true
      schema:
        type: string
        enum:
          - preview
          - main

    recordedType:
      in: query
      name: type
      description: The stream type of the device used to generate the media.
      schema:
        type: string
        enum:
          - preview          
          - main      

    liveType:
      in: query
      name: type
      required: true
      description: The stream type of the device used to generate the media.
      schema:
        type: string
        enum:
          - preview
#         - main

    token:
      in: query
      name: pageToken
      description: |
        token provided by `X-Een-NextToken` or `X-Een-PrevToken`. If this parameter is present no
        other parametes are required, and any sent will be ignored
      schema:
        type: string
        example: cHJldlBhZ2VQbHoK

    mediaType:
      in: query
      name: mediaType
      required: true
      description: The type of media that is queried.
      schema:
        type: string
        enum: [ video, image ]
          
    startTimestamp:
      in: query
      name: startTimestamp__gte
      description: Minimum timestamp from which you want to list recordings. Timestamps are according to ISO 8601. 
      required: true
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    endTimestamp:
      in: query
      name: endTimestamp__lte
      description: Maximum timestamp till which you want to list recordings.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T08:57:37.000+00:00"

    timestampLess:
      in: query
      name: timestamp__lt
      description: Return first image with timestamp less then.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    timestampLessOrEqual:
      in: query
      name: timestamp__lte
      description: Return first image with timestamp less or equal.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    timestamp:
      in: query
      name: timestamp
      description: Return image at this exact timestamp.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    timestampGreaterOrEqual:
      in: query
      name: timestamp__gte
      description: Return first image with timestamp greater or equal.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    timestampGreater:
      in: query
      name: timestamp__gt
      description: Return first image with timestamp greater then.
      schema:
        type: string
        format: date-time
        example: "2022-08-08T07:57:37.000+00:00"

    include:
      in: query
      name: include
      schema:
        type: array
        items:
          type: string
          enum:
            - flvUrl
            - rtspUrl
            - rtspsUrl
            - rtspHttpsUrl
#            - hlsUrl
            - multipartUrl
            - mp4Url


  schemas:
    ApiPaginatedMediaResponse:
      allOf:
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApiMediaWithIncludes'

    ApiMediaWithIncludes:
      allOf:
        - $ref: '#/components/schemas/ApiMediaMain'
        - $ref: '#/components/schemas/ApiMediaIncludes'
        - type: object

    ApiMediaMain:
      type: object
      properties:
        type:
          description: |
            Multiple Media can be published per source, but they should all have the same viewpoint. They can differ in:
              * quality: `main` is higher resolution while `preview` is low resolution and low framerate.
          type: string
          enum:
            - preview
            - main
        deviceId:
          type: string
          description: The device that generated the media.
          example: 10058b7a
        mediaType:
          description: What type of media is contained.
          type: string
          enum:
            - audio
            - video
            - image
        startTimestamp:
          description: Start time of the media.
          type: string
          format: date-time
        endTimestamp:
          description: End time of the media.
          type: string
          format: date-time
      required:
        - type
        - startTimestamp
        - endTimestamp
        - deviceId
        - mediaType

    ApiMediaIncludes:
      type: object
      properties:
        flvUrl:
          type: string
          nullable: true
          x-jsoninclude-nonnull-annotation: true
          description: 'Flash video delivered over HTTPS can be used to provide live streams, but also play back recordings.'
          example: 'https://media.c13.eagleyenetworks.com/media/streams/main/flv'
        rtspUrl:
          type: string
          x-jsoninclude-nonnull-annotation: true
          description: 'RTSP is a protocol to request media to be sent, and to multiplex said media over one or more connections back to the client.'
          example: 'rtsp://media.c13.eagleyenetworks.com/media/streams/main/rtsp'
        rtspsUrl:
          type: string
          x-jsoninclude-nonnull-annotation: true
          description: 'Same as RTSP, but communication happens over a TLS socket instead of an unencrypted TCP socket.'
          example: 'rtsps://media.c13.eagleyenetworks.com/media/streams/main/rtsp'
        rtspHttpsUrl:
          type: string
          x-jsoninclude-nonnull-annotation: true
          description: 'Same as RTSP, but instead of communication happening over TCP, the protocol is tunneled over HTTPS.'
          example: 'rtsp://media.c13.eagleyenetworks.com:443/media/streams/main/rtsp'
#        hlsUrl:
#          type: string
#          x-jsoninclude-nonnull-annotation: true
#          description: Http Live Streaming can be used to deliver a live stream over HTTPS.
#          example: 'https://media.c13.eagleyenetworks.com/media/streams/main/hls'
        multipartUrl:
          type: string
          x-jsoninclude-nonnull-annotation: true
          description: Proprietary protocol that uses multipart over HTTPS to deliver raw encoded image, video and audio frames as they become available
          example: 'https://media.c13.eagleyenetworks.com/media/streams/main/multipart'
        mp4Url:
          type: string
          nullable: true
          x-jsoninclude-nonnull-annotation: true
          description: 'MPEG-4 Part 14 files, also known as “.mp4” files, retrieved over HTTPS to play back recorded video and sometimes audio streams. Not all video and audio codecs are supported if strictly following the standards.'
          example: 'https://media.c13.eagleyenetworks.com/media/recordings.mp4'

  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
  - bearerAuth: []