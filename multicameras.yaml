openapi: "3.0.0"
info:
  title: MultiCameras 
  version: 3.0.0
servers:
  - url: 'https://{BaseUrl}/api/v3.0/'
    description: "Eagle Eye Networks API Server"
x-readme:
  explorer-enabled: true

paths:
  /multiCameras:
    get:
      operationId: listMultiCameras
      description: >
       This endpoint allows you to retrieve a list of MultiCameras for a given account and location. MultiCameras are devices such as DVRs that have multi cameras connected.  

       It is important to note that after using the pageSize parameter, the "totalSize" in the response represents the total number of available devices, not the number of
       bridges resulting from the query string. 
      tags:
        - MultiCameras
      parameters:
        - $ref: '#/components/parameters/accountId__in'
        - $ref: '#/components/parameters/locationId__in'
        - $ref: '#/components/parameters/bridgeId__in'

        # Include parameters
        - $ref: '#/components/parameters/include'

        # Pagination
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageToken'
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageSize'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedMultiCameraResponse'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

    post:
      operationId: addMultiCamera
      description: This endpoint allows a MultiCamera to be associated with an account. It can only be called with an end-user account and will fail 
        if called with another type of account.
      tags:
        - MultiCameras
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAddMultiCamera'
      responses:
        '201':
          description: MultiCamera added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMultiCameraMain'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '409':
          description: There was a conflict while trying to perform your request.
          content:
            application/json:
              schema:
                $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/schemas/ApiV3Error'
              examples:
                 alreadyExists:
                  description: The multiCamera you're trying to add is already added or currently being added in the system. There cannot
                    be duplicated multiCamera (using the same MAC address or GUID). Make sure to remove the existing one before
                    you proceed to add it again.
                  value:
                    code: 409
                    status: alreadyExists
                    message: "The resource already exists."
                    details: [
                      {
                        reason: "The resource already exists",
                        domain: <service>,
                        metadata:
                          {
                            path: "/api/v3.0/<resource>"
                          }
                      }
                    ]
        '500':
          description: The request encountered an internal error.
          content:
            application/json:
              schema:
                $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/schemas/ApiV3Error'
        '504':
          description: The request had a deadline that expired before the operation completed.
          content:
            application/json:
              schema:
                $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/schemas/ApiV3Error'

  /multiCameras/{multiCameraId}:

    parameters:
      - in: path
        name: multiCameraId
        schema:
          type: string
        required: true

    get:
      operationId: getMultiCamera
      description: This endpoint allows you to retrieve information about a multiCamera based on its ID. 
      tags:
        - MultiCameras
      parameters:
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMultiCameraWithIncludes'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

    delete:
      operationId: deleteMultiCamera
      description: >
       This endpoint allows you to dis-associate a multiCamera from the account, removing all references, recordings, and events.  
         
       This request will be blocked until the multiCamera has been fully removed.
      tags:
        - MultiCameras
      responses:
        '204':
          description: MultiCamera deleted.
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '409':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/conflict'        
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

    patch:
      operationId: updateMultiCamera
      description: This endpoint allows you to update a multicamera's data based on its ID. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMultiCameraUpdate'
      tags:
        - MultiCameras
      responses:
        '204':
          description: MultiCamera Updated
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

  /multiCameras/{multiCameraId}/channels:
  
    parameters:
      - in: path
        name: multiCameraId
        schema:
          type: string
        required: true

    get:
      operationId: getMultiCameraChannels
      description: >
       This endpoint allows you to retrieve the channel info of a multicamera.  
         
       It is important to note that after using the pageSize parameter, the "totalSize" in 
       the response represents the total number of available devices, not the number of bridges resulting from the query string.
      tags:
        - MultiCameras
      parameters:
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageToken'
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPaginatedMultiCameraChannelResponse'
        '400':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/validationError'
        '401':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/unauthorized'
        '403':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/forbidden'
        '404':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/resourceNotFound'
        '500':
          $ref: 'https://commonswagger.cameramanager.com/error.yaml#/components/responses/internalServerError'

components:
  parameters:

    locationId__in:
      in: query
      name: locationId__in
      required: false
      description: List of Location IDs to filter on that is comma separated.
      schema:
        type: array
        example: ["2428fda3-389f-48ce-b062-85875dd6b2e2"] # EEN VMS location id value
        items:
          type: string

    accountId__in:
      in: query
      name: accountId__in
      required: false
      description: List of Account IDs to filter on that is comma separated.
      schema:
        $ref: '#/components/schemas/ApiEsns'

    bridgeId__in:
      in: query
      name: bridgeId__in
      required: false
      description: List of Bridge IDs to filter on that is comma separated.
      schema:
        $ref: '#/components/schemas/ApiEsns'

    include:
      in: query
      name: include
      schema:
        type: array
        items:
          type: string
          enum:
            - status
            - locationSummary
            - deviceAddress
            - timeZone
            - notes
            - tags
            - devicePosition
            - networkInfo
            - deviceInfo
            - firmware
            - visibleByBridges

  schemas:

    ApiEsns:
      type: array
      items:
        type: string
        pattern: '^[a-fA-F0-9]{8},?$'
        example: "00001106,00001107" # EEN VMS Demo Account value

    ApiPaginatedMultiCameraResponse:
      allOf:
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApiMultiCameraWithIncludes'

    ApiMultiCameraWithIncludes:
      allOf:
        - $ref: '#/components/schemas/ApiMultiCameraMain'
        - $ref: '#/components/schemas/ApiMultiCameraIncludes'
        - type: object

    ApiMultiCameraMain:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        name:
          type: string
        bridgeId:
          $ref: '#/components/schemas/BridgeId'
        locationId:
          $ref: '#/components/schemas/LocationId'
      required:
        - id
        - accountId
        - name
        - bridgeId
        
    ApiMultiCameraChannel:
      type: object
      properties:
        guid:
          $ref: '#/components/schemas/Guid'
        cameraId:
          type: string
        channelName:
          type: string
          example: Channel 01
      required:
        - guid
        - channelName

    ApiPaginatedMultiCameraChannelResponse:
      allOf:
        - $ref: 'https://commonswagger.cameramanager.com/pagination.yaml#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ApiMultiCameraChannel'

    ApiMultiCameraIncludes:
      type: object
      properties:
        status:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/DeviceStatus'
        locationSummary:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/LocationSummary'
        deviceAddress:
          $ref: 'https://commonswagger.cameramanager.com/devices.yaml#/components/schemas/DeviceAddress'
        timeZone:
          $ref: '#/components/schemas/ApiTimeZone'
        notes:
          type: string
          example: Previously used for laser eye surgery. Records pizzas as squares
        tags:
          $ref: '#/components/schemas/DeviceTags'
        devicePosition:
          $ref: '#/components/schemas/ApiDevicePosition'
        networkInfo:
          $ref: '#/components/schemas/ApiNetworkInfo'
        deviceInfo:
          $ref: '#/components/schemas/ApiDeviceInfo'
        firmware:
          $ref: '#/components/schemas/ApiFirmware'
        visibleByBridges:
          type: array
          items:
            type: string
            pattern: ^(?:0[xX])?[0-9a-fA-F]{8}$
            example: 1000f60d

    ApiAddMultiCamera:
        type: object
        properties:
          guid:
            $ref: '#/components/schemas/Guid'
          name:
            $ref: '#/components/schemas/MultiCameraName'
          tags:
            $ref: '#/components/schemas/DeviceTags'
          locationId:
            $ref: '#/components/schemas/LocationId'
          bridgeId:
            $ref: '#/components/schemas/BridgeId' 
          credentials:
            $ref: '#/components/schemas/ApiDeviceCredentials'            
        required:
          - name
          - bridgeId
          - guid

    MultiCameraName:
      type: string
      description: >
        The name to assign to the multiCamera. It is used to help identifying the multiCamera in the account.

    BridgeId:
      type: string
      pattern: ^(?:0[xX])?[0-9a-fA-F]{8}$
      example: 1000f60d
      description: >
        The bridge a multiCamera is connected to. 

    LocationId:
      description: ID Of the location.
      type: string
      example: 2428fda3-389f-48ce-b062-85875dd6b2e2

    Guid:
      type: string
      format: uuid
      example: ddfa5b34-5d04-431e-8287-110fe87edf71

    MacAddress:
      type: string
      pattern: ^([A-F0-9]{2}:){5}[A-F0-9]{2}$
      example: 8A:D4:AD:09:DF:91

    IpAddress:
      type: string
      pattern: ^(?:25[0-5]|2[0-4]\d|[0-1]?\d{1,2})(?:\.(?:25[0-5]|2[0-4]\d|[0-1]?\d{1,2})){3}$
      example: 10.143.55.140

    DeviceTags:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 64

    ApiTimeZone:
      type: object
      properties:
        zone:
          type: string
          example: "Americas/Chicago"
          description: 'The timezone the account is in.'
        offset:
          type: string
          example: '+10:00'
          description: 'The time offset from UTC the account is on.'
          readOnly: true

    ApiDevicePosition:
      type: object
      properties:
        latitude:
          description: The latitude of the device. (WGS 84)
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 52.3074013
        longitude:
          description: The longitude of the device. (WGS 84).
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 4.9459903
        azimuth:
          type: number
          format: double
          minimum: 0
          maximum: 360
          example: 7.419435
        rangeInFeet:
          type: number
          format: double
          minimum: 0
          example: 37.622658
        rangeInMeters:
          type: number
          format: double
          minimum: 0
          example: 50.40
        floor:
          type: integer
          minimum: 0
          example: 50

    ApiNetworkInfo:
      type: object
      properties:
        globalIP:
          $ref: '#/components/schemas/IpAddress'
        adapters:
          type: array
          items:
            $ref: '#/components/schemas/ApiAdapterInfo'
            
    ApiDeviceCredentials:
      type: object
      properties:
        username:
          type: string
          description: Username to use when authenticating with the device
        password:
          type: string
          description: Password to use when authenticating with the device

    ApiDeviceInfo:
      type: object
      properties:
        icon:
          description: Icon of multicamera.
          type: string
        make:
          description: The Manufactorer or brand of the multiCamera.
          type: string
        model:
          description: The model of the multiCamera.
          type: string
        guid:
          $ref: '#/components/schemas/Guid'

    ApiFirmware:
      type: object
      properties:
        currentVersion:
          type: string
          example: v20211019_542_3022
        status:
          description: >
            Indicates what the current status is of the device's firmware:
            * `up-to-date`: The device's firmware is fully up-to-date.
            * `upgradable`: The device's firmware can be upgraded.
            * `unknown`: It is currently unknown if the device's firmware can and should be upgraded.
          type: string
          enum:
            - up-to-date
            - upgradable
            - unknown
        targetVersion:
          description: Describes, if known, what firmware version this device shuold be upgraded to.
          type: string
          example: v20211025_544_6753

    ApiAdapterInfo:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        ipAddress:
          $ref: '#/components/schemas/IpAddress'

    ApiMultiCameraUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 126
          description: Name of the multiCamera
          example: First multiCamera
        notes:
          type: string
          description: Notes
          example: MultiCamera used for demo purposes
        locationId:
          $ref: '#/components/schemas/LocationId'
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
  - bearerAuth: []